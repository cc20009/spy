{
    "contents" : "\n# Call the required packages\nlibrary(ROAuth)\nlibrary(RJSONIO)\nlibrary(plyr)\nlibrary(data.table)\nlibrary(RMySQL)\nlibrary(httr)\nlibrary(lubridate)\nlibrary(httpuv)\nlibrary(ggplot2)\n\n\n\ncon <- dbConnect(MySQL(), user=\"carlton\", password= '1234password',db='import_tradeking' )\n\ncacheObject <- function(mxt.data, chr.location, chr.name) {\n  \n  suppressWarnings(dir.create(paste0('/home/ubuntu/cache/',chr.location)))\n  saveRDS(mxt.data, paste0('/home/ubuntu/cache/',chr.location,'/',chr.name, '.rds'))\n  \n}\n\n\ngetCachedObject <- function(chr.location, chr.name) {\n  \n  dt <- readRDS(paste0('/home/ubuntu/cache/',chr.location,'/',chr.name,'.rds'))\n  return(dt)\n  \n}\n\n\ndescribeCache <- function(chr.location) {\n  \n  chr.directory <- list.files(paste0('/home/ubuntu/cache/', chr.location))\n  return(chr.directory)\n  \n}\n\n\n\n\n\norganizeDataLivevol <- function(dt) {\n  \n  dt <-  dt[,list(symbol=underlying_symbol, \n                  trade_date=as.character(quote_date),\n                  root, \n                  expiration=as.character(expiration),\n                  strike,\n                  call_put=option_type, \n                  bid=bid_1545, \n                  ask=ask_1545, \n                  underlying = underlying_ask_1545,\n                  distance_from_underlying = ifelse(option_type=='c', underlying_ask_1545 - strike, strike- underlying_ask_1545),\n                  iv = implied_volatility_1545,\n                  vol = trade_volume,\n                  delta = delta_1545,\n                  gamma = gamma_1545,\n                  theta = theta_1545, \n                  vega = vega_1545,\n                  rho = rho_1545,\n                  vwap,\n                  trade_volume,\n                  strip=paste0(substring(expiration,1,8),'01'))]\n  \n  return(dt)\n  \n  \n}\n\n\n\n\n\norganizeDataTradeking <- function(dt) {\n  \n  dt <-  dt[,list(symbol=underlying_symbol, \n                  trade_date=as.character(quote_date),\n                  root=underlying_symbol, \n                  expiration=as.character(expiration),\n                  strike,\n                  call_put=option_type, \n                  bid, \n                  ask, \n                  underlying = underlying_ask,\n                  distance_from_underlying = ifelse(option_type=='c', underlying_ask - strike, strike- underlying_ask),\n                  iv = implied_volatility,\n                  vol = trade_volume,\n                  delta,\n                  gamma,\n                  theta, \n                  vega,\n                  rho,\n                  vwap,\n                  trade_volume,\n                  strip=paste0(substring(expiration,1,8),'01'))]\n  \n  return(dt)\n  \n  \n}\n\n\n\n\n\n# improved list of objects\n.ls.objects <- function (pos = 1, pattern, order.by,\n                         decreasing=FALSE, head=FALSE, n=5) {\n  napply <- function(names, fn) sapply(names, function(x)\n    fn(get(x, pos = pos)))\n  names <- ls(pos = pos, pattern = pattern)\n  obj.class <- napply(names, function(x) as.character(class(x))[1])\n  obj.mode <- napply(names, mode)\n  obj.type <- ifelse(is.na(obj.class), obj.mode, obj.class)\n  obj.size <- napply(names, object.size)\n  obj.dim <- t(napply(names, function(x)\n    as.numeric(dim(x))[1:2]))\n  vec <- is.na(obj.dim)[, 1] & (obj.type != \"function\")\n  obj.dim[vec, 1] <- napply(names, length)[vec]\n  out <- data.frame(obj.type, obj.size, obj.dim)\n  names(out) <- c(\"Type\", \"Size\", \"Rows\", \"Columns\")\n  if (!missing(order.by))\n    out <- out[order(out[[order.by]], decreasing=decreasing), ]\n  if (head)\n    out <- head(out, n)\n  out\n}\n# shorthand\nlsos <- function(..., n=10) {\n  .ls.objects(..., order.by=\"Size\", decreasing=TRUE, head=TRUE, n=n)\n}\n\n\n\n",
    "created" : 1448288223903.000,
    "dirty" : false,
    "encoding" : "",
    "folds" : "",
    "hash" : "336248255",
    "id" : "D4043C2",
    "lastKnownWriteTime" : 1448289991,
    "path" : "~/rPackageFunctions/toCreate.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled12"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}