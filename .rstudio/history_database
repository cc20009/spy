1444668304568:2+2
1444669214139:2+2
1444669281584:2+2
1444669314416:install.packages('data.table')
1444669749244:install.packages('data.table')
1444669758970:install.packages('data.table')
1444670045721:Sys.Info()
1444670058494:Sys.info
1444670061315:Sys.info()
1444670074512:install.packages('data.table')
1444670570899:install.packages('data.table')
1444670887742:library(ggplot2)
1444671200908:install.packages('data.table')
1445191752887:library(data.table)
1445192584980:install.packages('data.table')
1445192640426:install.packages('XML')
1445192650876:install.packages('stringr')
1445192652978:install.packages('rvest')
1445192807821:library(XML)
1445192808002:library(stringr)
1445192808043:library(data.table)
1445192808174:library(rvest)
1445192808315:spy_option <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1445192808829:dt.timecodes <- data.table(unix_timecodes = spy_option %>% html_nodes("option") %>% html_attr("value"))
1445192808895:dt.timecodes[,expiration:= substring(as.POSIXct(as.numeric(unix_timecodes), origin="1970-01-01"), 1,10)]
1445192808904:dt.allOptionChains <- data.table()
1445192808905:for ( i in 1:nrow(dt.timecodes)) {
1445192808906:datetime <- Sys.time()
1445192808906:url <- dt.timecodes[i,]
1445192808906:spy_option <- read_html(paste0("http://finance.yahoo.com/q/op?s=SPY&date=", url$unix_timecodes))
1445192808907:chr.underlying <- as.character(spy_option %>% html_nodes(xpath = '//*[@id="yfs_l84_SPY"]'))
1445192808907:int.underlying <- as.numeric(substring(chr.underlying,
1445192808907:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1],
1445192808907:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1] +  5 ))
1445192808908:dt.option_chain <- readHTMLTable(paste0("http://finance.yahoo.com/q/op?s=SPY&date=", url$unix_timecodes))
1445192808908:dt.1 <- data.frame(dt.option_chain[2])
1445192808909:names(dt.1) <- c("Strike", "Contract_Name", "Last", "Bid", "Ask", "Change", "pct_Change", "Volume", "Open_Interest", "IV")
1445192808909:dt.1 <- data.table(dt.1)
1445192808910:dt.2 <- data.frame(dt.option_chain[3])
1445192808910:names(dt.2) <- c("Strike", "Contract_Name", "Last", "Bid", "Ask", "Change", "pct_Change", "Volume", "Open_Interest", "IV")
1445192808910:dt.2 <- data.table(dt.2)
1445192808911:dt.options <- rbind(dt.1, dt.2)
1445192808911:dt.options <- dt.options[,list(strike=as.numeric(as.character(Strike)),
1445192808912:contract_name=as.character(Contract_Name),
1445192808912:call_put = ifelse(grepl('C', as.character(Contract_Name)) == T , 'c', 'p'),
1445192808912:expiration = as.character(url$expiration),
1445192808913:last=as.numeric(as.character(Last)),
1445192808913:bid=as.numeric(as.character(Bid)),
1445192808913:ask=as.numeric(as.character(Ask)),
1445192808914:change=as.numeric(as.character(Change)),
1445192808914:pct_change=as.numeric(as.character(substring(pct_Change, 1, nchar(as.character(pct_Change)) - 1))),
1445192808915:volume=as.numeric(as.character(Volume)),
1445192808915:oi= as.numeric(as.character(Open_Interest)),
1445192808916:iv = as.numeric(as.character(substring(IV, 1, nchar(as.character(IV)) - 1)))/100,
1445192808916:underlying = int.underlying,
1445192808917:timestamp = datetime)]
1445192808918:dt.allOptionChains <- rbind(dt.allOptionChains, dt.options)
1445192808919:}
1445193033846:dt.allOptionChains
1445193044616:install.packages('RMySql')
1445193050594:install.packages('RMySQL')
1445193303580:install.packages('RMySQL')
1445193316519:library(RMySQL)
1445193518673:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "import_yahoo")
1445193566049:dbWriteTable(con, value = dt.allOptionChains, name = "spy", append = TRUE )
1445193582570:dbSendQuery()dt.allOptionChains
1445193583684:dt.allOptionChains
1445193601643:?"dbWriteTable"
1445193625925:dbWriteTable(con, value = dt.allOptionChains, name = "spy", append = TRUE )
1445193685770:dbWriteTable(con, value = dt.allOptionChains, name = "spy", append = TRUE, row.names=F )
1445194532390:install.packages('ROAth')
1445194545965:install.packages('ROAuth')
1445194943904:library(ROauth)
1445194952438:install.packages('ROAuth')
1445195058276:install.packages('ROAuth')
1445202734419:library(ROAuth)
1445202740221:library(data.table)
1445202745458:install.packages('ROAuth')
1445202761431:install.packages('RJSONIO')
1445202774544:install.packages('plyr')
1445202794134:# Call the required packages
1445202794134:library(ROAuth)
1445202794321:library(RJSONIO)
1445202794360:library(plyr)
1445202794475:library(data.table)
1445202794475:library(RMySQL)
1445202794668:# Set your application keys
1445202794668:cKey <- 'pj1AhkYf7GcMqhQyQ8md7cr2QbjNCTxSN1ITXLHZ'
1445202794669:cSecret <- 'DsWlJhx3D7otGFYZKpP3cGe3dDaPncvBjYH5bKyf'
1445202794669:oKey <- 'r0HN0ddoXDAiIgmuNuzNT3F3hvIqSAJtRsTdFFlk'
1445202794669:oSecret <- 'xh1o441axvXktckX7n1pCQTSsuWdz52GmJYxHTZp'
1445202794670:# Set the API endpoint
1445202794670:tkURL <- "https://api.tradeking.com/v1/market/ext/quotes.json"
1445202794671:credentials <- OAuthFactory$new(consumerKey=cKey,
1445202794671:consumerSecret=cSecret,
1445202794671:oauthKey = oKey,
1445202794671:oauthSecret = oSecret,
1445202794672:needsVerifier=FALSE,
1445202794672:signMethod='HMAC')
1445202794677:# Update the connection so the handshake is TRUE
1445202794677:credentials$handshakeComplete <- TRUE
1445202794678:### Get All SPY Options
1445202794678:tkURLD <- "https://api.tradeking.com/v1/market/options/search.json"
1445202794679:query <- list()
1445202794679:query[[ "symbol" ]] <- "SPY"
1445202794679:query[[ "query" ]] <- "xyear-gt:2014"
1445202794680:response <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1445202819395:temp <- fromJSON(response)
1445202820125:SPY_Options <- NULL
1445202820126:for (i in 1:length(temp$response$quotes$quote))
1445202820127:{
1445202820127:tempB <- as.data.frame(t(temp$response$quotes$quote[[i]]))
1445202820127:SPY_Options <- rbind.fill(SPY_Options, tempB)
1445202820127:}
1445202889637:SPY_Options
1445202894429:data.table(SPY_Options)
1445202896799:con <- dbConnect(MySQL(), user="root", dbname = "import_tradeking")
1445203408201:library(XML)
1445203409709:library(stringr)
1445203414302:library(ROAuth)
1445203415566:library(RJSONIO)
1445203415777:library(plyr)
1445203416506:library(data.table)
1445203417079:library(RMySQL)
1445203422718:# Set your application keys
1445203422718:cKey <- 'pj1AhkYf7GcMqhQyQ8md7cr2QbjNCTxSN1ITXLHZ'
1445203422718:cSecret <- 'DsWlJhx3D7otGFYZKpP3cGe3dDaPncvBjYH5bKyf'
1445203422719:oKey <- 'r0HN0ddoXDAiIgmuNuzNT3F3hvIqSAJtRsTdFFlk'
1445203422719:oSecret <- 'xh1o441axvXktckX7n1pCQTSsuWdz52GmJYxHTZp'
1445203422719:# Set the API endpoint
1445203422720:tkURL <- "https://api.tradeking.com/v1/market/ext/quotes.json"
1445203422720:credentials <- OAuthFactory$new(consumerKey=cKey,
1445203422720:consumerSecret=cSecret,
1445203422720:oauthKey = oKey,
1445203422721:oauthSecret = oSecret,
1445203422721:needsVerifier=FALSE,
1445203422721:signMethod='HMAC')
1445203422725:# Update the connection so the handshake is TRUE
1445203422726:credentials$handshakeComplete <- TRUE
1445203422726:### Get All SPY Options
1445203422727:tkURLD <- "https://api.tradeking.com/v1/market/options/search.json"
1445203422727:query <- list()
1445203422727:query[[ "symbol" ]] <- "SPY"
1445203422727:query[[ "query" ]] <- "xyear-gt:2014"
1445203422728:response <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1445203449012:temp <- fromJSON(response)
1445203449603:SPY_Options <- NULL
1445203449603:for (i in 1:length(temp$response$quotes$quote))
1445203449604:{
1445203449604:tempB <- as.data.frame(t(temp$response$quotes$quote[[i]]))
1445203449604:SPY_Options <- rbind.fill(SPY_Options, tempB)
1445203449604:}
1445203575655:SPY_Options <- as.data.table(SPY_Options)
1445203575657:dataset <- SPY_Options[, .(
1445203575658:symbol,
1445203575658:issue_desc,
1445203575658:put_call,
1445203575658:xdate,
1445203575658:strike = as.numeric((paste(strikeprice))),
1445203575658:ask = as.numeric((paste(ask))),
1445203575659:ask_time,
1445203575659:bid = as.numeric((paste(bid))),
1445203575659:bid_time,
1445203575659:last = as.numeric((paste(last))),
1445203575659:dte = as.numeric((paste(days_to_expiration))),
1445203575660:imp_volatility = as.numeric((paste(imp_volatility))),
1445203575660:irho = as.numeric((paste(irho))),
1445203575660:itheta = as.numeric((paste(itheta))),
1445203575660:ivega = as.numeric((paste(ivega))),
1445203575660:idelta = as.numeric((paste(idelta))),
1445203575661:igamma = as.numeric((paste(igamma))),
1445203575661:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1445203575661:opt_val = as.numeric((paste(opt_val))),
1445203575661:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1445203575662:timestamp = as.numeric((paste(timestamp))),
1445203575662:vl = as.numeric((paste(gsub(",", "", vl)))),
1445203575662:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1445203575662:time_added = Sys.time()
1445203575663:)]
1445203588901:SPY_Options
1445203616847:SPY_Options <- as.data.table(SPY_Options)
1445203617761:dataset <- SPY_Options[, .(
1445203617984:symbol,
1445203618171:issue_desc,
1445203618325:put_call,
1445203618495:xdate,
1445203618664:strike = as.numeric((paste(strikeprice))),
1445203618832:ask = as.numeric((paste(ask))),
1445203618996:ask_time,
1445203619169:bid = as.numeric((paste(bid))),
1445203619330:bid_time,
1445203619519:last = as.numeric((paste(last))),
1445203619695:dte = as.numeric((paste(days_to_expiration))),
1445203619875:imp_volatility = as.numeric((paste(imp_volatility))),
1445203620055:irho = as.numeric((paste(irho))),
1445203620238:itheta = as.numeric((paste(itheta))),
1445203620423:ivega = as.numeric((paste(ivega))),
1445203620601:idelta = as.numeric((paste(idelta))),
1445203620789:igamma = as.numeric((paste(igamma))),
1445203620958:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1445203621155:opt_val = as.numeric((paste(opt_val))),
1445203621330:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1445203621522:timestamp = as.numeric((paste(timestamp))),
1445203621715:vl = as.numeric((paste(gsub(",", "", vl)))),
1445203621917:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1445203622090:time_added = Sys.time()
1445203622555:)]
1445203628293:dataset
1445203704812:install.packages('ggplot2')
1445263838383:dataset
1445264030320:con <- dbConnect(MySQL(), user="carlton", dbname = "import_tradeking")
1445264042411:con <- dbConnect(MySQL(), user="carlton", password= '1234password' ,dbname = "import_tradeking")
1445264050001:dbWriteTable(con, "spy", dataset, row.names = FALSE, append = TRUE)
1445265036380:sqlFromRObj
1445275893079:library(ROAuth)
1445275893080:library(RJSONIO)
1445275893080:library(plyr)
1445275893080:library(data.table)
1445275893081:library(RMySQL)
1445275893081:# Set your application keys
1445275893081:cKey <- 'pj1AhkYf7GcMqhQyQ8md7cr2QbjNCTxSN1ITXLHZ'
1445275893082:cSecret <- 'DsWlJhx3D7otGFYZKpP3cGe3dDaPncvBjYH5bKyf'
1445275893082:oKey <- 'r0HN0ddoXDAiIgmuNuzNT3F3hvIqSAJtRsTdFFlk'
1445275893082:oSecret <- 'xh1o441axvXktckX7n1pCQTSsuWdz52GmJYxHTZp'
1445275893083:# Set the API endpoint
1445275893083:tkURL <- "https://api.tradeking.com/v1/market/ext/quotes.json"
1445275893083:credentials <- OAuthFactory$new(consumerKey=cKey,
1445275893083:consumerSecret=cSecret,
1445275893084:oauthKey = oKey,
1445275893084:oauthSecret = oSecret,
1445275893084:needsVerifier=FALSE,
1445275893084:signMethod='HMAC')
1445275893089:# Update the connection so the handshake is TRUE
1445275893089:credentials$handshakeComplete <- TRUE
1445275893090:### Get All SPY Options
1445275893090:tkURLD <- "https://api.tradeking.com/v1/market/options/search.json"
1445275893091:query <- list()
1445275893091:query[[ "symbol" ]] <- "SPY"
1445275893091:query[[ "query" ]] <- "xyear-gt:2014"
1445275893091:response <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1445275925422:temp <- fromJSON(response)
1445275926136:SPY_Options <- NULL
1445275926136:for (i in 1:length(temp$response$quotes$quote))
1445275926137:{
1445275926137:tempB <- as.data.frame(t(temp$response$quotes$quote[[i]]))
1445275926137:SPY_Options <- rbind.fill(SPY_Options, tempB)
1445275926137:}
1445275943224:SPY_Options <- as.data.table(SPY_Options)
1445275943227:dataset <- SPY_Options[, .(
1445275943227:symbol,
1445275943227:issue_desc,
1445275943228:put_call,
1445275943228:xdate,
1445275943228:strike = as.numeric((paste(strikeprice))),
1445275943228:ask = as.numeric((paste(ask))),
1445275943228:ask_time,
1445275943229:bid = as.numeric((paste(bid))),
1445275943229:bid_time,
1445275943229:last = as.numeric((paste(last))),
1445275943229:dte = as.numeric((paste(days_to_expiration))),
1445275943229:imp_volatility = as.numeric((paste(imp_volatility))),
1445275943230:irho = as.numeric((paste(irho))),
1445275943230:itheta = as.numeric((paste(itheta))),
1445275943230:ivega = as.numeric((paste(ivega))),
1445275943230:idelta = as.numeric((paste(idelta))),
1445275943231:igamma = as.numeric((paste(igamma))),
1445275943231:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1445275943231:opt_val = as.numeric((paste(opt_val))),
1445275943231:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1445275943232:timestamp = as.numeric((paste(timestamp))),
1445275943232:vl = as.numeric((paste(gsub(",", "", vl)))),
1445275943232:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1445275943233:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1445275943233:)]
1445275949979:dataset
1445275958914:con <- dbConnect(MySQL(), user="carlton", password= '1234password' ,dbname = "import_tradeking")
1445280732106:Sys.time()
1445280748142:format(Sys.time(), tz="America/New_York",usetz=TRUE)
1445280793123:weekdays(format(Sys.time(), tz="America/New_York",usetz=TRUE))
1445280818736:weekdays(format(Sys.Date(), tz="America/New_York",usetz=TRUE))
1445280823547:format(Sys.Date(), tz="America/New_York",usetz=TRUE)
1445280912963:as.Date(format(Sys.time(), tz="America/New_York",usetz=TRUE))
1445280923574:chr.current.date <- as.Date(format(Sys.time(), tz="America/New_York",usetz=TRUE))
1445280940044:format(Sys.time(), tz="America/New_York",usetz=TRUE)
1445280960983:chr.current.hour <- as.numeric(substring(format(Sys.time(), tz="America/New_York",usetz=TRUE), 12, 13))
1445280963004:chr.current.hour
1445280974618:weekday(chr.current.date)
1445280977931:weekdaya(chr.current.date)
1445280982334:weekdays(chr.current.date)
1445280990950:weekdays
1445281020158:weekdays('2015-10-20')
1445281027512:weekdays(as.Date('2015-10-20'))
1445281032839:weekdays(as.Date('2015-10-21'))
1445281040920:weekdays(as.Date('2015-10-22'))
1445281050091:weekdays(as.Date('2015-10-23))
1445281053408:weekdays(as.Date('2015-10-23'))
1445281058990:if (weekdays(chr.current.date) %in% c('Monday','Tuesday','Wednesday', 'Thursday', 'Friday'))
1445281072187:weekdays(chr.current.date) %in% c('Monday','Tuesday','Wednesday', 'Thursday', 'Friday')
1445281073689:weekdays(chr.current.date) %in% c('Monday','Tuesday','Wednesday', 'Thursday', 'Friday')
1445281078828:chr.current.hour
1445286158411:library(httr)
1445286159018:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1445286159671:status <- content(resp)$response$status$current
1445286162286:status
1445286205771:library(httr)
1445286205983:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1445286206142:chr.market.status <- content(resp)$response$status$current
1445286208201:chr.market.status
1445286222474:resp
1445356765487:con <- dbConnect(MySQL(), user="carlton", password= '1234password' ,dbname = "import_tradeking")
1445356800128:con <- dbConnect(MySQL(), host = "ec2-52-89-19-102.us-west-2.compute.amazonaws.com", port = 3306, user="arif" ,dbname = "import_tradeking")
1445356804316:con <- NULL
1445356806513:con <- dbConnect(MySQL(), user="carlton", password= '1234password' ,dbname = "import_tradeking")
1445357539354:con <- dbConnect(MySQL(), user="carlton", password= '1234password' ,dbname = "import_tradeking")
1445358334895:con <- dbConnect(MySQL(), user="carlton", password= '1234password' ,dbname = "import_tradeking")
1445358353681:dbSendQuery(conn = con,statement = 'select time_added, count(*) from import_tradeking.spy group by time_added; ')
1445358365776:dbGetQuery(conn = con,statement = 'select time_added, count(*) from import_tradeking.spy group by time_added; ')
1445358370949:con <- dbConnect(MySQL(), user="carlton", password= '1234password' ,dbname = "import_tradeking")
1445358371317:dbGetQuery(conn = con,statement = 'select time_added, count(*) from import_tradeking.spy group by time_added; ')
1445358379191:library(slackr)
1445358385959:library(devtools)
1445358391850:install.packages('devtools')
1445358463375:dbGetQuery(conn = con,statement = 'select time_added, count(*) from import_tradeking.spy group by time_added; ')
1446158151593:library(RCurl)
1446158186397:url <- "ftp://199.244.65.22 "
1446158186800:userpwd <- "asorathia:MTcsAM6s"
1446158187227:filenames <- getURL(url, userpwd = userpwd,
1446158187608:ftp.use.epsv = FALSE,dirlistonly = TRUE)
1446158192677:filenames
1446158240606:url <- "ftp://199.244.65.22/options-eod-calcs/ "
1446158240981:userpwd <- "asorathia:MTcsAM6s"
1446158241319:filenames <- getURL(url, userpwd = userpwd,
1446158241615:ftp.use.epsv = FALSE,dirlistonly = TRUE)
1446158244730:filenames
1446158259387:url <- "ftp://199.244.65.22/options-eod-calcs/200501/ "
1446158259579:userpwd <- "asorathia:MTcsAM6s"
1446158259751:filenames <- getURL(url, userpwd = userpwd,
1446158260225:ftp.use.epsv = FALSE,dirlistonly = TRUE)
1446158262976:filenames
1446158267964:url <- "ftp://199.244.65.22/options-eod-calcs/200501/20050110/ "
1446158268118:userpwd <- "asorathia:MTcsAM6s"
1446158268257:filenames <- getURL(url, userpwd = userpwd,
1446158268682:ftp.use.epsv = FALSE,dirlistonly = TRUE)
1446158272798:filenames
1446158280626:url <- "ftp://199.244.65.22/options-eod-calcs/200501/20050110/SPY-options-eod-calcs-20050110.zip "
1446158280820:userpwd <- "asorathia:MTcsAM6s"
1446158280978:filenames <- getURL(url, userpwd = userpwd,
1446158281289:ftp.use.epsv = FALSE,dirlistonly = TRUE)
1446158286085:filenames
1446158504622:url <- "ftp://199.244.65.22/options-eod-calcs/200501/20050110/SPY-options-eod-calcs-20050110.zip "
1446158504793:userpwd <- "asorathia:MTcsAM6s"
1446158504980:filenames <- getURL(url, userpwd = userpwd,
1446158505560:ftp.use.epsv = FALSE,dirlistonly = FALSE)
1446171067956:filen
1446171074837:data.table()
1446171226197:data.table(readRDS('/home/ubuntu/optionsdata/out.rds'))
1446171243309:dt.livevol <- data.table(readRDS('/home/ubuntu/optionsdata/out.rds'))
1446171364083:dt.livevol
1446171379155:dt.livevol <- data.table(readRDS('/home/ubuntu/optionsdata/out.rds'))
1446174604579:temp = list.files(path = '/home/ubuntu/optionsdata/rout/' pattern="*.rds")
1446174609410:temp = list.files(path = '/home/ubuntu/optionsdata/rout/', pattern="*.rds")
1446174611280:temp
1446174637317:getwd()
1446174658550:i <- 'spy_20150828.rds'
1446174660383:temps <- readRDS(paste0('/home/ubuntu/optionsdata/rout/', i))
1446174661943:temps
1446174685004:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "import_livevol")
1446174686038:dbWriteTable(con, value = temps, name = "spy", append = TRUE, row.names=F )
1446174760993:for (i in temp) {
1446174760993:print(i)
1446174760994:temps <- readRDS(paste0('/home/ubuntu/optionsdata/rout/', i))
1446174760994:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "import_livevol")
1446174760994:dbWriteTable(con, value = temps, name = "spy", append = TRUE, row.names=F )
1446174760994:}
1446174773491:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "import_livevol")
1446174801528:all_cons <- dbListConnections(MySQL())
1446174801536:> for(con in cons)
1446174801537:+  dbDisconnect(con)
1446174814664:all_cons <- dbListConnections(MySQL())
1446174817374:all_cons
1446174827258:for(con in all_cons) {
1446174827435:dbDisconnect(con)
1446174827770:}
1446174829594:temp = list.files(path = '/home/ubuntu/optionsdata/rout/', pattern="*.rds")
1446174829848:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "import_livevol")
1446174836007:for (i in temp) {
1446174836007:print(i)
1446174836007:temps <- readRDS(paste0('/home/ubuntu/optionsdata/rout/', i))
1446174836007:dbWriteTable(con, value = temps, name = "spy", append = TRUE, row.names=F )
1446174836008:}
1446174847745:for (i in temp) {
1446174847745:print(i)
1446174847745:temps <- readRDS(paste0('/home/ubuntu/optionsdata/rout/', i))
1446174847745:dbWriteTable(con, value = temps, name = "spy", append = TRUE, row.names=F )
1446174847746:}
1446175515746:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password")
1446175530825:dbGetQuery(conn = con,statement = 'select quote_date, (underlying_ask_eod) from import_livevol.spy limit 5 ')
1446175564777:under <- data.table(dbGetQuery(conn = con,statement = 'select quote_date, avg(underlying_ask_eod) from import_livevol.spy group by quote_date '))
1446175583545:under
1446175618912:under <- data.table(dbGetQuery(conn = con,statement = 'select quote_date, avg(underlying_ask_eod) underlying from import_livevol.spy group by quote_date '))
1446175637686:ggplot(under, aes(x=as.Date(trade_date), y=underlying)) + geom_line()
1446175644569:library(ggplot2)
1446175652526:under
1446175678284:under
1446175681109:ggplot(under, aes(x=as.Date(trade_date), y=underlying)) + geom_line()
1446175691125:ggplot(under, aes(x=as.Date(quote_date), y=underlying)) + geom_line()
1446176041457:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 '))
1446208739259:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 & year(quote_date) =2014 '))
1446208764157:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and year(quote_date) =2014 '))
1446208771137:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "import_livevol")
1446208772923:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and year(quote_date) =2014 '))
1446210080924:under
1446210083840:warnings()
1446211008178:under
1446211090294:dt.spy <-  under[,list(symbol=underlying_symbol,
1446211090550:trade_date=as.character(quote_date),
1446211090747:root,
1446211090931:expiration=as.character(expiration),
1446211091107:strike,
1446211091273:call_put=option_type,
1446211091447:bid=bid_1545,
1446211091603:ask=ask_1545,
1446211091777:underlying = underlying_ask_eod,
1446211091944:distance_from_underlying = ifelse(option_type=='c', underlying_ask_eod - strike, strike- underlying_ask_eod),
1446211092121:iv = implied_volatility_1545,
1446211092294:vol = trade_volume,
1446211092457:delta = delta_1545,
1446211092630:gamma = gamma_1545,
1446211092805:theta = theta_1545,
1446211092970:vega = vega_1545,
1446211093145:rho = rho_1545,
1446211093324:vwap,
1446211093484:trade_volume,
1446211093659:strip=paste0(substring(expiration,1,8),'01'))]
1446211097564:dt.spy
1446211103258:dt.expiry <- merge(dt.spy[,sum(trade_volume), by=list(expiration,strip)], dt.spy[,sum(trade_volume), by=list(expiration,strip)][,max(V1), by=strip], by=c('strip','V1'))
1446211105710:dt.expiry
1446211114698:dt.spy <- dt.spy[vwap > 0 & root=='SPY'][expiration %in% dt.expiry$expiration]
1446211117022:dt.spy
1446480728862:temp
1446491295642:temp = list.files(path = '/home/ubuntu/optionsdata/outdir/', pattern="*.csv")
1446491298029:temp
1446491304678:temp = list.files(path = '/home/ubuntu/optionsdata/rout/', pattern="*.rds")
1446491307204:temp
1446492210998:temp = list.files(path = '/home/ubuntu/optionsdata/pythonimport/', pattern="*.rds")
1446492215005:temp = list.files(path = '/home/ubuntu/optionsdata/pythonimport/', pattern="*.csv")
1446492217273:temp
1446492228716:temp = list.files(path = '/home/ubuntu/optionsdata/pythonimport/outdir', pattern="*.csv")
1446492230878:temp
1446492241405:temp = list.files(path = '/home/ubuntu/optionsdata/pythonimport/outdir/', pattern="*.csv")
1446492243758:temp
1446492257359:temp = list.files(path = '/home/ubuntu/optionsdata/python_import/outdir/', pattern="*.csv")
1446492260736:head(temp)
1446492265077:tail(temp)
1446492599743:temp = list.files(path = '/home/ubuntu/optionsdata/python_import/outdir/', pattern="*.csv")
1446492605990:i <- '"SPY-options-eod-calcs-20151022.csv"'
1446492608656:i <- "SPY-options-eod-calcs-20151022.csv"
1446492610671:temps <- read.csv(paste0('/home/ubuntu/optionsdata/rout/', i))
1446492626590:temps <- read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i))
1446492629407:temps
1446492636275:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1446492637565:t
1446493882550:yahoo <- data.table(dbGetQuery("select * from import_yahoo.spy"))
1446493889811:yahoo <- data.table(dbGetQuery(con, "select * from import_yahoo.spy"))
1446493900281:yahoo <- data.table(dbGetQuery(conn = con, "select * from import_yahoo.spy"))
1446493913630:con <- dbConnect(MySQL(), user="carlton", password= '1234password' )
1446493914005:yahoo <- data.table(dbGetQuery(conn = con, "select * from import_yahoo.spy"))
1446493918463:yahoo
1446493927667:yahoo[hour(timestamp) > 14]
1446494089715:yahoo[,mean(underlying), by=substring(timestamp,1,10)]
1446494270043:tradeking <- data.table(dbGetQuery(conn = con, "select * from import_tradeking.spy"))
1446494283682:yahoo[hour(timestamp) > 14][,mean(underlying), by=substring(timestamp,1,10)]
1446494291803:tradeking
1446494301048:tradeking[hour(time_added) > 14]
1446494312503:yahoo[hour(timestamp) > 14][,mean(underlying), by=substring(timestamp,1,10)]
1446494313250:tradeking[hour(time_added) > 14][,mean(underlying), by=substring(time_added,1,10)]
1446494556762:tradeking
1446495353901:yahoo[hour(timestamp) > 14][,mean(underlying), by=substring(timestamp,1,10)]
1446495373777:livevol <- data.table(dbGetQuery(conn = con, "select * from import_tradeking.livevol"))
1446495383225:livevol <- data.table(dbGetQuery(conn = con, "select * from import_livevol.spy"))
1446495429982:livevol <- data.table(dbGetQuery(conn = con, "select * from import_livevol.spy where quotedate >= '2015-10-19'"))
1446495434522:con <- dbConnect(MySQL(), user="carlton", password= '1234password' )
1446495443809:livevol <- data.table(dbGetQuery(conn = con, "select * from import_livevol.spy where underlying='SPY' and  quote_date >= '2015-10-19'"))
1446495464380:livevol <- data.table(dbGetQuery(conn = con, "select * from import_livevol.spy where underlying_symbol='SPY' and  quote_date >= '2015-10-19'"))
1446495468508:warnings()
1446495470382:livevol
1446495484489:livevol[,list(quote_date, mean(underlying_ask_eod))]
1446495504104:livevol[,list(underlying_ask_eod=mean(underlying_ask_eod)), by=quote_date]
1446495509415:yahoo[hour(timestamp) > 14][,mean(underlying), by=substring(timestamp,1,10)]
1446495512825:yahoo <- data.table(dbGetQuery(conn = con, "select * from import_yahoo.spy"))
1446495516377:yahoo[hour(timestamp) > 14][,mean(underlying), by=substring(timestamp,1,10)]
1446495523560:livevol[,list(underlying_ask_eod=mean(underlying_ask_eod)), by=quote_date]
1446496456237:livevol
1446496516050:yahoo
1446496962957:yahoo
1446496966038:yahoo[hour(timestamp) > 14]
1446497180174:tradeking
1446517141452:library(data.table)
1446517142143:library(fOptions)
1446517148253:library(lubridate)
1446517156514:install.packages('lubridate')
1446517168370:library(httpuv)
1446517169323:library(ggplot2)
1446517170434:library(rdrop2)
1446517194255:days(2)
1446517545816:organizeData <- function(dt) {
1446517545816:dt <-  dt[,list(symbol=underlying_symbol,
1446517545817:trade_date=as.character(quote_date),
1446517545817:root,
1446517545817:expiration=as.character(expiration),
1446517545817:strike,
1446517545817:call_put=option_type,
1446517545818:bid=bid_1545,
1446517545818:ask=ask_1545,
1446517545818:underlying = underlying_ask_eod,
1446517545818:distance_from_underlying = ifelse(option_type=='c', underlying_ask_eod - strike, strike- underlying_ask_eod),
1446517545818:iv = implied_volatility_1545,
1446517545819:vol = trade_volume,
1446517545819:delta = delta_1545,
1446517545819:gamma = gamma_1545,
1446517545819:theta = theta_1545,
1446517545820:vega = vega_1545,
1446517545820:rho = rho_1545,
1446517545820:vwap,
1446517545821:trade_volume,
1446517545821:strip=paste0(substring(expiration,1,8),'01'))]
1446517545821:return(dt)
1446517545822:}
1446517574314:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and year(quote_date) =2014 limit 50 '))
1446517648167:con <- dbConnect(MySQL(), user="carlton", password= '1234password' )
1446517651612:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and year(quote_date) =2014 limit 50 '))
1446517678160:under2 <- organizeData(under)
1446517681055:under2
1446517762388:getBestOption <- function(data,
1446517762389:chr.trade_date,
1446517762389:chr.expiration,
1446517762389:chr.option_type,
1446517762389:chr.money_in_out,
1446517762389:int.min_dollar,
1446517762390:int.strike = NULL) {
1446517762390:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1446517762390:if (int.money_in_out > 0 ) {
1446517762390:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1446517762391:} else {
1446517762391:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1446517762391:}
1446517762392:if ( is.null(int.strike) ==F) {
1446517762392:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ][order(distance_from_underlying)]
1446517762392:}
1446517762393:if (nrow(dt.result) == 0) {
1446517762393:warning("No results Returned")
1446517762393:return(NA)
1446517762394:}
1446517762394:return(dt.result[1,])
1446517762395:}
1446517795225:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and expiration="2015-01-17"  '))
1446517816819:under2 <- organizeData(under)
1446517836893:getBestOption <- function(data,
1446517836894:chr.trade_date,
1446517836894:chr.expiration,
1446517836894:chr.option_type,
1446517836894:chr.money_in_out,
1446517836894:int.min_dollar,
1446517836894:int.strike = NULL) {
1446517836895:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1446517836895:if (int.money_in_out > 0 ) {
1446517836895:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1446517836896:} else {
1446517836896:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1446517836896:}
1446517836897:if ( is.null(int.strike) ==F) {
1446517836897:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ][order(distance_from_underlying)]
1446517836897:}
1446517836898:if (nrow(dt.result) == 0) {
1446517836898:warning("No results Returned")
1446517836898:return(NA)
1446517836899:}
1446517836899:return(dt.result[1,])
1446517836900:}
1446517909694:getBestOption(under2, chr.trade_date = '2015-01-02',
1446517909695:chr.expiration='2015-01-17',
1446517909695:chr.option_type = 'c',
1446517909695:chr.money_in_out = 'in',
1446517909695:int.min_dollar=)
1446517916557:getBestOption(under2, chr.trade_date = '2015-01-02',
1446517916557:chr.expiration='2015-01-17',
1446517916557:chr.option_type = 'c',
1446517916557:chr.money_in_out = 'in',
1446517916557:int.min_dollar=2)
1446518078603:getBestOption <- function(data,
1446518078603:chr.trade_date,
1446518078604:chr.expiration,
1446518078604:chr.option_type,
1446518078604:chr.money_in_out,
1446518078604:int.min_dollar,
1446518078604:int.strike = NULL) {
1446518078605:if ( is.null(int.strike) ==F) {
1446518078605:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ][order(distance_from_underlying)]
1446518078605:}
1446518078605:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1446518078606:if (int.money_in_out > 0 ) {
1446518078606:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1446518078606:} else {
1446518078607:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1446518078607:}
1446518078608:if (nrow(dt.result) == 0) {
1446518078608:warning("No results Returned")
1446518078609:return(NA)
1446518078609:}
1446518078610:return(dt.result[1,])
1446518078610:}
1446518084396:getBestOption(under2, chr.trade_date = '2015-01-02',
1446518084397:chr.expiration='2015-01-17',
1446518084398:chr.option_type = 'c',
1446518084398:chr.money_in_out = 'in',
1446518084398:int.min_dollar=2)
1446518107492:getBestOption(under2,
1446518107725:chr.trade_date = '2015-01-05',
1446518108029:chr.expiration='2015-01-17',
1446518108292:int.strike = 202.5)
1446518138830:getBestOption <- function(data,
1446518138830:chr.trade_date,
1446518138830:chr.expiration,
1446518138830:chr.option_type,
1446518138831:chr.money_in_out,
1446518138831:int.min_dollar,
1446518138831:int.strike = NULL) {
1446518138831:if ( is.null(int.strike) ==F) {
1446518138831:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ][order(distance_from_underlying)]
1446518138832:return(dt.result)
1446518138832:}
1446518138832:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1446518138833:if (int.money_in_out > 0 ) {
1446518138833:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1446518138833:} else {
1446518138834:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1446518138834:}
1446518138835:if (nrow(dt.result) == 0) {
1446518138835:warning("No results Returned")
1446518138836:return(NA)
1446518138836:}
1446518138836:return(dt.result[1,])
1446518138837:}
1446518141844:int.strike = 202.5)
1446518146389:getBestOption(under2,
1446518146390:chr.trade_date = '2015-01-05',
1446518146390:chr.expiration='2015-01-17',
1446518146390:int.strike = 202.5)
1446518160410:getBestOption(under2,
1446518160414:chr.trade_date = '2015-01-05',
1446518160414:chr.expiration='2015-01-17',
1446518160414:chr.option_type = 'c',
1446518160414:int.strike = 202.5)
1446518608065:getBestOption <- function(data,
1446518608065:chr.trade_date,
1446518608065:chr.expiration,
1446518608065:chr.option_type,
1446518608066:int.delta,
1446518608066:chr.money_in_out,
1446518608066:int.min_dollar,
1446518608066:int.strike = NULL) {
1446518608066:if ( is.null(int.strike) ==F) {
1446518608067:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1446518608067:return(dt.result)
1446518608067:}
1446518608068:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1446518608068:if (int.money_in_out > 0 ) {
1446518608068:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1446518608069:} else {
1446518608069:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1446518608069:}
1446518608070:if (nrow(dt.result) == 0) {
1446518608071:warning("No results Returned")
1446518608071:return(NA)
1446518608071:}
1446518608072:return(dt.result[1,])
1446518608072:}
1446518613070:getBestOption(under2,
1446518613070:chr.trade_date = '2015-01-05',
1446518613070:chr.expiration='2015-01-17',
1446518613070:chr.option_type = 'c',
1446518613070:int.strike = 202.5)
1446518617807:getBestOption(under2,
1446518617977:chr.trade_date = '2015-01-05',
1446518618149:chr.expiration='2015-01-17',
1446518618311:chr.option_type = 'p',
1446518618664:int.strike = 202.5)
1446518972557:int.delta <- .53
1446519713138:library(data.table)
1446519713366:#library(fOptions)
1446519713542:#library(Quandl)
1446519713807:library(lubridate)
1446519714644:library(httpuv)
1446519715229:library(ggplot2)
1446519724309:organizeData <- function(dt) {
1446519724310:dt <-  dt[,list(symbol=underlying_symbol,
1446519724310:trade_date=as.character(quote_date),
1446519724310:root,
1446519724311:expiration=as.character(expiration),
1446519724311:strike,
1446519724311:call_put=option_type,
1446519724312:bid=bid_1545,
1446519724312:ask=ask_1545,
1446519724312:underlying = underlying_ask_eod,
1446519724312:distance_from_underlying = ifelse(option_type=='c', underlying_ask_eod - strike, strike- underlying_ask_eod),
1446519724313:iv = implied_volatility_1545,
1446519724313:vol = trade_volume,
1446519724313:delta = delta_1545,
1446519724314:gamma = gamma_1545,
1446519724314:theta = theta_1545,
1446519724314:vega = vega_1545,
1446519724315:rho = rho_1545,
1446519724315:vwap,
1446519724315:trade_volume,
1446519724316:strip=paste0(substring(expiration,1,8),'01'))]
1446519724316:return(dt)
1446519724317:}
1446519724318:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and expiration="2015-01-17"  '))
1446519724322:under2 <- organizeData(under)
1446519732825:con <- dbConnect(MySQL(), user="carlton", password= '1234password' )
1446519735134:organizeData <- function(dt) {
1446519735135:dt <-  dt[,list(symbol=underlying_symbol,
1446519735135:trade_date=as.character(quote_date),
1446519735135:root,
1446519735135:expiration=as.character(expiration),
1446519735136:strike,
1446519735136:call_put=option_type,
1446519735136:bid=bid_1545,
1446519735137:ask=ask_1545,
1446519735137:underlying = underlying_ask_eod,
1446519735137:distance_from_underlying = ifelse(option_type=='c', underlying_ask_eod - strike, strike- underlying_ask_eod),
1446519735138:iv = implied_volatility_1545,
1446519735138:vol = trade_volume,
1446519735138:delta = delta_1545,
1446519735139:gamma = gamma_1545,
1446519735139:theta = theta_1545,
1446519735139:vega = vega_1545,
1446519735140:rho = rho_1545,
1446519735140:vwap,
1446519735140:trade_volume,
1446519735141:strip=paste0(substring(expiration,1,8),'01'))]
1446519735141:return(dt)
1446519735142:}
1446519735143:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and expiration="2015-01-17"  '))
1446519757196:under2 <- organizeData(under)
1446519762973:getBestOption(under2,
1446519762973:chr.trade_date = '2015-01-05',
1446519762973:chr.expiration='2015-01-17',
1446519762974:chr.option_type = 'p',
1446519762974:int.strike = 202.5)
1446519776923:under2
1446519928205:getBestOption <- function(data,
1446519928205:chr.trade_date,
1446519928205:chr.expiration,
1446519928205:chr.option_type,
1446519928205:int.min_delta,
1446519928206:chr.money_in_out,
1446519928206:int.min_dollar,
1446519928206:int.strike = NULL) {
1446519928206:if ( is.null(int.strike) ==F) {
1446519928207:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1446519928207:return(dt.result)
1446519928207:}
1446519928208:if ( is.null(int.delta) ==F) {
1446519928208:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) >= int.min_delta ][order(abs(delta))]
1446519928208:return(dt.result)
1446519928208:}
1446519928209:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1446519928210:if (int.money_in_out > 0 ) {
1446519928210:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1446519928210:} else {
1446519928211:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1446519928211:}
1446519928213:if (nrow(dt.result) == 0) {
1446519928213:warning("No results Returned")
1446519928214:return(NA)
1446519928214:}
1446519928215:return(dt.result[1,])
1446519928216:}
1446519930903:getBestOption(under2,
1446519930904:chr.trade_date = '2015-01-05',
1446519930904:chr.expiration='2015-01-17',
1446519930904:chr.option_type = 'p',
1446519930904:int.strike = 202.5)
1446519944456:getBestOption(under2,
1446519944456:chr.trade_date = '2015-01-05',
1446519944457:chr.expiration='2015-01-17',
1446519944457:chr.option_type = 'p',
1446519944457:int.delta = 1)
1446519950951:getBestOption(under2,
1446519950951:chr.trade_date = '2015-01-05',
1446519950951:chr.expiration='2015-01-17',
1446519950952:chr.option_type = 'p',
1446519950952:int.min_delta = 1)
1446519974666:getBestOption <- function(data,
1446519974666:chr.trade_date,
1446519974666:chr.expiration,
1446519974666:chr.option_type,
1446519974666:int.min_delta,
1446519974667:chr.money_in_out,
1446519974667:int.min_dollar,
1446519974667:int.strike = NULL) {
1446519974668:if ( is.null(int.strike) ==F) {
1446519974668:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1446519974668:return(dt.result)
1446519974668:}
1446519974669:if ( is.null(int.min_delta) ==F) {
1446519974669:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) >= int.min_delta ][order(abs(delta))]
1446519974670:return(dt.result)
1446519974670:}
1446519974671:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1446519974671:if (int.money_in_out > 0 ) {
1446519974672:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1446519974672:} else {
1446519974672:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1446519974673:}
1446519974675:if (nrow(dt.result) == 0) {
1446519974675:warning("No results Returned")
1446519974676:return(NA)
1446519974676:}
1446519974677:return(dt.result[1,])
1446519974678:}
1446519978246:getBestOption(under2,
1446519978246:chr.trade_date = '2015-01-05',
1446519978246:chr.expiration='2015-01-17',
1446519978247:chr.option_type = 'p',
1446519978247:int.min_delta = 1)
1446520004768:getBestOption(under2,
1446520004769:chr.trade_date = '2015-01-05',
1446520004769:chr.expiration='2015-01-17',
1446520004769:chr.option_type = 'p',
1446520004769:int.min_delta = .95)
1446520057975:getBestOption <- function(data,
1446520057976:chr.trade_date,
1446520057976:chr.expiration,
1446520057976:chr.option_type,
1446520057976:int.min_delta,
1446520057976:chr.money_in_out,
1446520057977:int.min_dollar,
1446520057977:int.strike = NULL) {
1446520057977:if ( is.null(int.strike) ==F) {
1446520057978:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1446520057978:return(dt.result)
1446520057978:}
1446520057979:if ( is.null(int.min_delta) ==F) {
1446520057979:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) >= int.min_delta ][order(abs(delta))][1,]
1446520057979:return(dt.result)
1446520057980:}
1446520057980:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1446520057981:if (int.money_in_out > 0 ) {
1446520057981:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1446520057982:} else {
1446520057982:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1446520057982:}
1446520057984:if (nrow(dt.result) == 0) {
1446520057985:warning("No results Returned")
1446520057985:return(NA)
1446520057986:}
1446520057987:return(dt.result[1,])
1446520057988:}
1446520060653:getBestOption(under2,
1446520060653:chr.trade_date = '2015-01-05',
1446520060653:chr.expiration='2015-01-17',
1446520060653:chr.option_type = 'p',
1446520060654:int.min_delta = .95)
1446520068769:getBestOption(under2,
1446520068770:chr.trade_date = '2015-01-05',
1446520068770:chr.expiration='2015-01-17',
1446520068770:chr.option_type = 'p',
1446520068770:int.min_delta = .5)
1446521413531:chr.money_in_out <- 'out'
1446521415755:if (is.null(chr.money_in_out) ==F) {
1446521415756:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1446521415756:}
1446521419064:chr.money_in_out
1446521421679:int.money_in_out
1446521431498:chr.money_in_out
1446521444130:if (!is.null(chr.money_in_out)) {print('hey')}
1446521607356:getBestOption(under2,
1446521607356:chr.trade_date = '2015-01-05',
1446521607356:chr.expiration='2015-01-17',
1446521607357:chr.option_type = 'p',
1446521607357:int.min_delta = .5)
1446522101272:chr.trade_date = '2015-01-05',
1446522101415:getBestOption(under2,
1446522101444:chr.expiration='2015-01-17',
1446522101663:chr.option_type = 'p',
1446522102083:int.min_delta = .3)
1446522105845:getBestOption(under2,
1446522105847:chr.trade_date = '2015-01-05',
1446522105847:chr.expiration='2015-01-17',
1446522105847:chr.option_type = 'p',
1446522105847:int.min_delta = .3)
1446522170005:dt.result <- data.table()
1446522171841:if (nrow(dt.result) == 0) { warning("No results Returned") return(NA) }
1446522191948:getBestOption(under2,
1446522191948:chr.trade_date = '2015-01-02',
1446522191948:chr.expiration='2015-01-17',
1446522191948:chr.option_type = 'c',
1446522191949:chr.money_in_out = 'in',
1446522191949:int.min_dollar=2)
1446522216783:getBestOption <- function(data,
1446522216784:chr.trade_date,
1446522216784:chr.expiration,
1446522216784:chr.option_type,
1446522216785:int.min_delta = NULL,
1446522216785:chr.money_in_out,
1446522216785:int.min_dollar,
1446522216785:int.strike = NULL) {
1446522216786:if ( !is.null(int.strike) ) {
1446522216786:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1446522216786:return(dt.result)
1446522216787:}
1446522216787:if ( !is.null(int.min_delta)) {
1446522216788:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) >= int.min_delta ][order(abs(delta))][1,]
1446522216788:return(dt.result)
1446522216788:}
1446522216790:if (int.money_in_out > 0 ) {
1446522216790:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1446522216790:} else {
1446522216791:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1446522216791:}
1446522216793:if (nrow(dt.result) == 0) {
1446522216794:warning("No results Returned")
1446522216794:return(NA)
1446522216795:}
1446522216796:return(dt.result[1,])
1446522216796:}
1446522225961:getBestOption(under2,
1446522225961:chr.trade_date = '2015-01-02',
1446522225961:chr.expiration='2015-01-17',
1446522225961:chr.option_type = 'c',
1446522225962:chr.money_in_out = 'in',
1446522225962:int.min_dollar=2)
1446522982526:getBestOption(under2,
1446522982533:chr.trade_date = '2015-01-05',
1446522982533:chr.expiration='2015-01-17',
1446522982533:chr.option_type = 'p',
1446522982533:int.min_delta = .3)
1446564450603:gc()
1446662526073:# Call the required packages
1446662526075:library(ROAuth)
1446662526075:library(RJSONIO)
1446662526076:library(plyr)
1446662526076:library(data.table)
1446662526076:library(RMySQL)
1446662526077:library(httr)
1446662526077:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1446662526535:chr.market.status <- content(resp)$response$status$current
1446662526564:# Set your application keys
1446662526564:cKey <- 'pj1AhkYf7GcMqhQyQ8md7cr2QbjNCTxSN1ITXLHZ'
1446662526564:cSecret <- 'DsWlJhx3D7otGFYZKpP3cGe3dDaPncvBjYH5bKyf'
1446662526565:oKey <- 'r0HN0ddoXDAiIgmuNuzNT3F3hvIqSAJtRsTdFFlk'
1446662526565:oSecret <- 'xh1o441axvXktckX7n1pCQTSsuWdz52GmJYxHTZp'
1446662526565:# Set the API endpoint
1446662526565:tkURL <- "https://api.tradeking.com/v1/market/ext/quotes.json"
1446662529442:chr.market.status
1446662534834:# Set the API endpoint
1446662534835:tkURL <- "https://api.tradeking.com/v1/market/ext/quotes.json"
1446662534835:credentials <- OAuthFactory$new(consumerKey=cKey,
1446662534835:consumerSecret=cSecret,
1446662534835:oauthKey = oKey,
1446662534836:oauthSecret = oSecret,
1446662534836:needsVerifier=FALSE,
1446662534836:signMethod='HMAC')
1446662534841:# Update the connection so the handshake is TRUE
1446662534841:credentials$handshakeComplete <- TRUE
1446662537744:credentials
1446662543238:tkURLD
1446662547751:tkURLD <- "https://api.tradeking.com/v1/market/options/search.json"
1446662547751:query <- list()
1446662547752:query[[ "symbol" ]] <- "SPY"
1446662547752:query[[ "query" ]] <- "xyear-gt:2014"
1446662551440:response <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446662577271:response
1446664063565:install.packages('IBrokers')
1446665531058:SPY_Options <- NULL
1446665531061:for (i in 1:length(temp$response$quotes$quote))
1446665531061:{
1446665531062:tempB <- as.data.frame(t(temp$response$quotes$quote[[i]]))
1446665531062:SPY_Options <- rbind.fill(SPY_Options, tempB)
1446665531062:}
1446665694196:SPY_Options <- as.data.table(SPY_Options)
1446665696300:SPY_Options
1446666230248:tkURLD
1446669490783:# Set your application keys
1446669490785:cKey <- 'QHwV2gr1oxcnPBoTVvCPfR2P6HTbqjI4jDDdgHSF'
1446669490785:cSecret <- 'GArXBqtOIlxPhp0bs8xL0vFtQZiyXGsM1K7N6oIo'
1446669490785:oKey <- 'pttTe2RdYMCpAzx79Yr1viRcuKnAnczNwegzFcF6'
1446669490786:oSecret <- '3pqPGfPFg5oxvK0nJScYjsHo0nzYNvnCjdjkPs0t'
1446669490786:# Set the API endpoint
1446669490786:tkURL <- "https://api.tradeking.com/v1/market/ext/quotes.json"
1446669490787:credentials <- OAuthFactory$new(consumerKey=cKey,
1446669490787:consumerSecret=cSecret,
1446669490787:oauthKey = oKey,
1446669490787:oauthSecret = oSecret,
1446669490787:needsVerifier=FALSE,
1446669490788:signMethod='HMAC')
1446669490792:# Update the connection so the handshake is TRUE
1446669490792:credentials$handshakeComplete <- TRUE
1446669545239:tkURLD <- "https://api.tradeking.com/v1/market/options/search.json"
1446670371365:query <- list()
1446670371365:query[[ "symbols" ]] <- "aapl, ibm, goog"
1446670371366:query[[ "fids" ]] <- "last,bid,ask"
1446670371366:# Make the GET request, passing along the parameters, storing the response, then parsing the response
1446670371366:response <- credentials$OAuthRequest(tkURL, query)
1446670381874:response
1446670425004:$response$quotes$quote[[1]]
1446670447148:SPY_Options <- NULL
1446670447148:for (i in 1:length(temp$response$quotes$quote))
1446670447148:{
1446670447148:tempB <- as.data.frame(t(temp$response$quotes$quote[[i]]))
1446670447149:SPY_Options <- rbind.fill(SPY_Options, tempB)
1446670447149:}
1446670514511:SPY_Options
1446670548702:query <- list()
1446670548703:query[[ "symbols" ]] <- "aapl, ibm, goog"
1446670548703:query[[ "fids" ]] <- "last,bid,ask"
1446670548703:response <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446670549231:temp <- fromJSON(response)
1446670588340:query <- list()
1446670588341:query[[ "symbols" ]] <- "aapl, ibm, goog"
1446670588341:query[[ "fids" ]] <- "last,bid,ask"
1446670588341:response <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446670606033:response <- credentials$OAuthRequest(tkURL, query)
1446670609175:temp <- fromJSON(response)
1446670612278:SPY_Options <- NULL
1446670612279:for (i in 1:length(temp$response$quotes$quote))
1446670612279:{
1446670612279:tempB <- as.data.frame(t(temp$response$quotes$quote[[i]]))
1446670612279:SPY_Options <- rbind.fill(SPY_Options, tempB)
1446670612279:}
1446670622363:SPY_Options
1446670796623:tkURLD <- "https://api.tradeking.com/v1/market/options/search.json"
1446670796623:query <- list()
1446670796624:query[[ "symbols" ]] <- "spy"
1446670796624:query[[ "fids" ]] <- "last,bid,ask"
1446670796624:response.underlying <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446670797180:query <- list()
1446670797181:query[[ "symbol" ]] <- "SPY"
1446670797181:query[[ "query" ]] <- "xyear-gt:2014"
1446670797181:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446670886104:query <- list()
1446670886104:query[[ "symbols" ]] <- "spy"
1446670886104:query[[ "fids" ]] <- "last,bid,ask"
1446670886105:response.underlying <- credentials$OAuthRequest(tkURLD, query)
1446670886572:query <- list()
1446670886573:query[[ "symbol" ]] <- "SPY"
1446670886573:query[[ "query" ]] <- "xyear-gt:2014"
1446670886573:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446670918007:query <- list()
1446670919442:query[[ "symbols" ]] <- "goog"
1446670919472:query[[ "fids" ]] <- "last,bid,ask"
1446670924514:response.underlying <- credentials$OAuthRequest(tkURLD, query)
1446670951260:query <- list()
1446670952675:query[[ "symbols" ]] <- "aapl, ibm, spy"
1446670952692:query[[ "fids" ]] <- "last,bid,ask"
1446670955283:response.underlying <- credentials$OAuthRequest(tkURLD, query)
1446670977562:credentials <- OAuthFactory$new(consumerKey=cKey,
1446670977563:consumerSecret=cSecret,
1446670977563:oauthKey = oKey,
1446670977563:oauthSecret = oSecret,
1446670977563:needsVerifier=FALSE,
1446670977563:signMethod='HMAC')
1446670977566:# Update the connection so the handshake is TRUE
1446670977566:credentials$handshakeComplete <- TRUE
1446671024421:library(ROAuth)
1446671024443:library(RJSONIO)
1446671024480:library(plyr)
1446671024586:library(data.table)
1446671024691:library(RMySQL)
1446671024691:library(httr)
1446671128210:library(ROAuth)
1446671128211:library(RJSONIO)
1446671128211:library(plyr)
1446671128211:library(data.table)
1446671128212:library(RMySQL)
1446671128212:library(httr)
1446671128212:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1446671128665:chr.market.status <- content(resp)$response$status$current
1446671135901:# Set your application keys
1446671135901:cKey <- 'QHwV2gr1oxcnPBoTVvCPfR2P6HTbqjI4jDDdgHSF'
1446671135902:cSecret <- 'GArXBqtOIlxPhp0bs8xL0vFtQZiyXGsM1K7N6oIo'
1446671135902:oKey <- 'pttTe2RdYMCpAzx79Yr1viRcuKnAnczNwegzFcF6'
1446671135902:oSecret <- '3pqPGfPFg5oxvK0nJScYjsHo0nzYNvnCjdjkPs0t'
1446671135903:# Set the API endpoint
1446671135903:tkURL <- "https://api.tradeking.com/v1/market/ext/quotes.json"
1446671135903:credentials <- OAuthFactory$new(consumerKey=cKey,
1446671135903:consumerSecret=cSecret,
1446671135904:oauthKey = oKey,
1446671135904:oauthSecret = oSecret,
1446671135904:needsVerifier=FALSE,
1446671135904:signMethod='HMAC')
1446671135909:# Update the connection so the handshake is TRUE
1446671135909:credentials$handshakeComplete <- TRUE
1446671135910:### Get All SPY Options
1446671135910:tkURLD <- "https://api.tradeking.com/v1/market/options/search.json"
1446671135910:query <- list()
1446671135911:query[[ "symbols" ]] <- "aapl, ibm, spy"
1446671135911:query[[ "fids" ]] <- "last,bid,ask"
1446671135911:response.underlying <- credentials$OAuthRequest(tkURLD, query)
1446671139797:response.underlying
1446671146261:query <- list()
1446671146262:query[[ "symbol" ]] <- "SPY"
1446671146262:query[[ "query" ]] <- "xyear-gt:2014"
1446671146262:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446671183519:query <- list()
1446671183520:query[[ "symbols" ]] <- "aapl, ibm, goog"
1446671183520:query[[ "fids" ]] <- "last,bid,ask"
1446671183521:# Make the GET request, passing along the parameters, storing the response, then parsing the response
1446671183521:response <- credentials$OAuthRequest(tkURL, query)
1446671187245:response
1446671193786:query <- list()
1446671193942:query[[ "symbols" ]] <- "spy"
1446671194084:query[[ "fids" ]] <- "last,bid,ask"
1446671194243:# Make the GET request, passing along the parameters, storing the response, then parsing the response
1446671194722:response <- credentials$OAuthRequest(tkURL, query)
1446671197300:response
1446671199634:fromJSON(response)
1446671249089:query <- list()
1446671249238:query[[ "symbols" ]] <- "spy"
1446671249401:query[[ "fids" ]] <- "last,bid,ask"
1446671249783:# Make the GET request, passing along the parameters, storing the response, then parsing the response
1446671250085:response.underlying <- credentials$OAuthRequest(tkURL, query)
1446671281015:temp <- fromJSON(response.underlying)
1446671281015:SPY_Underlying <- NULL
1446671281016:for (i in 1:length(temp$response$quotes$quote))
1446671281016:{
1446671281016:tempB <- as.data.frame(t(temp$response$quotes$quote[[i]]))
1446671281016:SPY_Underlying <- rbind.fill(SPY_Underlying, tempB)
1446671281016:}
1446671283283:SPY_Underlying
1446671290044:temp
1446671301615:temp$response$quotes$quote
1446671305052:temp$response$quotes$quote[[1]]
1446671323545:tempB <- data.table(temp$response$quotes$quote[[1]])
1446671325710:tempB
1446671331056:tempB <- data.table(temp$response$quotes$quote)
1446671333322:tempB
1446671341800:temp
1446671347689:temp$response$quotes$quote
1446671359130:data.table(temp$response$quotes$quote)
1446671391379:data.table(t(temp$response$quotes$quote))
1446671407494:underlying.spy <- data.table(t(temp$response$quotes$quote))
1446671409241:underlying.spy
1446671419267:temp <- fromJSON(response.options)
1446671419868:SPY_Options <- NULL
1446671419869:for (i in 1:1)
1446671419869:{
1446671419869:tempB <- as.data.frame(t(temp$response$quotes$quote[[i]]))
1446671419870:SPY_Options <- rbind.fill(SPY_Options, tempB)
1446671419870:}
1446671422937:SPY_Options
1446671505179:underlying.spy
1446671525930:tempB <- data.table(as.data.frame(t(temp$response$quotes$quote[[i]])))
1446671528205:tempB
1446671552465:temp <- fromJSON(response.options)
1446671553044:dt.spy_options <- data.table()
1446671553046:for (i in 1:length(temp$response$quotes$quote))
1446671553047:{
1446671553047:tempB <- data.table(as.data.frame(t(temp$response$quotes$quote[[i]])))
1446671553047:dt.spy_options <- rbind(dt.spy_options, tempB)
1446671553047:}
1446671565447:for (i in 1:length(temp$response$quotes$quote))
1446671565609:{
1446671565765:tempB <- data.table(as.data.frame(t(temp$response$quotes$quote[[i]])))
1446671566118:dt.spy_options <- rbind(dt.spy_options, tempB,fill=T)
1446671566437:}
1446676369843:underlying.spy
1446676382844:dt.spy_options
1446676471096:dt.spy_options
1446676480185:<-
1446676485480:dt.spy_options
1446676587604:class(dt.spy_options$undersymbol)
1446676633642:dt.spy_options
1446676757812:str(dt.spy_options)
1446676806973:dataset <- dt.spy_options[, .(
1446676806973:symbol,
1446676806973:issue_desc,
1446676806974:put_call,
1446676806974:xdate,
1446676806974:strike = as.numeric((paste(strikeprice))),
1446676806974:ask = as.numeric((paste(ask))),
1446676806974:ask_time,
1446676806975:bid = as.numeric((paste(bid))),
1446676806975:bid_time,
1446676806975:last = as.numeric((paste(last))),
1446676806975:dte = as.numeric((paste(days_to_expiration))),
1446676806976:imp_volatility = as.numeric((paste(imp_volatility))),
1446676806976:irho = as.numeric((paste(irho))),
1446676806976:itheta = as.numeric((paste(itheta))),
1446676806976:ivega = as.numeric((paste(ivega))),
1446676806976:idelta = as.numeric((paste(idelta))),
1446676806977:igamma = as.numeric((paste(igamma))),
1446676806977:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446676806977:opt_val = as.numeric((paste(opt_val))),
1446676806978:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446676806978:timestamp = as.numeric((paste(timestamp))),
1446676806978:vl = as.numeric((paste(gsub(",", "", vl)))),
1446676806978:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446676806979:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446676806979:)]
1446676816086:dataset
1446682408028:dataset
1446683396195:dataset
1446684380724:dt.spy_options
1446684397453:dataset <- dt.spy_options[, .(
1446684397453:symbol,
1446684397454:undersymbol = as.character(undersymbol),
1446684397454:issue_desc,
1446684397454:put_call,
1446684397454:xdate,
1446684397454:strike = as.numeric((paste(strikeprice))),
1446684397455:ask = as.numeric((paste(ask))),
1446684397455:ask_time,
1446684397455:bid = as.numeric((paste(bid))),
1446684397455:bid_time,
1446684397455:last = as.numeric((paste(last))),
1446684397456:dte = as.numeric((paste(days_to_expiration))),
1446684397456:imp_volatility = as.numeric((paste(imp_volatility))),
1446684397456:irho = as.numeric((paste(irho))),
1446684397458:itheta = as.numeric((paste(itheta))),
1446684397458:ivega = as.numeric((paste(ivega))),
1446684397458:idelta = as.numeric((paste(idelta))),
1446684397458:igamma = as.numeric((paste(igamma))),
1446684397459:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446684397462:opt_val = as.numeric((paste(opt_val))),
1446684397462:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446684397462:timestamp = as.numeric((paste(timestamp))),
1446684397462:vl = as.numeric((paste(gsub(",", "", vl)))),
1446684397463:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446684397463:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446684397463:)]
1446684401789:dataset
1446684440688:as.POSIXct(1446613200)
1446684448805:as.POSIXct(1446613200, origin='1970-01-01')
1446684466349:as.POSIXct(1446669420, origin='1970-01-01')
1446684530393:dt.spy_options
1446684557118:dataset <- dt.spy_options[, .(
1446684557119:symbol,
1446684557119:undersymbol = as.character(undersymbol),
1446684557119:date = as.character(date),
1446684557119:issue_desc,
1446684557119:put_call,
1446684557120:xdate,
1446684557120:strike = as.numeric((paste(strikeprice))),
1446684557120:ask = as.numeric((paste(ask))),
1446684557120:ask_time,
1446684557120:bid = as.numeric((paste(bid))),
1446684557121:bid_time,
1446684557121:last = as.numeric((paste(last))),
1446684557121:dte = as.numeric((paste(days_to_expiration))),
1446684557121:imp_volatility = as.numeric((paste(imp_volatility))),
1446684557122:irho = as.numeric((paste(irho))),
1446684557122:itheta = as.numeric((paste(itheta))),
1446684557122:ivega = as.numeric((paste(ivega))),
1446684557122:idelta = as.numeric((paste(idelta))),
1446684557123:igamma = as.numeric((paste(igamma))),
1446684557123:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446684557123:opt_val = as.numeric((paste(opt_val))),
1446684557123:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446684557124:timestamp = as.numeric((paste(timestamp))),
1446684557124:vl = as.numeric((paste(gsub(",", "", vl)))),
1446684557124:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446684557125:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446684557125:)]
1446684562637:dataset
1446684636782:dataset[,list(underlying_symbol = undersymbol,
1446684636782:quote_date = date,
1446684636782:root = symbol,
1446684636783:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)))]
1446684758722:chr.timestamp <- Sys.time()
1446684760989:chr.timestamp
1446684815332:chr.timestamp <- format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446684818042:chr.timestamp
1446684886423:dataset[,range(vl)]
1446684905540:dt.spy_options
1446684923309:colnames(dt.spy_options)
1446685229766:dataset[,list(underlying_symbol = undersymbol,
1446685229766:quote_date = date,
1446685229767:root = symbol,
1446685229767:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446685229767:strike = as.numeric(strike),
1446685229767:option_type = ifelse(put_call=='put','p','c'),
1446685229767:open,
1446685229768:high,
1446685229768:low,
1446685229768:close,
1446685229768:trade_volume= vl)]
1446685238050:dataset <- dt.spy_options[, .(
1446685238050:symbol,
1446685238050:undersymbol = as.character(undersymbol),
1446685238050:date = as.character(date),
1446685238050:high=as.numeric(hi),
1446685238051:open=as.numeric(opn),
1446685238051:close= as.numeric(cl),
1446685238051:low=as.numeric(lo),
1446685238051:issue_desc,
1446685238051:put_call,
1446685238052:xdate,
1446685238052:strike = as.numeric((paste(strikeprice))),
1446685238052:ask = as.numeric((paste(ask))),
1446685238052:ask_time,
1446685238052:bid = as.numeric((paste(bid))),
1446685238053:bid_time,
1446685238053:last = as.numeric((paste(last))),
1446685238053:dte = as.numeric((paste(days_to_expiration))),
1446685238053:imp_volatility = as.numeric((paste(imp_volatility))),
1446685238054:irho = as.numeric((paste(irho))),
1446685238054:itheta = as.numeric((paste(itheta))),
1446685238054:ivega = as.numeric((paste(ivega))),
1446685238054:idelta = as.numeric((paste(idelta))),
1446685238055:igamma = as.numeric((paste(igamma))),
1446685238055:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446685238055:opt_val = as.numeric((paste(opt_val))),
1446685238056:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446685238056:timestamp = as.numeric((paste(timestamp))),
1446685238056:vl = as.numeric((paste(gsub(",", "", vl)))),
1446685238056:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446685238057:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446685238057:)]
1446685239364:dataset <- dt.spy_options[, .(
1446685239364:symbol,
1446685239364:undersymbol = as.character(undersymbol),
1446685239364:date = as.character(date),
1446685239365:high=as.numeric(hi),
1446685239365:open=as.numeric(opn),
1446685239365:close= as.numeric(cl),
1446685239365:low=as.numeric(lo),
1446685239365:issue_desc,
1446685239366:put_call,
1446685239366:xdate,
1446685239366:strike = as.numeric((paste(strikeprice))),
1446685239366:ask = as.numeric((paste(ask))),
1446685239366:ask_time,
1446685239366:bid = as.numeric((paste(bid))),
1446685239367:bid_time,
1446685239367:last = as.numeric((paste(last))),
1446685239367:dte = as.numeric((paste(days_to_expiration))),
1446685239367:imp_volatility = as.numeric((paste(imp_volatility))),
1446685239368:irho = as.numeric((paste(irho))),
1446685239368:itheta = as.numeric((paste(itheta))),
1446685239368:ivega = as.numeric((paste(ivega))),
1446685239368:idelta = as.numeric((paste(idelta))),
1446685239368:igamma = as.numeric((paste(igamma))),
1446685239369:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446685239369:opt_val = as.numeric((paste(opt_val))),
1446685239369:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446685239370:timestamp = as.numeric((paste(timestamp))),
1446685239370:vl = as.numeric((paste(gsub(",", "", vl)))),
1446685239370:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446685239371:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446685239371:)]
1446685245797:dataset[,list(underlying_symbol = undersymbol,
1446685245797:quote_date = date,
1446685245798:root = symbol,
1446685245798:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446685245798:strike = as.numeric(strike),
1446685245798:option_type = ifelse(put_call=='put','p','c'),
1446685245798:open,
1446685245799:high,
1446685245799:low,
1446685245799:close,
1446685245799:trade_volume= vl)]
1446685268656:dataset <- dt.spy_options[, .(
1446685268656:symbol,
1446685268656:undersymbol = as.character(undersymbol),
1446685268656:date = as.character(date),
1446685268656:high=as.numeric(hi),
1446685268657:open=as.numeric(opn),
1446685268657:close= as.numeric(cl),
1446685268657:low=as.numeric(lo),
1446685268657:issue_desc,
1446685268657:put_call,
1446685268658:xdate,
1446685268658:strike = as.numeric((paste(strikeprice))),
1446685268658:ask = as.numeric((paste(ask))),
1446685268658:ask_time,
1446685268658:bid = as.numeric((paste(bid))),
1446685268659:bid_time,
1446685268659:last = as.numeric((paste(last))),
1446685268659:dte = as.numeric((paste(days_to_expiration))),
1446685268659:imp_volatility = as.numeric((paste(imp_volatility))),
1446685268660:irho = as.numeric((paste(irho))),
1446685268660:itheta = as.numeric((paste(itheta))),
1446685268660:ivega = as.numeric((paste(ivega))),
1446685268660:idelta = as.numeric((paste(idelta))),
1446685268661:igamma = as.numeric((paste(igamma))),
1446685268661:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446685268661:opt_val = as.numeric((paste(opt_val))),
1446685268662:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446685268662:timestamp = as.numeric((paste(timestamp))),
1446685268662:vl = as.numeric((paste(gsub(",", "", vl)))),
1446685268663:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446685268663:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446685268663:)]
1446685277203:dataset
1446685279804:dt.spy_options
1446685314196:dataset <- dt.spy_options[, .(
1446685314197:symbol,
1446685314197:undersymbol = as.character(undersymbol),
1446685314197:date = as.character(date),
1446685314197:high=as.numeric((paste(hi))),
1446685314198:open=as.numeric((paste(opn))),
1446685314198:close= as.numeric((paste(cl))),
1446685314198:low=as.numeric((paste(lo))),
1446685314198:issue_desc,
1446685314198:put_call,
1446685314199:xdate,
1446685314199:strike = as.numeric((paste(strikeprice))),
1446685314199:ask = as.numeric((paste(ask))),
1446685314199:ask_time,
1446685314199:bid = as.numeric((paste(bid))),
1446685314200:bid_time,
1446685314200:last = as.numeric((paste(last))),
1446685314200:dte = as.numeric((paste(days_to_expiration))),
1446685314200:imp_volatility = as.numeric((paste(imp_volatility))),
1446685314201:irho = as.numeric((paste(irho))),
1446685314201:itheta = as.numeric((paste(itheta))),
1446685314201:ivega = as.numeric((paste(ivega))),
1446685314201:idelta = as.numeric((paste(idelta))),
1446685314202:igamma = as.numeric((paste(igamma))),
1446685314202:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446685314202:opt_val = as.numeric((paste(opt_val))),
1446685314203:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446685314203:timestamp = as.numeric((paste(timestamp))),
1446685314203:vl = as.numeric((paste(gsub(",", "", vl)))),
1446685314204:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446685314204:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446685314204:)]
1446685314249:dataset[,list(underlying_symbol = undersymbol,
1446685314249:quote_date = date,
1446685314249:root = symbol,
1446685314249:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446685314250:strike = as.numeric(strike),
1446685314250:option_type = ifelse(put_call=='put','p','c'),
1446685314250:open,
1446685314250:high,
1446685314250:low,
1446685314251:close,
1446685314251:trade_volume= vl)]
1446685338250:dataset
1446685347201:dt.spy_options
1446685386382:dataset <- dt.spy_options[, .(
1446685386382:symbol,
1446685386382:undersymbol = as.character(undersymbol),
1446685386383:date = as.character(date),
1446685386383:high=as.numeric((paste(hi))),
1446685386383:open=as.numeric((paste(opn))),
1446685386383:close= as.numeric((paste(cl))),
1446685386383:low=as.numeric((paste(lo))),
1446685386384:bid_size = as.numeric((paste(bidsz))),
1446685386384:ask_size = as.numeric((paste(asksz))),
1446685386384:issue_desc,
1446685386384:put_call,
1446685386385:xdate,
1446685386385:strike = as.numeric((paste(strikeprice))),
1446685386385:ask = as.numeric((paste(ask))),
1446685386385:ask_time,
1446685386385:bid = as.numeric((paste(bid))),
1446685386386:bid_time,
1446685386386:last = as.numeric((paste(last))),
1446685386386:dte = as.numeric((paste(days_to_expiration))),
1446685386386:imp_volatility = as.numeric((paste(imp_volatility))),
1446685386387:irho = as.numeric((paste(irho))),
1446685386387:itheta = as.numeric((paste(itheta))),
1446685386387:ivega = as.numeric((paste(ivega))),
1446685386388:idelta = as.numeric((paste(idelta))),
1446685386388:igamma = as.numeric((paste(igamma))),
1446685386388:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446685386389:opt_val = as.numeric((paste(opt_val))),
1446685386389:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446685386389:timestamp = as.numeric((paste(timestamp))),
1446685386389:vl = as.numeric((paste(gsub(",", "", vl)))),
1446685386390:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446685386390:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446685386390:)]
1446685405365:dataset
1446685547590:response.underlying
1446685554903:underlying.spy
1446685656749:dataset[,list(underlying_symbol = undersymbol,
1446685656749:quote_date = date,
1446685656750:root = symbol,
1446685656750:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446685656750:strike = as.numeric(strike),
1446685656750:option_type = ifelse(put_call=='put','p','c'),
1446685656750:open,
1446685656751:high,
1446685656751:low,
1446685656751:close,
1446685656751:trade_volume= vl,
1446685656752:bid_size,
1446685656752:bid,
1446685656752:ask_size,
1446685656752:ask,
1446685656752:underlying_bid = underlying.spy$bid,
1446685656753:underlying_ask = underlying.spy$ask,
1446685656753:underlying_last = underlying.spy$last,
1446685656753:implied_volatility = imp_volatility,
1446685656753:delta = idelta,
1446685656754:gamma = igamma)]
1446685729830:dataset[,list(underlying_symbol = undersymbol,
1446685729830:quote_date = date,
1446685729830:root = symbol,
1446685729831:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446685729831:strike = as.numeric(strike),
1446685729831:option_type = ifelse(put_call=='put','p','c'),
1446685729831:open,
1446685729831:high,
1446685729832:low,
1446685729832:close,
1446685729832:trade_volume= vl,
1446685729832:bid_size,
1446685729833:bid,
1446685729833:ask_size,
1446685729833:ask,
1446685729833:underlying_bid = underlying.spy$bid,
1446685729833:underlying_ask = underlying.spy$ask,
1446685729834:underlying_last = underlying.spy$last,
1446685729834:implied_volatility = imp_volatility,
1446685729834:delta = idelta,
1446685729834:gamma = igamma,
1446685729835:theta = itheta,
1446685729835:vega = ivega,
1446685729835:rho = irho,
1446685729835:vwap = vwap,
1446685729836:open_interest = openinterest)]
1446685811164:dataset <-    dataset[,list(underlying_symbol = undersymbol,
1446685811164:quote_date = date,
1446685811165:root = symbol,
1446685811165:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446685811165:strike = as.numeric(strike),
1446685811165:option_type = ifelse(put_call=='put','p','c'),
1446685811166:open,
1446685811166:high,
1446685811166:low,
1446685811166:close,
1446685811166:trade_volume= vl,
1446685811167:bid_size,
1446685811167:bid,
1446685811167:ask_size,
1446685811167:ask,
1446685811168:underlying_bid = underlying.spy$bid,
1446685811168:underlying_ask = underlying.spy$ask,
1446685811168:underlying_last = underlying.spy$last,
1446685811168:implied_volatility = imp_volatility,
1446685811169:delta = idelta,
1446685811169:gamma = igamma,
1446685811169:theta = itheta,
1446685811169:vega = ivega,
1446685811170:rho = irho,
1446685811170:vwap = vwap,
1446685811170:open_interest = openinterest)]
1446685829638:dataset <- dt.spy_options[, .(
1446685829638:symbol,
1446685829639:undersymbol = as.character(undersymbol),
1446685829639:date = as.character(date),
1446685829639:high=as.numeric((paste(hi))),
1446685829639:open=as.numeric((paste(opn))),
1446685829639:close= as.numeric((paste(cl))),
1446685829640:low=as.numeric((paste(lo))),
1446685829640:bid_size = as.numeric((paste(bidsz))),
1446685829640:ask_size = as.numeric((paste(asksz))),
1446685829640:issue_desc,
1446685829641:put_call,
1446685829641:xdate,
1446685829641:strike = as.numeric((paste(strikeprice))),
1446685829641:ask = as.numeric((paste(ask))),
1446685829641:ask_time,
1446685829642:bid = as.numeric((paste(bid))),
1446685829642:bid_time,
1446685829642:last = as.numeric((paste(last))),
1446685829643:dte = as.numeric((paste(days_to_expiration))),
1446685829643:imp_volatility = as.numeric((paste(imp_volatility))),
1446685829643:irho = as.numeric((paste(irho))),
1446685829643:itheta = as.numeric((paste(itheta))),
1446685829644:ivega = as.numeric((paste(ivega))),
1446685829644:idelta = as.numeric((paste(idelta))),
1446685829644:igamma = as.numeric((paste(igamma))),
1446685829644:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446685829645:opt_val = as.numeric((paste(opt_val))),
1446685829645:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446685829645:timestamp = as.numeric((paste(timestamp))),
1446685829646:vl = as.numeric((paste(gsub(",", "", vl)))),
1446685829646:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446685829646:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446685829647:)]
1446685829693:dataset <-    dataset[,list(underlying_symbol = undersymbol,
1446685829693:quote_date = date,
1446685829693:root = symbol,
1446685829693:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446685829694:strike = as.numeric(strike),
1446685829694:option_type = ifelse(put_call=='put','p','c'),
1446685829694:open,
1446685829694:high,
1446685829694:low,
1446685829695:close,
1446685829695:trade_volume= vl,
1446685829695:bid_size,
1446685829695:bid,
1446685829695:ask_size,
1446685829696:ask,
1446685829696:underlying_bid = underlying.spy$bid,
1446685829696:underlying_ask = underlying.spy$ask,
1446685829696:underlying_last = underlying.spy$last,
1446685829696:implied_volatility = imp_volatility,
1446685829697:delta = idelta,
1446685829697:gamma = igamma,
1446685829697:theta = itheta,
1446685829697:vega = ivega,
1446685829698:rho = irho,
1446685829698:vwap = vwap,
1446685829698:open_interest = openinterest,
1446685829698:timestamp = chr.timestamp)]
1446685835506:dataset
1446686600675:colnames(dataset)
1446686618939:colnames(dataset)
1446686780639:chr.market.status
1446686788059:con <- dbConnect(MySQL(), user="carlton", password= '1234password' )
1446686796286:dbWriteTable(con, "import_tradeking.spy", dataset, row.names = FALSE, append = TRUE)
1446686806695:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446686809895:dbWriteTable(con, "spy", dataset, row.names = FALSE, append = TRUE)
1446686838282:dbWriteTable(con, "spy", dataset, row.names = FALSE, append = TRUE)
1446686864031:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446686864656:dbWriteTable(con, "spy", dataset, row.names = FALSE, append = TRUE)
1446687277733:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446687277853:dbWriteTable(con, "spy", dataset, row.names = FALSE, append = TRUE)
1446687288336:# Call the required packages
1446687288336:library(ROAuth)
1446687288337:library(RJSONIO)
1446687288337:library(plyr)
1446687288337:library(data.table)
1446687288338:library(RMySQL)
1446687288338:library(httr)
1446687288338:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1446687288832:chr.market.status <- content(resp)$response$status$current
1446687288840:# Set your application keys
1446687288840:cKey <- 'QHwV2gr1oxcnPBoTVvCPfR2P6HTbqjI4jDDdgHSF'
1446687288841:cSecret <- 'GArXBqtOIlxPhp0bs8xL0vFtQZiyXGsM1K7N6oIo'
1446687288841:oKey <- 'pttTe2RdYMCpAzx79Yr1viRcuKnAnczNwegzFcF6'
1446687288841:oSecret <- '3pqPGfPFg5oxvK0nJScYjsHo0nzYNvnCjdjkPs0t'
1446687288842:# Set the API endpoint
1446687288842:tkURL <- "https://api.tradeking.com/v1/market/ext/quotes.json"
1446687288842:credentials <- OAuthFactory$new(consumerKey=cKey,
1446687288843:consumerSecret=cSecret,
1446687288843:oauthKey = oKey,
1446687288843:oauthSecret = oSecret,
1446687288843:needsVerifier=FALSE,
1446687288843:signMethod='HMAC')
1446687288845:# Update the connection so the handshake is TRUE
1446687288846:credentials$handshakeComplete <- TRUE
1446687288846:chr.timestamp <- format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446687288847:### Get All SPY Options
1446687288847:tkURLD <- "https://api.tradeking.com/v1/market/options/search.json"
1446687288847:query <- list()
1446687288848:query[[ "symbols" ]] <- "spy"
1446687288848:query[[ "fids" ]] <- "last,bid,ask"
1446687288848:# Make the GET request, passing along the parameters, storing the response, then parsing the response
1446687288849:response.underlying <- credentials$OAuthRequest(tkURL, query)
1446687289329:query <- list()
1446687289330:query[[ "symbol" ]] <- "SPY"
1446687289330:query[[ "query" ]] <- "xyear-gt:2014"
1446687289330:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446687314087:temp <- fromJSON(response.options)
1446687314703:dt.spy_options <- data.table()
1446687314705:for (i in 1:length(temp$response$quotes$quote))
1446687314706:{
1446687314706:tempB <- data.table(as.data.frame(t(temp$response$quotes$quote[[i]])))
1446687314706:dt.spy_options <- rbind(dt.spy_options, tempB,fill=T)
1446687314706:}
1446687441012:temp <- fromJSON(response.underlying)
1446687441012:underlying.spy <- data.table(t(temp$response$quotes$quote))
1446687441014:dataset <- dt.spy_options[, .(
1446687441014:symbol,
1446687441014:undersymbol = as.character(undersymbol),
1446687441014:date = as.character(date),
1446687441015:high=as.numeric((paste(hi))),
1446687441015:open=as.numeric((paste(opn))),
1446687441015:close= as.numeric((paste(cl))),
1446687441015:low=as.numeric((paste(lo))),
1446687441015:bid_size = as.numeric((paste(bidsz))),
1446687441016:ask_size = as.numeric((paste(asksz))),
1446687441016:issue_desc,
1446687441016:put_call,
1446687441016:xdate,
1446687441017:strike = as.numeric((paste(strikeprice))),
1446687441017:ask = as.numeric((paste(ask))),
1446687441017:ask_time,
1446687441017:bid = as.numeric((paste(bid))),
1446687441018:bid_time,
1446687441018:last = as.numeric((paste(last))),
1446687441018:dte = as.numeric((paste(days_to_expiration))),
1446687441018:imp_volatility = as.numeric((paste(imp_volatility))),
1446687441019:irho = as.numeric((paste(irho))),
1446687441019:itheta = as.numeric((paste(itheta))),
1446687441019:ivega = as.numeric((paste(ivega))),
1446687441019:idelta = as.numeric((paste(idelta))),
1446687441020:igamma = as.numeric((paste(igamma))),
1446687441020:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446687441020:opt_val = as.numeric((paste(opt_val))),
1446687441021:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446687441021:timestamp = as.numeric((paste(timestamp))),
1446687441021:vl = as.numeric((paste(gsub(",", "", vl)))),
1446687441021:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446687441022:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446687441022:)]
1446687441067:dataset <-dataset[,list(underlying_symbol = undersymbol,
1446687441067:quote_date = date,
1446687441068:root = symbol,
1446687441068:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446687441068:strike = as.numeric(strike),
1446687441068:option_type = ifelse(put_call=='put','p','c'),
1446687441068:open,
1446687441068:high,
1446687441069:low,
1446687441069:close,
1446687441069:trade_volume= vl,
1446687441069:bid_size,
1446687441069:bid,
1446687441070:ask_size,
1446687441070:ask,
1446687441070:underlying_bid = underlying.spy$bid,
1446687441070:underlying_ask = underlying.spy$ask,
1446687441071:underlying_last = underlying.spy$last,
1446687441071:implied_volatility = imp_volatility,
1446687441071:delta = idelta,
1446687441071:gamma = igamma,
1446687441071:theta = itheta,
1446687441072:vega = ivega,
1446687441072:rho = irho,
1446687441072:vwap = vwap,
1446687441072:open_interest = openinterest,
1446687441073:timestamp = chr.timestamp)]
1446733195836:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1446733196324:chr.market.status <- content(resp)$response$status$current
1446733199350:chr.market.status
1446735350269:query <- list()
1446735350269:query[[ "symbol" ]] <- "SPY"
1446735350270:query[[ "query" ]] <- "xyear-gt:2014"
1446735350270:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446735383039:temp <- fromJSON(response.options)
1446735383651:dt.spy_options <- data.table()
1446735383655:for (i in 1:length(temp$response$quotes$quote))
1446735383655:{
1446735383655:tempB <- data.table(as.data.frame(t(temp$response$quotes$quote[[i]])))
1446735383655:dt.spy_options <- rbind(dt.spy_options, tempB,fill=T)
1446735383656:}
1446735530276:temp <- fromJSON(response.underlying)
1446735530279:underlying.spy <- data.table(t(temp$response$quotes$quote))
1446735530618:dataset <- dt.spy_options[, .(
1446735530619:symbol,
1446735530619:undersymbol = as.character(undersymbol),
1446735530619:date = as.character(date),
1446735530619:high=as.numeric((paste(hi))),
1446735530619:open=as.numeric((paste(opn))),
1446735530620:close= as.numeric((paste(cl))),
1446735530620:low=as.numeric((paste(lo))),
1446735530620:bid_size = as.numeric((paste(bidsz))),
1446735530620:ask_size = as.numeric((paste(asksz))),
1446735530620:issue_desc,
1446735530621:put_call,
1446735530621:xdate,
1446735530621:strike = as.numeric((paste(strikeprice))),
1446735530621:ask = as.numeric((paste(ask))),
1446735530621:ask_time,
1446735530622:bid = as.numeric((paste(bid))),
1446735530622:bid_time,
1446735530622:last = as.numeric((paste(last))),
1446735530622:dte = as.numeric((paste(days_to_expiration))),
1446735530623:imp_volatility = as.numeric((paste(imp_volatility))),
1446735530623:irho = as.numeric((paste(irho))),
1446735530623:itheta = as.numeric((paste(itheta))),
1446735530623:ivega = as.numeric((paste(ivega))),
1446735530624:idelta = as.numeric((paste(idelta))),
1446735530624:igamma = as.numeric((paste(igamma))),
1446735530624:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446735530624:opt_val = as.numeric((paste(opt_val))),
1446735530625:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446735530625:timestamp = as.numeric((paste(timestamp))),
1446735530625:vl = as.numeric((paste(gsub(",", "", vl)))),
1446735530626:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446735530626:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446735530626:)]
1446735530680:dataset <-dataset[,list(underlying_symbol = undersymbol,
1446735530681:quote_date = date,
1446735530681:root = symbol,
1446735530681:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446735530681:strike = as.numeric(strike),
1446735530681:option_type = ifelse(put_call=='put','p','c'),
1446735530682:open,
1446735530682:high,
1446735530682:low,
1446735530682:close,
1446735530682:trade_volume= vl,
1446735530683:bid_size,
1446735530683:bid,
1446735530683:ask_size,
1446735530683:ask,
1446735530684:underlying_bid = underlying.spy$bid,
1446735530684:underlying_ask = underlying.spy$ask,
1446735530684:underlying_last = underlying.spy$last,
1446735530684:implied_volatility = imp_volatility,
1446735530684:delta = idelta,
1446735530685:gamma = igamma,
1446735530685:theta = itheta,
1446735530685:vega = ivega,
1446735530686:rho = irho,
1446735530686:vwap = vwap,
1446735530686:open_interest = openinterest,
1446735530686:timestamp = chr.timestamp)]
1446735554347:dt.spy_options
1446735563042:dt.spy_options[,range(vwap)]
1446735591789:dt.spy_options[,range(as.numeric(as.character(vwap)))]
1446735603208:dt.spy_options[,unique(vwap)]
1446742023082:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1446742023526:chr.market.status <- content(resp)$response$status$current
1446742025961:chr.market.status
1446753096241:system(command = paste("logger -p local0.info \"", 'hey',
1446753096241:"\""))
1446753194039:# Call the required packages
1446753194040:library(ROAuth)
1446753194040:library(RJSONIO)
1446753194041:library(plyr)
1446753194041:library(data.table)
1446753194041:library(RMySQL)
1446753194042:library(httr)
1446753194042:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1446753194587:chr.market.status <- content(resp)$response$status$current
1446753194594:# Set your application keys
1446753194594:cKey <- 'pj1AhkYf7GcMqhQyQ8md7cr2QbjNCTxSN1ITXLHZ'
1446753194594:cSecret <- 'DsWlJhx3D7otGFYZKpP3cGe3dDaPncvBjYH5bKyf'
1446753194594:oKey <- 'r0HN0ddoXDAiIgmuNuzNT3F3hvIqSAJtRsTdFFlk'
1446753194595:oSecret <- 'xh1o441axvXktckX7n1pCQTSsuWdz52GmJYxHTZp'
1446753194595:# Set the API endpoint
1446753194595:tkURL <- "https://api.tradeking.com/v1/market/ext/quotes.json"
1446753194596:credentials <- OAuthFactory$new(consumerKey=cKey,
1446753194596:consumerSecret=cSecret,
1446753194596:oauthKey = oKey,
1446753194596:oauthSecret = oSecret,
1446753194596:needsVerifier=FALSE,
1446753194597:signMethod='HMAC')
1446753194601:# Update the connection so the handshake is TRUE
1446753194601:credentials$handshakeComplete <- TRUE
1446753194602:### Get All SPY Options
1446753194602:tkURLD <- "https://api.tradeking.com/v1/market/options/search.json"
1446753194602:query <- list()
1446753194603:query[[ "symbol" ]] <- "SPY"
1446753194603:query[[ "query" ]] <- "xyear-gt:2014"
1446753194603:response <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446753219797:temp <- fromJSON(response)
1446753220390:SPY_Options <- NULL
1446753220391:for (i in 1:length(temp$response$quotes$quote))
1446753220391:{
1446753220391:tempB <- as.data.frame(t(temp$response$quotes$quote[[i]]))
1446753220392:SPY_Options <- rbind.fill(SPY_Options, tempB)
1446753220392:}
1446753348232:# Call the required packages
1446753348232:library(ROAuth)
1446753348233:library(RJSONIO)
1446753348233:library(plyr)
1446753348233:library(data.table)
1446753348234:library(RMySQL)
1446753348234:library(httr)
1446753348234:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1446753348663:chr.market.status <- content(resp)$response$status$current
1446753348671:# Set your application keys
1446753348671:cKey <- 'QHwV2gr1oxcnPBoTVvCPfR2P6HTbqjI4jDDdgHSF'
1446753348672:cSecret <- 'GArXBqtOIlxPhp0bs8xL0vFtQZiyXGsM1K7N6oIo'
1446753348672:oKey <- 'pttTe2RdYMCpAzx79Yr1viRcuKnAnczNwegzFcF6'
1446753348672:oSecret <- '3pqPGfPFg5oxvK0nJScYjsHo0nzYNvnCjdjkPs0t'
1446753348672:# Set the API endpoint
1446753348673:tkURL <- "https://api.tradeking.com/v1/market/ext/quotes.json"
1446753348673:credentials <- OAuthFactory$new(consumerKey=cKey,
1446753348673:consumerSecret=cSecret,
1446753348673:oauthKey = oKey,
1446753348673:oauthSecret = oSecret,
1446753348674:needsVerifier=FALSE,
1446753348674:signMethod='HMAC')
1446753348676:# Update the connection so the handshake is TRUE
1446753348676:credentials$handshakeComplete <- TRUE
1446753348676:chr.timestamp <- format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446753348677:### Get All SPY Options
1446753348677:tkURLD <- "https://api.tradeking.com/v1/market/options/search.json"
1446753348677:query <- list()
1446753348678:query[[ "symbols" ]] <- "spy"
1446753348678:query[[ "fids" ]] <- "last,bid,ask"
1446753348678:# Make the GET request, passing along the parameters, storing the response, then parsing the response
1446753348678:response.underlying <- credentials$OAuthRequest(tkURL, query)
1446753349154:query <- list()
1446753349155:query[[ "symbol" ]] <- "SPY"
1446753349155:query[[ "query" ]] <- "xyear-gt:2014"
1446753349155:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1446753376369:temp <- fromJSON(response.options)
1446753376956:dt.spy_options <- data.table()
1446753376958:for (i in 1:length(temp$response$quotes$quote))
1446753376958:{
1446753376959:tempB <- data.table(as.data.frame(t(temp$response$quotes$quote[[i]])))
1446753376959:dt.spy_options <- rbind(dt.spy_options, tempB,fill=T)
1446753376959:}
1446753511864:temp <- fromJSON(response.underlying)
1446753511865:underlying.spy <- data.table(t(temp$response$quotes$quote))
1446753511867:dataset <- dt.spy_options[, .(
1446753511867:symbol,
1446753511867:undersymbol = as.character(undersymbol),
1446753511867:date = as.character(date),
1446753511867:high=as.numeric((paste(hi))),
1446753511868:open=as.numeric((paste(opn))),
1446753511868:close= as.numeric((paste(cl))),
1446753511868:low=as.numeric((paste(lo))),
1446753511868:bid_size = as.numeric((paste(bidsz))),
1446753511868:ask_size = as.numeric((paste(asksz))),
1446753511869:issue_desc,
1446753511869:put_call,
1446753511869:xdate,
1446753511869:strike = as.numeric((paste(strikeprice))),
1446753511870:ask = as.numeric((paste(ask))),
1446753511870:ask_time,
1446753511870:bid = as.numeric((paste(bid))),
1446753511870:bid_time,
1446753511870:last = as.numeric((paste(last))),
1446753511871:dte = as.numeric((paste(days_to_expiration))),
1446753511871:imp_volatility = as.numeric((paste(imp_volatility))),
1446753511871:irho = as.numeric((paste(irho))),
1446753511871:itheta = as.numeric((paste(itheta))),
1446753511872:ivega = as.numeric((paste(ivega))),
1446753511872:idelta = as.numeric((paste(idelta))),
1446753511872:igamma = as.numeric((paste(igamma))),
1446753511873:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446753511873:opt_val = as.numeric((paste(opt_val))),
1446753511873:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446753511874:timestamp = as.numeric((paste(timestamp))),
1446753511874:vl = as.numeric((paste(gsub(",", "", vl)))),
1446753511874:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446753511874:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446753511875:)]
1446753511930:dataset <-dataset[,list(underlying_symbol = undersymbol,
1446753511930:quote_date = date,
1446753511931:root = symbol,
1446753511931:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446753511931:strike = as.numeric(strike),
1446753511931:option_type = ifelse(put_call=='put','p','c'),
1446753511931:open,
1446753511932:high,
1446753511932:low,
1446753511932:close,
1446753511932:trade_volume= vl,
1446753511932:bid_size,
1446753511933:bid,
1446753511933:ask_size,
1446753511933:ask,
1446753511933:underlying_bid = underlying.spy$bid,
1446753511933:underlying_ask = underlying.spy$ask,
1446753511934:underlying_last = underlying.spy$last,
1446753511934:implied_volatility = imp_volatility,
1446753511934:delta = idelta,
1446753511934:gamma = igamma,
1446753511934:theta = itheta,
1446753511935:vega = ivega,
1446753511935:rho = irho,
1446753511935:vwap = vwap,
1446753511935:open_interest = openinterest,
1446753511936:timestamp = chr.timestamp)]
1446753526081:chr.market.status == 'open'
1446753528168:source('~/Scrapers/tradekingSpyOptionScraper.R', echo=TRUE)
1446753546882:if (chr.market.status == 'open') {
1446753546882:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446753546882:dbWriteTable(con, "spy", dataset, row.names = FALSE, append = TRUE)
1446753546883:}
1446753551000:dataset
1446753835723:dataset
1446753854792:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446753855190:dbWriteTable(con, "spy", dataset, row.names = FALSE, append = TRUE)
1446754102741:dataset
1446754133525:if (chr.market.status == 'open') {
1446754133525:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446754133526:dbWriteTable(con, "spy", dataset, row.names = FALSE, append = TRUE)
1446754133526:}
1446754188971:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446754189705:dbWriteTable(con, value = dataset, name = "spy", append = TRUE, row.names=F )
1446754212979:chr.timestamp <- as.character(format(Sys.time(), tz="America/New_York",usetz=TRUE))
1446754215190:chr.timestamp
1446754220024:dataset <-dataset[,list(underlying_symbol = undersymbol,
1446754220024:quote_date = date,
1446754220024:root = symbol,
1446754220024:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446754220025:strike = as.numeric(strike),
1446754220025:option_type = ifelse(put_call=='put','p','c'),
1446754220025:open,
1446754220025:high,
1446754220026:low,
1446754220026:close,
1446754220026:trade_volume= vl,
1446754220026:bid_size,
1446754220026:bid,
1446754220027:ask_size,
1446754220027:ask,
1446754220027:underlying_bid = underlying.spy$bid,
1446754220027:underlying_ask = underlying.spy$ask,
1446754220028:underlying_last = underlying.spy$last,
1446754220028:implied_volatility = imp_volatility,
1446754220028:delta = idelta,
1446754220028:gamma = igamma,
1446754220029:theta = itheta,
1446754220029:vega = ivega,
1446754220029:rho = irho,
1446754220029:vwap = vwap,
1446754220030:open_interest = openinterest,
1446754220030:timestamp = chr.timestamp)]
1446754220034:if (chr.market.status == 'open') {
1446754220034:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446754220034:dbWriteTable(con, value = dataset, name = "spy", append = TRUE, row.names=F )
1446754220035:}
1446754227387:dataset <- dt.spy_options[, .(
1446754227388:symbol,
1446754227388:undersymbol = as.character(undersymbol),
1446754227388:date = as.character(date),
1446754227388:high=as.numeric((paste(hi))),
1446754227388:open=as.numeric((paste(opn))),
1446754227389:close= as.numeric((paste(cl))),
1446754227389:low=as.numeric((paste(lo))),
1446754227389:bid_size = as.numeric((paste(bidsz))),
1446754227389:ask_size = as.numeric((paste(asksz))),
1446754227390:issue_desc,
1446754227390:put_call,
1446754227390:xdate,
1446754227390:strike = as.numeric((paste(strikeprice))),
1446754227390:ask = as.numeric((paste(ask))),
1446754227391:ask_time,
1446754227391:bid = as.numeric((paste(bid))),
1446754227391:bid_time,
1446754227391:last = as.numeric((paste(last))),
1446754227392:dte = as.numeric((paste(days_to_expiration))),
1446754227392:imp_volatility = as.numeric((paste(imp_volatility))),
1446754227392:irho = as.numeric((paste(irho))),
1446754227393:itheta = as.numeric((paste(itheta))),
1446754227393:ivega = as.numeric((paste(ivega))),
1446754227393:idelta = as.numeric((paste(idelta))),
1446754227393:igamma = as.numeric((paste(igamma))),
1446754227394:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446754227394:opt_val = as.numeric((paste(opt_val))),
1446754227394:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446754227395:timestamp = as.numeric((paste(timestamp))),
1446754227395:vl = as.numeric((paste(gsub(",", "", vl)))),
1446754227395:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446754227396:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446754227396:)]
1446754227442:dataset <-dataset[,list(underlying_symbol = undersymbol,
1446754227443:quote_date = date,
1446754227443:root = symbol,
1446754227443:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446754227443:strike = as.numeric(strike),
1446754227443:option_type = ifelse(put_call=='put','p','c'),
1446754227444:open,
1446754227444:high,
1446754227444:low,
1446754227444:close,
1446754227444:trade_volume= vl,
1446754227445:bid_size,
1446754227445:bid,
1446754227445:ask_size,
1446754227445:ask,
1446754227445:underlying_bid = underlying.spy$bid,
1446754227446:underlying_ask = underlying.spy$ask,
1446754227446:underlying_last = underlying.spy$last,
1446754227446:implied_volatility = imp_volatility,
1446754227446:delta = idelta,
1446754227446:gamma = igamma,
1446754227447:theta = itheta,
1446754227447:vega = ivega,
1446754227447:rho = irho,
1446754227447:vwap = vwap,
1446754227448:open_interest = openinterest,
1446754227448:timestamp = chr.timestamp)]
1446754227457:if (chr.market.status == 'open') {
1446754227457:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446754227457:dbWriteTable(con, value = dataset, name = "spy", append = TRUE, row.names=F )
1446754227458:}
1446754371353:dataset
1446754386552:if (chr.market.status == 'open') {
1446754386552:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446754386552:dbWriteTable(con, value = dataset, name = "spy", append = TRUE, row.names=F )
1446754386553:}
1446754392500:if (chr.market.status == 'open') {
1446754392500:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446754392500:dbWriteTable(con, value = dataset, name = "spy", append = TRUE, row.names=F )
1446754392501:}
1446754426615:chr.timestamp <- as.character(format(Sys.time(), tz="America/New_York",usetz=TRUE))
1446754434807:dataset <- dt.spy_options[, .(
1446754434807:symbol,
1446754434808:undersymbol = as.character(undersymbol),
1446754434808:date = as.character(date),
1446754434808:high=as.numeric((paste(hi))),
1446754434808:open=as.numeric((paste(opn))),
1446754434808:close= as.numeric((paste(cl))),
1446754434809:low=as.numeric((paste(lo))),
1446754434809:bid_size = as.numeric((paste(bidsz))),
1446754434809:ask_size = as.numeric((paste(asksz))),
1446754434809:issue_desc,
1446754434810:put_call,
1446754434810:xdate,
1446754434810:strike = as.numeric((paste(strikeprice))),
1446754434810:ask = as.numeric((paste(ask))),
1446754434810:ask_time,
1446754434811:bid = as.numeric((paste(bid))),
1446754434811:bid_time,
1446754434811:last = as.numeric((paste(last))),
1446754434811:dte = as.numeric((paste(days_to_expiration))),
1446754434812:imp_volatility = as.numeric((paste(imp_volatility))),
1446754434812:irho = as.numeric((paste(irho))),
1446754434812:itheta = as.numeric((paste(itheta))),
1446754434812:ivega = as.numeric((paste(ivega))),
1446754434813:idelta = as.numeric((paste(idelta))),
1446754434813:igamma = as.numeric((paste(igamma))),
1446754434813:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446754434814:opt_val = as.numeric((paste(opt_val))),
1446754434814:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446754434814:timestamp = as.numeric((paste(timestamp))),
1446754434814:vl = as.numeric((paste(gsub(",", "", vl)))),
1446754434815:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446754434815:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446754434815:)]
1446754434864:dataset <-dataset[,list(underlying_symbol = undersymbol,
1446754434864:quote_date = date,
1446754434864:root = symbol,
1446754434864:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446754434864:strike = as.numeric(strike),
1446754434865:option_type = ifelse(put_call=='put','p','c'),
1446754434865:open,
1446754434865:high,
1446754434865:low,
1446754434865:close,
1446754434866:trade_volume= vl,
1446754434866:bid_size,
1446754434866:bid,
1446754434866:ask_size,
1446754434866:ask,
1446754434866:underlying_bid = underlying.spy$bid,
1446754434867:underlying_ask = underlying.spy$ask,
1446754434867:underlying_last = underlying.spy$last,
1446754434867:implied_volatility = imp_volatility,
1446754434867:delta = idelta,
1446754434867:gamma = igamma,
1446754434868:theta = itheta,
1446754434868:vega = ivega,
1446754434868:rho = irho,
1446754434868:vwap = vwap,
1446754434869:open_interest = openinterest,
1446754434869:timestamp = chr.timestamp)]
1446754434878:if (chr.market.status == 'open') {
1446754434879:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446754434879:dbWriteTable(con, value = dataset, name = "spy", append = TRUE, row.names=F )
1446754434879:}
1446754607011:dataset
1446754610671:dbWriteTable(con, value = data.frame(dataset), name = "spy", append = TRUE, row.names=F )
1446754687326:dataset
1446754748994:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1446754749134:dbWriteTable(con, value = data.frame(dataset), name = "spy", append = TRUE, row.names=F )
1446754752438:chr.timestamp <- as.character(format(Sys.time(), tz="America/New_York",usetz=TRUE))
1446754755009:dbWriteTable(con, value = data.frame(dataset), name = "spy", append = TRUE, row.names=F )
1446754779745:dataset
1446754791401:dataset <- dt.spy_options[, .(
1446754791401:symbol,
1446754791401:undersymbol = as.character(undersymbol),
1446754791401:date = as.character(date),
1446754791402:high=as.numeric((paste(hi))),
1446754791402:open=as.numeric((paste(opn))),
1446754791402:close= as.numeric((paste(cl))),
1446754791402:low=as.numeric((paste(lo))),
1446754791402:bid_size = as.numeric((paste(bidsz))),
1446754791403:ask_size = as.numeric((paste(asksz))),
1446754791403:issue_desc,
1446754791403:put_call,
1446754791403:xdate,
1446754791403:strike = as.numeric((paste(strikeprice))),
1446754791404:ask = as.numeric((paste(ask))),
1446754791404:ask_time,
1446754791404:bid = as.numeric((paste(bid))),
1446754791404:bid_time,
1446754791405:last = as.numeric((paste(last))),
1446754791405:dte = as.numeric((paste(days_to_expiration))),
1446754791405:imp_volatility = as.numeric((paste(imp_volatility))),
1446754791405:irho = as.numeric((paste(irho))),
1446754791406:itheta = as.numeric((paste(itheta))),
1446754791406:ivega = as.numeric((paste(ivega))),
1446754791406:idelta = as.numeric((paste(idelta))),
1446754791406:igamma = as.numeric((paste(igamma))),
1446754791407:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1446754791407:opt_val = as.numeric((paste(opt_val))),
1446754791407:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1446754791407:timestamp = as.numeric((paste(timestamp))),
1446754791408:vl = as.numeric((paste(gsub(",", "", vl)))),
1446754791408:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1446754791408:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1446754791409:)]
1446754791454:dataset <-dataset[,list(underlying_symbol = undersymbol,
1446754791455:quote_date = date,
1446754791455:root = symbol,
1446754791455:expiration = paste0(substring(xdate,1,4), '-', substring(xdate,5,6), '-', substring(xdate, 7,8)),
1446754791455:strike = as.numeric(strike),
1446754791455:option_type = ifelse(put_call=='put','p','c'),
1446754791455:open,
1446754791456:high,
1446754791456:low,
1446754791456:close,
1446754791456:trade_volume= vl,
1446754791456:bid_size,
1446754791457:bid,
1446754791457:ask_size,
1446754791457:ask,
1446754791457:underlying_bid = underlying.spy$bid,
1446754791457:underlying_ask = underlying.spy$ask,
1446754791458:underlying_last = underlying.spy$last,
1446754791458:implied_volatility = imp_volatility,
1446754791458:delta = idelta,
1446754791458:gamma = igamma,
1446754791458:theta = itheta,
1446754791459:vega = ivega,
1446754791459:rho = irho,
1446754791459:vwap = vwap,
1446754791459:open_interest = openinterest,
1446754791459:timestamp = chr.timestamp)]
1446754795712:dataset
1446754800186:dbWriteTable(con, value = data.frame(dataset), name = "spy", append = TRUE, row.names=F )
1446754901104:df = read.table(‘webapp.log’)
1446754909433:df = read.table('webapp.log')
1446755159147:system(command='root@ip-172-31-31-149:~/optionsdata# ')
1446755167921:system(command=' tail /var/mail/root')
1446755192225:system(command=' tail /var/mail/root')
1446755199462:system(command=' tail /var/mail/root lines --100')
1446755208206:system(command=' tail /var/mail/root --lines 100')
1446755232686:system(command=' tail /var/log/syslog --lines 100')
1446755247077:data.table(system(command=' tail /var/log/syslog --lines 100')
1446755247694:)
1446755278627:data.table(system(command=' tail /var/log/syslog --lines 10000')
1446755280819:)
1446756397716:data.table(system(command=' tail /var/log/syslog --lines 10000'))
1446756405865:data.table(system(command=' tail /var/log/syslog --lines 10'))
1446766341781:data.table(system(command=' tail /var/log/syslog --lines 10'))
1446766376505:system(command = paste("logger -p local0.info \"", 'hi meg', "\""))
1446766379146:data.table(system(command=' tail /var/log/syslog --lines 10'))
1446766722917:system(command = paste("logger -p local0.info \"", 'hi meg', "\""))
1446766726827:system
1446766735695:system(command=' tail /var/log/syslog --lines 10')
1446766747597:grep(pattern = 'meg',system(command=' tail /var/log/syslog --lines 10'))
1446766755475:class(system(command=' tail /var/log/syslog --lines 10'))
1446766767582:as.character(system(command=' tail /var/log/syslog --lines 10'))
1446778670029:library(data.table)
1446778670350:library(RMySQL)
1446778670737:con <- dbConnect(MySQL(), user="carlton", password= '1234password' )
1446778675858:dt.tradeking <- data.table(dbGetQuery(conn = con,statement = "select * from import_tradeking.spy"))
1446778679180:dt.tradeking
1446778755078:dt.tradeking[,list(underlying_symbol,
1446778755079:quote_date,
1446778755079:expiration,
1446778755079:strike,
1446778755079:option_type,
1446778755080:trade_volume,
1446778755080:bid,
1446778755080:ask,
1446778755080:underlying_ask,
1446778755080:implied_volatility,
1446778755081:delta,
1446778755081:gamma,
1446778755081:theta,
1446778755081:vega,
1446778755081:rho,
1446778755082:vwap,
1446778755082:timestamp)]
1446778768861:dt.tradeking
1446778888650:dt.dates <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from import_tradeking.spy"))
1446778891591:dt.dates
1446778971822:dt.tradeking[,list(underlying_symbol,
1446778971822:quote_date,
1446778971822:expiration,
1446778971822:strike,
1446778971822:option_type,
1446778971823:trade_volume,
1446778971823:bid,
1446778971823:ask,
1446778971823:underlying_ask,
1446778971823:implied_volatility,
1446778971824:delta,
1446778971824:gamma,
1446778971824:theta,
1446778971824:vega,
1446778971824:rho,
1446778971825:vwap,
1446778971825:timestamp)]
1446778980767:dt.tradeking.insert <- dt.tradeking[,list(underlying_symbol,
1446778980768:quote_date,
1446778980768:expiration,
1446778980768:strike,
1446778980769:option_type,
1446778980769:trade_volume,
1446778980769:bid,
1446778980769:ask,
1446778980769:underlying_ask,
1446778980770:implied_volatility,
1446778980770:delta,
1446778980770:gamma,
1446778980770:theta,
1446778980771:vega,
1446778980771:rho,
1446778980771:vwap,
1446778980771:timestamp)]
1446778984410:dt.tradeking.insert
1446779140867:paste0(dt.dates$quote_date, collapse=',')
1446779178523:dt.tradeking <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_tradeking.spy
1446779178913:where quote_date in ( ", paste0(dt.dates$quote_date, collapse=','), ")")))
1446779181949:dt.tradeking
1446779192719:paste0(dt.dates$quote_date, collapse=',')
1446779200626:dt.tradeking <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_tradeking.spy
1446779200626:where quote_date in ( ", paste0(dt.dates$quote_date, collapse=','), " )")))
1446779203132:dt.tradeking
1446779206163:dt.dates <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from import_tradeking.spy"))
1446779206759:dt.tradeking <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_tradeking.spy
1446779207225:where quote_date in ( ", paste0(dt.dates$quote_date, collapse=','), " )")))
1446779211109:dt.tradeking
1446779228860:paste0("select * from import_tradeking.spy
1446779228860:where quote_date in ( ", paste0(dt.dates$quote_date, collapse=','), " )
1446779232583:")"
1446779242746:paste0("select * from import_tradeking.spy
1446779242746:where quote_date in ( ", paste0(dt.dates$quote_date, collapse=','), " )")
1446779264819:dt.tradeking <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_tradeking.spy
1446779265195:where quote_date in ( ", paste0(dt.dates$quote_date, collapse='","'), " )")))
1446779268469:dt.tradeking
1446779274909:paste0("select * from import_tradeking.spy
1446779274909:where quote_date in ( ", paste0(dt.dates$quote_date, collapse='","'), " )")
1446779315674:dt.dates
1446779330184:unique(dt.dates$quote_date)
1446779389324:i <- "2015-11-05"
1446779393012:dt.tradeking <- data.table(dbGetQuery(conn = con,
1446779393012:statement = paste0("select * from import_tradeking.spy
1446779393013:where quote_date in
1446779393013:( '", i, "' )")))
1446779397546:dt.tradeking
1446779475807:chr.max.timestamp <- data.table(dbGetQuery(conn = con,
1446779476111:statement = paste0("select max(timestamp) from import_tradeking.spy
1446779476255:where quote_date in
1446779476717:( '", i, "' )")))
1446779479570:chr.max.timestamp
1446779486777:chr.max.timestamp <- data.table(dbGetQuery(conn = con,
1446779487090:statement = paste0("select max(timestamp) timestamp from import_tradeking.spy
1446779487375:where quote_date in
1446779487747:( '", i, "' )")))
1446779494571:chr.max.timestamp
1446779520313:dt.tradeking <- data.table(dbGetQuery(conn = con,
1446779520616:statement = paste0("select * from import_tradeking.spy
1446779520963:where quote_date in
1446779521280:( '", i, "' ) and timestamp = ",chr.max.timestamp )))
1446779549412:paste0("select * from import_tradeking.spy
1446779549412:where quote_date in
1446779549412:( '", i, "' ) and timestamp = ",chr.max.timestamp )
1446779569424:dt.tradeking <- data.table(dbGetQuery(conn = con,
1446779569424:statement = paste0("select * from import_tradeking.spy
1446779569424:where quote_date in
1446779569424:( '", i, "' ) and timestamp = '",chr.max.timestamp, "'" )))
1446779572347:dt.tradeking
1446779586074:dt.tradeking.insert <- dt.tradeking[,list(underlying_symbol,
1446779586074:quote_date,
1446779586074:expiration,
1446779586074:strike,
1446779586075:option_type,
1446779586075:trade_volume,
1446779586075:bid,
1446779586075:ask,
1446779586075:underlying_ask,
1446779586076:implied_volatility,
1446779586076:delta,
1446779586076:gamma,
1446779586076:theta,
1446779586076:vega,
1446779586077:rho,
1446779586077:vwap,
1446779586077:timestamp)]
1446779680234:dt.tradeking.insert
1446779753530:dbWriteTable(con, value = dt.tradeking.insert, name = "spy", append = TRUE, row.names=F )
1446779768986:con <- dbConnect(MySQL(), user="carlton", password= '1234password', db='tradeking' )
1446779773738:con <- dbConnect(MySQL(), user="carlton", password= '1234password', db='tradeking' )
1446779773740:dt.dates <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from import_tradeking.spy"))
1446779773744:for ( i in unique(dt.dates$quote_date)) {
1446779773745:chr.max.timestamp <- data.table(dbGetQuery(conn = con,
1446779773745:statement = paste0("select max(timestamp) timestamp from import_tradeking.spy
1446779773745:where quote_date in
1446779773745:( '", i, "' )")))
1446779773745:dt.tradeking <- data.table(dbGetQuery(conn = con,
1446779773746:statement = paste0("select * from import_tradeking.spy
1446779773746:where quote_date in
1446779773746:( '", i, "' ) and timestamp = '",chr.max.timestamp, "'" )))
1446779773746:dt.tradeking.insert <- dt.tradeking[,list(underlying_symbol,
1446779773747:quote_date,
1446779773747:expiration,
1446779773747:strike,
1446779773747:option_type,
1446779773748:trade_volume,
1446779773748:bid,
1446779773748:ask,
1446779773748:underlying_ask,
1446779773749:implied_volatility,
1446779773749:delta,
1446779773749:gamma,
1446779773749:theta,
1446779773750:vega,
1446779773750:rho,
1446779773750:vwap,
1446779773750:timestamp)]
1446779773751:dbWriteTable(con, value = dt.tradeking.insert, name = "spy", append = TRUE, row.names=F )
1446779773751:}
1446779966429:con <- dbConnect(MySQL(), user="carlton", password= '1234password', db='tradeking' )
1446779966431:dt.dates <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from import_tradeking.spy"))
1446779966432:dt.dates.already.inserted <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from tradeking.spy"))
1446779966434:for ( i in unique(dt.dates$quote_date)) {
1446779966434:chr.max.timestamp <- data.table(dbGetQuery(conn = con,
1446779966434:statement = paste0("select max(timestamp) timestamp from import_tradeking.spy
1446779966435:where quote_date in
1446779966435:( '", i, "' )")))
1446779966435:dt.tradeking <- data.table(dbGetQuery(conn = con,
1446779966435:statement = paste0("select * from import_tradeking.spy
1446779966435:where quote_date in
1446779966436:( '", i, "' ) and timestamp = '",chr.max.timestamp, "'" )))
1446779966436:dt.tradeking.insert <- dt.tradeking[,list(underlying_symbol,
1446779966436:quote_date,
1446779966437:expiration,
1446779966437:strike,
1446779966437:option_type,
1446779966437:trade_volume,
1446779966438:bid,
1446779966438:ask,
1446779966438:underlying_ask,
1446779966438:implied_volatility,
1446779966439:delta,
1446779966439:gamma,
1446779966439:theta,
1446779966439:vega,
1446779966440:rho,
1446779966440:vwap,
1446779966440:timestamp)]
1446779966441:dbWriteTable(con, value = dt.tradeking.insert, name = "spy", append = TRUE, row.names=F )
1446779966441:}
1446779980513:dt.dates.already.inserted
1446779987552:dt.dates.already.inserted <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from tradeking.spy"))
1446779995888:dt.dates.already.inserted
1446779998544:dt.dates <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from import_tradeking.spy"))
1446780000789:dt.dates
1446780018512:dt.dates
1446780033208:setdiff(dt.dates$quote_date, dt.dates.already.inserted$quote_date)
1446780065246:dt.dates <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from import_tradeking.spy"))
1446780065564:dt.dates.already.inserted <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from tradeking.spy"))
1446780072927:setdiff(dt.dates$quote_date, dt.dates.already.inserted$quote_date)
1446780082768:dt.insert.dates <- setdiff(dt.dates$quote_date, dt.dates.already.inserted$quote_date)
1446780589396:yahoo <- data.table(dbGetQuery(conn = con, "select * from import_yahoo.spy"))
1446780598333:yahoo
1446780615027:yahoo[,quote_date:=substring(timestamp,1,10)]
1446780622876:yahoo
1446780661454:dbWriteTable(con, value = yahoo, name = "spy", append = TRUE, row.names=F )
1446780691942:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "import_yahoo")
1446780694826:dbWriteTable(con, value = yahoo, name = "spy", append = TRUE, row.names=F )
1446780767549:dbWriteTable(con, value = dt.allOptionChains, name = "spy", append = TRUE, row.names=F )
1446780774370:dbWriteTable(con, value = yahoo, name = "spy", append = TRUE, row.names=F )
1446780932150:dt.dates <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from import_yahoo.spy"))
1446780934976:dt.dates
1446780938785:dt.dates.already.inserted
1446780945821:dt.dates.already.inserted <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from yahoo.spy"))
1446780966887:dt.dates <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from import_yahoo.spy"))
1446780966889:dt.dates.already.inserted <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from yahoo.spy"))
1446780970216:dt.dates.already.inserted
1446781002073:i <- '2015-10-29'
1446781005120:chr.max.timestamp <- data.table(dbGetQuery(conn = con,
1446781005364:statement = paste0("select max(timestamp) timestamp from import_yahoo.spy
1446781005547:where quote_date in
1446781005949:( '", i, "' )")))
1446781006351:dt.yahoo <- data.table(dbGetQuery(conn = con,
1446781006627:statement = paste0("select * from import_yahoo.spy
1446781006866:where quote_date in
1446781007232:( '", i, "' ) and timestamp = '",chr.max.timestamp, "'" )))
1446781011747:dt.yahoo
1446781134219:dt.yahoo
1446781137818:dt.yahoo.insert <- dt.yahoo[,list(underlying_symbol=substring(contract_name,1,3),
1446781137818:quote_date,
1446781137819:expiration,
1446781137819:strike,
1446781137819:option_type=call_put,
1446781137819:trade_volume=volume,
1446781137819:bid,
1446781137820:ask,
1446781137820:underlying_ask=underlying,
1446781137820:implied_volatility=iv,
1446781137820:timestamp)]
1446781142905:dt.yahoo.insert
1446781305489:dbWriteTable(con, value = dt.yahoo.insert, name = "spy", append = TRUE, row.names=F )
1446781316700:con <- dbConnect(MySQL(), user="carlton", password= '1234password', db='yahoo' )
1446781319974:dbWriteTable(con, value = dt.yahoo.insert, name = "spy", append = TRUE, row.names=F )
1446781340643:chr.max.timestamp
1446817469680:as.character(system(command=' tail /var/log/syslog --lines 10'))
1446819630772:as.character(system(command=' tail /var/log/syslog --lines 10'))
1446819718624:as.list(system(command=' tail /var/log/syslog --lines 10'))
1446819842956:class(as.list(system(command=' tail /var/log/syslog --lines 10')))
1446820065028:class(as.list(system(command=' tail /var/log/syslog --lines 10')))[1,]
1446820070692:class(as.list(system(command=' tail /var/log/syslog --lines 10')))[[1]]
1446820166984:as.list(system(command=' head /var/log/syslog --lines 10'))
1446820210468:?system
1446820229837:system(command=' head /var/log/syslog --lines 10', intern=T)
1446820236560:system(command=' tail/var/log/syslog --lines 10', intern=T)
1446820239874:system(command=' tail /var/log/syslog --lines 10', intern=T)
1446820600970:system(command=' tail /var/log/syslog --lines 10', intern=T)
1446820605659:system(command = paste("logger -p local0.info \"", 'hi meg', "\""))
1446820607428:system(command=' tail /var/log/syslog --lines 10', intern=T)
1446820612205:system(command=' tail /var/log/syslog --lines 100000', intern=T)
1446820657548:system(command=' read /var/log/syslog ', intern=T)
1446820681674:system(command=' tail /var/log/syslog --lines 100', intern=T)
1446820685191:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1446820694051:x[grep(pattern = 'logger')]
1446820743365:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1446820744687:x
1446820759027:x[grep(pattern = 'logg',x)]
1446820771851:x[grep(pattern = 'CMD',x)]
1446821513631:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1446821515926:x
1446821556515:xx
1446821561036:x[grep(pattern = 'CMD',x)]
1446821663975:system(command=' tail /var/log/mail --lines 100', intern=T)
1446821691306:system(command=' tail /var/mail/root --lines 100', intern=T)
1446821883488:lst.conn=getLstConn()
1446821883488:dt.tie <- getTieflow(lst.conn, '2006-01-01', Sys.Date())[!is.na(tie) & !is.na(load)]
1446821892122:library(DceSql)
1446821892123:library(DceZn)
1446821892123:DceZn:::.setLiveFilesystem(FALSE)
1446821892125:source(paste0(getZnWd(),'/dce/dce/ppa/strategies/termR/run/DailyIntramonth.R'))
1446822075425:dirname(sys.frame(1)$ofile)
1446822081196:sys.frame()
1446822083715:sys.frame(1)
1446822114511:initial.options <- commandArgs(trailingOnly = FALSE)
1446822114512:file.arg.name <- "--file="
1446822114512:script.name <- sub(file.arg.name, "", initial.options[grep(file.arg.name, initial.options)])
1446822114512:script.basename <- dirname(script.name)
1446822114513:other.name <- paste(sep="/", script.basename, "other.R")
1446822114513:print(paste("Sourcing",other.name,"from",script.name))
1446822114513:source(other.name)
1446822298870:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446822300396:x
1446822651183:head(USArrests)
1446824804108:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446824805389:x
1446824941367:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446824943986:x
1446824962898:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446824964858:x
1446825015568:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446825017059:x
1446825547128:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446825548512:x
1446828819043:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446828820677:x
1446829132715:getwd()
1446829894419:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446829895889:x
1446830118909:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446830120273:x
1446831290887:what(dname = getwd())
1446831297795:library(pracma)
1446831542660:system.file("yahooSpyOptionChainScraper",package="DistributionUtils")
1446831546272:system.file("yahooSpyOptionChainScraper.R",package="DistributionUtils")
1446831560110:system.file("yahooSpyOptionChainScraper.R")
1446831710361:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446831711763:x
1446831740651:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446831742090:x
1446832016510:frame_files <- lapply(sys.frames(), function(x) x$ofile)
1446832018916:frame_files
1446832045051:thisFile <- function() {
1446832045051:cmdArgs <- commandArgs(trailingOnly = FALSE)
1446832045051:needle <- "--file="
1446832045051:match <- grep(needle, cmdArgs)
1446832045052:if (length(match) > 0) {
1446832045052:# Rscript
1446832045052:return(normalizePath(sub(needle, "", cmdArgs[match])))
1446832045052:} else {
1446832045052:# 'source'd via R console
1446832045053:return(normalizePath(sys.frames()[[1]]$ofile))
1446832045053:}
1446832045053:}
1446832049035:thisFile
1446832051936:thisFile()
1446832079061:args <- commandArgs(trailingOnly = F)
1446832079061:scriptPath <- normalizePath(dirname(sub("^--file=", "", args[grep("^--file=", args)])))
1446832082467:scriptPath
1446832109264:this.file <- sys.frame(tail(grep('source',sys.calls()),n=1))$ofile
1446832109265:this.dir <- dirname(this.file)
1446832152005:findSourceTraceback()
1446832500293:system(command=' tail /var/mail/root --lines 100', intern=T)
1446832509490:system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446832536953:args<-commandArgs(TRUE)
1446832541488:library(XML)
1446832541649:library(stringr)
1446832541672:library(data.table)
1446832541672:library(rvest)
1446832541734:library(RMySQL)
1446832541735:library(httr)
1446832541735:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1446832542237:chr.market.status <- content(resp)$response$status$current
1446832542263:spy_option <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1446832542921:dt.timecodes <- data.table(unix_timecodes = spy_option %>% html_nodes("option") %>% html_attr("value"))
1446832542961:dt.timecodes[,expiration:= substring(as.POSIXct(as.numeric(unix_timecodes), origin="1970-01-01"), 1,10)]
1446832542968:datetime <- Sys.time()
1446832542968:dt.allOptionChains <- data.table()
1446832542969:for ( i in 1:nrow(dt.timecodes)) {
1446832542969:url <- dt.timecodes[i,]
1446832542970:spy_option <- read_html(paste0("http://finance.yahoo.com/q/op?s=SPY&date=", url$unix_timecodes))
1446832542970:chr.underlying <- as.character(spy_option %>% html_nodes(xpath = '//*[@id="yfs_l84_SPY"]'))
1446832542970:int.underlying <- as.numeric(substring(chr.underlying,
1446832542970:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1],
1446832542970:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1] +  5 ))
1446832542971:dt.option_chain <- readHTMLTable(paste0("http://finance.yahoo.com/q/op?s=SPY&date=", url$unix_timecodes))
1446832542971:dt.1 <- data.frame(dt.option_chain[2])
1446832542972:names(dt.1) <- c("Strike", "Contract_Name", "Last", "Bid", "Ask", "Change", "pct_Change", "Volume", "Open_Interest", "IV")
1446832542972:dt.1 <- data.table(dt.1)
1446832542972:dt.2 <- data.frame(dt.option_chain[3])
1446832542973:names(dt.2) <- c("Strike", "Contract_Name", "Last", "Bid", "Ask", "Change", "pct_Change", "Volume", "Open_Interest", "IV")
1446832542973:dt.2 <- data.table(dt.2)
1446832542973:dt.options <- rbind(dt.1, dt.2)
1446832542974:dt.options <- dt.options[,list(strike=as.numeric(as.character(Strike)),
1446832542974:contract_name=as.character(Contract_Name),
1446832542974:call_put = ifelse(grepl('C', as.character(Contract_Name)) == T , 'c', 'p'),
1446832542974:expiration = as.character(url$expiration),
1446832542975:last=as.numeric(as.character(Last)),
1446832542975:bid=as.numeric(as.character(Bid)),
1446832542975:ask=as.numeric(as.character(Ask)),
1446832542976:change=as.numeric(as.character(Change)),
1446832542976:pct_change=as.numeric(as.character(substring(pct_Change, 1, nchar(as.character(pct_Change)) - 1))),
1446832542976:volume=as.numeric(as.character(Volume)),
1446832542977:oi= as.numeric(as.character(Open_Interest)),
1446832542977:iv = as.numeric(as.character(substring(IV, 1, nchar(as.character(IV)) - 1)))/100,
1446832542977:underlying = int.underlying,
1446832542978:timestamp = format(datetime, tz="America/New_York",usetz=TRUE),
1446832542978:quote_date = substring(format(datetime, tz="America/New_York",usetz=TRUE), 1, 10))]
1446832542979:dt.allOptionChains <- rbind(dt.allOptionChains, dt.options)
1446832542979:}
1446832632801:system(command=' tail /var/mail/root --lines 100', intern=T)
1446832636000:system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446832654968:system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446832664507:system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446833099980:system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446833221331:library(Quantmod)
1446833227922:install.packages('Quantmod')
1446833236429:install.packages('1uantmod')
1446833243037:install.packages('quantmod')
1446834203171:system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446834579608:system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446834583095:My sister-in-law is an absolute technophobe. She has always had some shit mobile phone but recently upgraded to an iPhone due to some pressure from her kids. She was having some problems with certain aspects of it, certain things draining her battery etc and asked me if I could have a look at it. So, me being the absolute evil genius that I am, entered a text shortcut so that when she typed the word 'Jay' (which is her husbands name) it would come up 'you're a fat bitch! Lol jk'. I know this is hardly an imaginative prank, and an infantile text, she would try and text her husband 'Hi Jay' and it would come up 'Hi you're a fat bitch! lol jk' which seemed like a pretty harmless joke that he wouldn't really be offended by. So I sit back to wait for the outcome.
1446834583096:Fast forward a couple of hours and I hear an ungodly hammering of my front door. I answer the door and she shoves past me, "WHAT THE FUCK DID YOU DO TO MY PHONE?!?!" I am completely taken aback by how angry she is and was like "Sorry Kelly, it was only a joke, was Jay pissed off?" to which she replied "I didn't fucking text Jay, my friend's mum had just died, I wrote to her on facebook to say 'So sorry for your loss, thinking of you, love Kelly and Jay'" What she had actually written was "So sorry for your loss, thinking of you, love Kelly and you're a fat bitch! lol jk"
1446834587819:system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446835986804:system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446836003740:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1446836013714:x[grep('.R',x)]
1446836037693:x[grep('Executing',x)]
1446836055871:system(command=' tail /var/log/syslog --lines 100', intern=T)
1446836060668:x[grep('Executing',x)]
1446836068341:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1446836068490:x[grep('Executing',x)]
1446836076042:x <- system(command=' tail /var/log/syslog --lines 50', intern=T)
1446836076186:x[grep('Executing',x)]
1446836079964:x <- system(command=' tail /var/log/syslog --lines 10', intern=T)
1446836080130:x[grep('Executing',x)]
1446836089844:data.table(x[grep('Executing',x)])
1446836101252:x2 <- data.table(x[grep('Executing',x)])
1446836117066:x2
1446836146284:x2[substring(V1, find('Executing '))]
1446836168272:x2[substring(V1, find('Executing '))]
1446836171629:x2$V1
1446836178369:find('Nov',x2$V1
1446836179091:)
1446836243476:x2[str:=str_locate(pattern ='Executing ',V1)]
1446836245266:x2
1446836247456:x2[,str:=str_locate(pattern ='Executing ',V1)]
1446836249257:x2
1446836270397:library(stringr)
1446836274581:x2[,str:=str_locate(pattern ='Executing ',V1)]
1446836276624:x2
1446836287798:str_locate(pattern ='Executing ',x2$V1)
1446836293317:str_locate(pattern ='Executing ',x2$V1)$end
1446836305194:str_locate(pattern ='Executing ',x2$V1)[,end]
1446836311350:class(str_locate(pattern ='Executing ',x2$V1))
1446836316897:data.table(str_locate(pattern ='Executing ',x2$V1))
1446836319155:data.table(str_locate(pattern ='Executing ',x2$V1))$end
1446836329867:x2[,str:=data.table(str_locate(pattern ='Executing ',V1))$end]
1446836331704:x2
1446836347891:x2[,script:=substring(V1, str)]
1446836349277:x2
1446836353636:x2[,script:=substring(V1, str+1)]
1446836355959:x2
1446836414641:x2[,str_time:=data.table(str_locate(pattern =' ip- ',V1))$start]
1446836415830:x2
1446836428975:x2[,str_time:=data.table(str_locate(pattern =' ip-',V1))$start]
1446836430483:x2
1446836442763:x2[,time:=substring(V1, 1,str_time)]
1446836443932:x2
1446836456043:as.POSIXct(x2$time)
1446836462575:x2[,time:=substring(V1, 1,str_time-1)]
1446836463774:x2
1446836471816:x2$time
1446836482525:as.POSIXct(x2$time)
1446837067408:x2$time
1446837069332:x2$time[1]
1446837087112:substring(x2$time[1]1,6
1446837090012:substring(x2$time[1]1,6)
1446837092184:substring(x2$time[1],1,6)
1446837106043:substring(x2$time[1],1,3)
1446837107679:substring(x2$time[1],1,4)
1446837109166:substring(x2$time[1],1,5)
1446837111389:substring(x2$time[1],1,6)
1446837121845:as.Date(substring(x2$time[1],1,6))
1446844911025:x <- system(command=' tail /var/log/syslog --lines 10', intern=T)
1446844914358:x
1446844918917:x2 <- data.table(x[grep('Executing',x)])
1446844920491:x2
1446844925915:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1446844926235:x2 <- data.table(x[grep('Executing',x)])
1446844926546:x2[,str:=data.table(str_locate(pattern ='Executing ',V1))$end]
1446844930124:x2[,script:=substring(V1, str+1)]
1446844931382:x2
1446859258009:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1446859259043:x
1446859263590:x2 <- data.table(x[grep('Executing',x)])
1446859263790:x2[,str:=data.table(str_locate(pattern ='Executing ',V1))$end]
1446859263946:x2[,script:=substring(V1, str+1)]
1446859264110:x2[,str_time:=data.table(str_locate(pattern =' ip-',V1))$start]
1446859264268:x2[,time:=substring(V1, 1,str_time-1)]
1446859265796:x2
1446904928867:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1446904928886:x
1447186979084:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447186979342:x2 <- data.table(x[grep('Executing',x)])
1447186979347:x2
1447292108453:library(IBrokers)
1447292116239:install.packages('IBrokers')
1447472945996:under
1447473593866:getBestOption <- function(data,
1447473593866:chr.trade_date,
1447473593866:chr.expiration,
1447473593867:chr.option_type,
1447473593867:int.min_delta = NULL,
1447473593867:int.strike = NULL,
1447473593867:chr.money_in_out = NULL,
1447473593868:int.min_dollar = NULL ) {
1447473593868:if(is.null(int.min_delta) & is.null(int.strike) & is.null(chr.money_in_out) & is.null(int.min_dollar)) {
1447473593868:warning("Must have delta/strike or in-out combo")
1447473593869:return(NA)
1447473593869:}
1447473593870:if ( !is.null(int.strike) ) {
1447473593870:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447473593870:return(dt.result)
1447473593871:}
1447473593871:if ( !is.null(int.min_delta)) {
1447473593872:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) >= int.min_delta ][order(abs(delta))][1,]
1447473593872:return(dt.result)
1447473593872:}
1447473593874:if (int.money_in_out > 0 ) {
1447473593874:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447473593875:} else {
1447473593875:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447473593876:}
1447473593878:if (nrow(dt.result) == 0) {
1447473593878:warning("No results Returned")
1447473593879:return(NA)
1447473593879:}
1447473593880:return(dt.result[1,])
1447473593881:}
1447473609601:under
1447473631383:getBestOption(underlying,'2014-01-02', '2014-01-03')
1447473708219:getBestOption(underlying,'2014-01-02', '2014-01-03', .3)
1447473718235:getBestOption(underlying,'2014-01-02', '2014-01-03', 'c',.3)
1447473722920:getBestOption(under,'2014-01-02', '2014-01-03', 'c',.3)
1447473743405:under
1447473754222:under2 <- organizeData(under)
1447473764050:organizeData <- function(dt) {
1447473764050:dt <-  dt[,list(symbol=underlying_symbol,
1447473764050:trade_date=as.character(quote_date),
1447473764051:root,
1447473764051:expiration=as.character(expiration),
1447473764051:strike,
1447473764051:call_put=option_type,
1447473764052:bid=bid_1545,
1447473764052:ask=ask_1545,
1447473764052:underlying = underlying_ask_eod,
1447473764053:distance_from_underlying = ifelse(option_type=='c', underlying_ask_eod - strike, strike- underlying_ask_eod),
1447473764053:iv = implied_volatility_1545,
1447473764053:vol = trade_volume,
1447473764054:delta = delta_1545,
1447473764054:gamma = gamma_1545,
1447473764054:theta = theta_1545,
1447473764055:vega = vega_1545,
1447473764055:rho = rho_1545,
1447473764055:vwap,
1447473764056:trade_volume,
1447473764056:strip=paste0(substring(expiration,1,8),'01'))]
1447473764057:return(dt)
1447473764058:}
1447473769816:under2 <- organizeData(under)
1447473775291:getBestOption(data=under2,chr.trade_date = '2014-01-02', '2014-01-03', 'c',.3)
1447473806056:getBestOption <- function(data,
1447473806056:chr.trade_date,
1447473806057:chr.expiration,
1447473806057:chr.option_type,
1447473806057:int.min_delta = NULL,
1447473806057:int.strike = NULL,
1447473806058:chr.money_in_out = NULL,
1447473806058:int.min_dollar = NULL ) {
1447473806058:if(is.null(int.min_delta) & is.null(int.strike) & is.null(chr.money_in_out) & is.null(int.min_dollar)) {
1447473806059:warning("Must have delta/strike or in-out combo")
1447473806059:return(NA)
1447473806059:}
1447473806060:if ( !is.null(int.strike) ) {
1447473806060:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447473806061:return(dt.result)
1447473806061:}
1447473806062:if ( !is.null(int.min_delta)) {
1447473806062:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(abs(delta))][1,]
1447473806062:return(dt.result)
1447473806063:}
1447473806064:if (int.money_in_out > 0 ) {
1447473806065:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447473806065:} else {
1447473806066:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447473806066:}
1447473806068:if (nrow(dt.result) == 0) {
1447473806069:warning("No results Returned")
1447473806069:return(NA)
1447473806070:}
1447473806071:return(dt.result[1,])
1447473806072:}
1447473809007:getBestOption(data=under2,chr.trade_date = '2014-01-02', '2014-01-03', 'c',.3)
1447473827748:getBestOption(data=under2,chr.trade_date = '2014-01-02', '2014-01-03', 'p',.3)
1447474002992:data <- under2
1447474017970:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type]
1447474048959:chr.trade_date = '2014-01-02'chr.expiration =  '2014-01-03',chr.option_type =  'p', int.min_delta = .3
1447474053430:chr.trade_date = '2014-01-02'chr.expiration =  '2014-01-03',chr.option_type =  'p', int.min_delta = .3
1447474059589:chr.trade_date = '2014-01-02'
1447474063105:chr.expiration =  '2014-01-03'
1447474067394:chr.option_type =  'p'
1447474071576:int.min_delta = .3
1447474085919:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type]
1447474169878:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type])]
1447474175912:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type]
1447474197561:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type][abs(delta <= int.min_delta)]
1447474210232:int.min_delta
1447474217529:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type]
1447474230417:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type][abs(delta) <= int.min_delta]
1447474242569:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type][abs(delta) <= int.min_delta][order(abs(delta))]
1447474250200:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type][abs(delta) <= int.min_delta][order(-abs(delta))]
1447474263566:getBestOption <- function(data,
1447474263566:chr.trade_date,
1447474263566:chr.expiration,
1447474263567:chr.option_type,
1447474263567:int.min_delta = NULL,
1447474263567:int.strike = NULL,
1447474263567:chr.money_in_out = NULL,
1447474263568:int.min_dollar = NULL ) {
1447474263568:if(is.null(int.min_delta) & is.null(int.strike) & is.null(chr.money_in_out) & is.null(int.min_dollar)) {
1447474263568:warning("Must have delta/strike or in-out combo")
1447474263569:return(NA)
1447474263569:}
1447474263570:if ( !is.null(int.strike) ) {
1447474263570:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447474263570:return(dt.result)
1447474263571:}
1447474263571:if ( !is.null(int.min_delta)) {
1447474263572:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) >= int.min_delta ][order(-abs(delta))][1,]
1447474263572:return(dt.result)
1447474263572:}
1447474263574:if (int.money_in_out > 0 ) {
1447474263574:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447474263575:} else {
1447474263575:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447474263576:}
1447474263578:if (nrow(dt.result) == 0) {
1447474263578:warning("No results Returned")
1447474263579:return(NA)
1447474263579:}
1447474263580:return(dt.result[1,])
1447474263581:}
1447474267999:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'c', int.min_delta = .3)
1447474282931:chr.option_type <- 'c'
1447474287600:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type
1447474288618:]
1447474290812:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type]
1447474321135:chr.option_type <- 'p'
1447474326286:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type ]
1447474361413:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) >= int.min_delta ]
1447474397223:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type][abs(delta) <= int.min_delta][order(-abs(delta))]
1447474406168:getBestOption <- function(data,
1447474406168:chr.trade_date,
1447474406168:chr.expiration,
1447474406168:chr.option_type,
1447474406169:int.min_delta = NULL,
1447474406169:int.strike = NULL,
1447474406169:chr.money_in_out = NULL,
1447474406169:int.min_dollar = NULL ) {
1447474406170:if(is.null(int.min_delta) & is.null(int.strike) & is.null(chr.money_in_out) & is.null(int.min_dollar)) {
1447474406170:warning("Must have delta/strike or in-out combo")
1447474406170:return(NA)
1447474406171:}
1447474406172:if ( !is.null(int.strike) ) {
1447474406172:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447474406172:return(dt.result)
1447474406173:}
1447474406173:if ( !is.null(int.min_delta)) {
1447474406173:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))
1447474406174:][1,]
1447474406174:return(dt.result)
1447474406175:}
1447474406176:if (int.money_in_out > 0 ) {
1447474406177:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447474406177:} else {
1447474406178:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447474406178:}
1447474406181:if (nrow(dt.result) == 0) {
1447474406181:warning("No results Returned")
1447474406182:return(NA)
1447474406182:}
1447474406183:return(dt.result[1,])
1447474406184:}
1447474408157:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'c', int.min_delta = .3)
1447474414612:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'p', int.min_delta = .3)
1447474450206:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == 'c']
1447474459558:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'p', int.min_delta = .3)
1447474465280:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'p', int.min_delta = .2)
1447474509112:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'p', int.strike = 175)
1447474532441:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'p', chr.money_in_out = 'in', int.min_dollar = 2)
1447474611584:getBestOption <- function(data,
1447474611585:chr.trade_date,
1447474611585:chr.expiration,
1447474611585:chr.option_type,
1447474611586:int.min_delta = NULL,
1447474611586:int.strike = NULL,
1447474611586:chr.money_in_out = NULL,
1447474611586:int.min_dollar = NULL ) {
1447474611587:if(is.null(int.min_delta) & is.null(int.strike) & is.null(chr.money_in_out) & is.null(int.min_dollar)) {
1447474611587:warning("Must have delta/strike or in-out combo")
1447474611587:return(NA)
1447474611588:}
1447474611588:if ( !is.null(int.strike) ) {
1447474611589:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447474611589:return(dt.result)
1447474611589:}
1447474611590:if ( !is.null(int.min_delta)) {
1447474611590:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))
1447474611591:][1,]
1447474611591:return(dt.result)
1447474611591:}
1447474611592:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447474611593:if (int.money_in_out > 0 ) {
1447474611593:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447474611594:} else {
1447474611594:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447474611595:}
1447474611595:if (nrow(dt.result) == 0) {
1447474611596:warning("No results Returned")
1447474611597:return(NA)
1447474611597:}
1447474611598:return(dt.result[1,])
1447474611599:}
1447474614444:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'p', chr.money_in_out = 'in', int.min_dollar = 2)
1447474842753:getBestOption <- function(data,
1447474842753:chr.trade_date,
1447474842754:chr.expiration,
1447474842754:chr.option_type,
1447474842754:int.min_delta = NULL,
1447474842754:int.strike = NULL,
1447474842755:chr.money_in_out = NULL,
1447474842755:int.min_dollar = NULL ) {
1447474842755:if(is.null(int.min_delta) & is.null(int.strike) | (is.null(chr.money_in_out) & is.null(int.min_dollar))) {
1447474842756:warning("Must have delta/strike or in-out combo")
1447474842756:return(NA)
1447474842756:}
1447474842757:if ( !is.null(int.strike) ) {
1447474842757:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447474842758:return(dt.result)
1447474842758:}
1447474842759:if ( !is.null(int.min_delta)) {
1447474842759:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))
1447474842759:][1,]
1447474842760:return(dt.result)
1447474842760:}
1447474842761:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447474842762:if (int.money_in_out > 0 ) {
1447474842762:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447474842763:} else {
1447474842763:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447474842764:}
1447474842765:if (nrow(dt.result) == 0) {
1447474842765:warning("No results Returned")
1447474842766:return(NA)
1447474842766:}
1447474842767:return(dt.result[1,])
1447474842768:}
1447475274539:dt.result <- data.table()
1447475276548:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) }
1447475319196:getBestOption <- function(data,
1447475319196:chr.trade_date,
1447475319196:chr.expiration,
1447475319196:chr.option_type,
1447475319197:int.min_delta = NULL,
1447475319197:int.strike = NULL,
1447475319197:chr.money_in_out = NULL,
1447475319197:int.min_dollar = NULL ) {
1447475319198:if(is.null(int.min_delta) & is.null(int.strike) | (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447475319199:if ( !is.null(int.strike) ) {
1447475319199:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447475319199:return(dt.result)
1447475319200:}
1447475319200:if ( !is.null(int.min_delta)) {
1447475319201:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))
1447475319201:][1,]
1447475319201:return(dt.result)
1447475319202:}
1447475319202:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447475319203:if (int.money_in_out > 0 ) {
1447475319203:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447475319204:} else {
1447475319204:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447475319205:}
1447475319206:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) }
1447475319207:return(dt.result[1,])
1447475319208:}
1447475329891:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'p', chr.money_in_out = 'in')
1447475424279:getBestOption <- function(data,
1447475424279:chr.trade_date,
1447475424279:chr.expiration,
1447475424279:chr.option_type,
1447475424280:int.min_delta = NULL,
1447475424280:int.strike = NULL,
1447475424280:chr.money_in_out = NULL,
1447475424280:int.min_dollar = NULL ) {
1447475424281:if(is.null(int.min_delta) & is.null(int.strike) | (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447475424282:if ( !is.null(int.strike) ) {
1447475424282:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ] ;return(dt.result)
1447475424283:}
1447475424283:if ( !is.null(int.min_delta)) {
1447475424284:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))]                                                                                                                                         ][1,]
1447475424284:return(dt.result)
1447475424284:}
1447475424285:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447475424286:if (int.money_in_out > 0 ) {
1447475424286:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447475424286:} else {
1447475424286:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447475424287:}
1447475424287:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) }
1447475424288:return(dt.result[1,])
1447475424289:}
1447475457865:getBestOption <- function(data,
1447475457865:chr.trade_date,
1447475457866:chr.expiration,
1447475457866:chr.option_type,
1447475457866:int.min_delta = NULL,
1447475457866:int.strike = NULL,
1447475457866:chr.money_in_out = NULL,
1447475457867:int.min_dollar = NULL ) {
1447475457867:if(is.null(int.min_delta) & is.null(int.strike) | (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447475457868:if ( !is.null(int.strike) ) {
1447475457868:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ] ;return(dt.result)
1447475457869:}
1447475457870:if ( !is.null(int.min_delta)) {
1447475457870:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))][1,]
1447475457870:return(dt.result)
1447475457871:}
1447475457871:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447475457872:if (int.money_in_out > 0 ) {
1447475457872:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447475457873:} else {
1447475457873:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447475457874:}
1447475457875:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) }
1447475457876:return(dt.result[1,])
1447475457877:}
1447475463484:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'p', chr.money_in_out = 'in')
1447475554506:under2
1447475565648:under2[,unique(expiration)]
1447475630149:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-18',chr.option_type =  'p', chr.money_in_out = 'in')
1447475643431:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-18',chr.option_type =  'p', int.min_delta = .2 )
1447475678221:getBestOption <- function(data,
1447475678221:chr.trade_date,
1447475678222:chr.expiration,
1447475678222:chr.option_type,
1447475678222:int.min_delta = NULL,
1447475678222:int.strike = NULL,
1447475678222:chr.money_in_out = NULL,
1447475678223:int.min_dollar = NULL ) {
1447475678223:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447475678224:if ( !is.null(int.strike) ) {
1447475678224:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ] ;return(dt.result)
1447475678225:}
1447475678225:if ( !is.null(int.min_delta)) {
1447475678226:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))][1,]
1447475678226:return(dt.result)
1447475678227:}
1447475678227:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447475678228:if (int.money_in_out > 0 ) {
1447475678228:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447475678229:} else {
1447475678229:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447475678230:}
1447475678231:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) }
1447475678232:return(dt.result[1,])
1447475678233:}
1447475681442:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-18',chr.option_type =  'p', int.min_delta = .2 )
1447475993354:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-18',chr.option_type =  'p', int.min_delta = .35 )
1447475996599:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-18',chr.option_type =  'c', int.min_delta = .35 )
1447476008685:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-18',chr.option_type =  'c', int.min_delta = .15 )
1447476019220:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-18',chr.option_type =  'c', int.min_delta = .35 )
1447476579851:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-18',chr.option_type =  'c', int.min_delta = .35 )
1447476580161:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-18',chr.option_type =  'c', int.min_delta = .15 )
1447507583208:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-15',chr.option_type =  'c', int.min_delta = .15 )
1447507591708:under2
1447507601444:under2[expiration == '2014-02-15']
1447507604053:under2[expiration == '2014-02-14']
1447507616095:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-14',chr.option_type =  'c', int.min_delta = .15 )
1447508085160:under2
1447508278120:getBestOption <- function(data,
1447508278121:chr.trade_date,
1447508278121:chr.expiration,
1447508278121:chr.option_type,
1447508278121:int.min_delta = NULL,
1447508278122:int.strike = NULL,
1447508278122:chr.money_in_out = NULL,
1447508278122:int.min_dollar = NULL ) {
1447508278122:if(nrow(data[chr.trade_date==trade_date]) == 0) {warning("No results"); return(NA)}
1447508278123:if(nrow(data[chr.expiration==expiration & ]) == 0) {warning("No results"); return(NA)}
1447508278124:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447508278125:if ( !is.null(int.strike) ) {
1447508278125:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447508278126:if(nrow(dt.result) > 0) {return(dt.result)} else {warning("No results"); return(NA)}
1447508278126:}
1447508278127:if ( !is.null(int.min_delta)) {
1447508278127:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))][1,]
1447508278127:if(nrow(dt.result) > 0) {return(dt.result)} else {warning("No results"); return(NA)}
1447508278128:}
1447508278184:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447508278185:if (int.money_in_out > 0 ) {
1447508278185:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447508278186:} else {
1447508278186:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447508278186:}
1447508278187:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) } else { return(dt.result[1,]) }
1447508278189:}
1447508315390:getBestOption <- function(data,
1447508315391:chr.trade_date,
1447508315391:chr.expiration,
1447508315391:chr.option_type,
1447508315391:int.min_delta = NULL,
1447508315392:int.strike = NULL,
1447508315392:chr.money_in_out = NULL,
1447508315392:int.min_dollar = NULL ) {
1447508315392:if(nrow(data[chr.trade_date==trade_date]) == 0) {warning("No results"); return(NA)}
1447508315393:if(nrow(data[chr.expiration==expiration ]) == 0) {warning("No results"); return(NA)}
1447508315393:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447508315394:if ( !is.null(int.strike) ) {
1447508315395:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447508315395:if(nrow(dt.result) > 0) {return(dt.result)} else {warning("No results"); return(NA)}
1447508315396:}
1447508315396:if ( !is.null(int.min_delta)) {
1447508315397:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))][1,]
1447508315397:if(nrow(dt.result) > 0) {return(dt.result)} else {warning("No results"); return(NA)}
1447508315398:}
1447508315399:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447508315399:if (int.money_in_out > 0 ) {
1447508315400:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447508315400:} else {
1447508315401:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447508315401:}
1447508315402:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) } else { return(dt.result[1,]) }
1447508315404:}
1447508320926:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-14',chr.option_type =  'c', int.min_delta = .15 )
1447508445897:int.min_delta = .15
1447508452168:chr.option_type =  'c'
1447508459539:if(nrow(data[chr.trade_date==trade_date]) == 0) {warning("No results"); return(NA)}
1447508460193:if(nrow(data[chr.expiration==expiration ]) == 0) {warning("No results"); return(NA)}
1447508461494:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447508469013:int.strike <- NULL
1447508470647:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447508476494:chr.money_in_out <- NULL
1447508480318:int.min_dollar <- NULL
1447508481694:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447508485323:if ( !is.null(int.strike) ) {
1447508485499:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447508485647:if(nrow(dt.result) > 0) {return(dt.result)} else {warning("No results"); return(NA)}
1447508485981:}
1447508493949:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ]
1447508508588:int.strike
1447508514671:int.min_delta
1447508520446:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ]
1447508527400:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))][1,]
1447508527579:if(nrow(dt.result) > 0) {return(dt.result)} else {warning("No results"); return(NA)}
1447508531957:dt.result
1447508538356:getBestOption <- function(data,
1447508538356:chr.trade_date,
1447508538356:chr.expiration,
1447508538356:chr.option_type,
1447508538357:int.min_delta = NULL,
1447508538357:int.strike = NULL,
1447508538357:chr.money_in_out = NULL,
1447508538357:int.min_dollar = NULL ) {
1447508538358:if(nrow(data[chr.trade_date==trade_date]) == 0) {warning("No results"); return(NA)}
1447508538358:if(nrow(data[chr.expiration==expiration ]) == 0) {warning("No results"); return(NA)}
1447508538359:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447508538360:if ( !is.null(int.strike) ) {
1447508538360:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447508538360:if(nrow(dt.result) > 0) {return(dt.result)} else {warning("No results"); return(NA)}
1447508538361:}
1447508538362:if ( !is.null(int.min_delta)) {
1447508538362:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))][1,]
1447508538363:if(nrow(dt.result) > 0) {return(dt.result)} else {warning("No results"); return(NA)}
1447508538363:}
1447508538364:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447508538365:if (int.money_in_out > 0 ) {
1447508538366:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447508538366:} else {
1447508538366:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447508538367:}
1447508538368:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) } else { return(dt.result[1,]) }
1447508538370:}
1447508552461:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-03',chr.option_type =  'p', int.min_delta = .2)
1447508559009:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-01-05',chr.option_type =  'p', int.min_delta = .2)
1447508667839:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-14',chr.option_type =  'p', int.min_delta = .2)
1447508677584:chr.expiration =  '2014-02-14'
1447508685130:if ( !is.null(int.strike) ) {
1447508685318:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447508685504:if(nrow(dt.result) > 0) {return(dt.result)} else {warning("No results"); return(NA)}
1447508685828:}
1447508691102:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ]
1447508694757:dt.result
1447508699118:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))][1,]
1447508702955:dt.result
1447508739636:getBestOption <- function(data,
1447508739637:chr.trade_date,
1447508739637:chr.expiration,
1447508739637:chr.option_type,
1447508739637:int.min_delta = NULL,
1447508739638:int.strike = NULL,
1447508739638:chr.money_in_out = NULL,
1447508739638:int.min_dollar = NULL ) {
1447508739638:if(nrow(data[chr.trade_date==trade_date]) == 0) {warning("No results"); return(NA)}
1447508739639:if(nrow(data[chr.expiration==expiration ]) == 0) {warning("No results"); return(NA)}
1447508739639:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447508739640:if ( !is.null(int.strike) ) {
1447508739641:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447508739641:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1447508739642:}
1447508739642:if ( !is.null(int.min_delta)) {
1447508739643:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))]
1447508739643:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1447508739644:}
1447508739645:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447508739646:if (int.money_in_out > 0 ) {
1447508739646:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447508739647:} else {
1447508739647:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447508739648:}
1447508739649:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) } else { return(dt.result[1,]) }
1447508739651:}
1447508749853:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-14',chr.option_type =  'p', int.min_delta = .2)
1447508764922:data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type ]
1447508769157:data
1447508777807:data[,unique(expiration)]
1447508795226:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-22',chr.option_type =  'p', int.min_delta = .2)
1447508828432:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-22',chr.option_type =  'p', int.min_delta = ..3)
1447508831512:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-22',chr.option_type =  'p', int.min_delta = .3)
1447508871724:chr.expiration
1447508874171:chr.option_type
1447508876471:chr.long_short
1447508881310:chr.long_short = 'long'
1447508891446:int.deltas = c(.15,.35)
1447509156568:vec.deltas <- c(.15,.35)
1447511860561:data
1447512102330:vec.strikes
1447512402373:chr.trade_date
1447512441571:vec.deltas <- c(.3,.5)
1447512449365:dt.strike_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.delas) )
1447512453599:dt.strike_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.deltas) )
1447512457062:dt.strike_high
1447512461791:chr.option_type
1447512468931:under2
1447512477640:vec.deltas
1447512484680:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-22',chr.option_type =  'p', int.min_delta = .3)
1447512492282:chr.expiration
1447512501912:chr.expiration <- '2014-02-22'
1447512504096:dt.strike_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.deltas) )
1447512506684:dt.strike_high
1447512518755:dt.strike_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.deltas) )
1447512521095:dt.strike_low
1447512570323:vec.strikes <- c(188,189)
1447512575272:dt.strike_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.strikes) )
1447512575400:dt.strike_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.strikes) )
1447512577641:dt.strike_high
1447512580940:dt.strike_low
1447512594823:vec.strikes <- c(188,180)
1447512596644:dt.strike_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.strikes) )
1447512596773:dt.strike_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.strikes) )
1447512598463:dt.strike_high
1447512602188:dt.strike_low
1447512623143:dt.strike_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.strikes) )
1447512624839:vec.strikes <- c(188,180)dt.strike_low
1447512626015:dt.strike_low
1447512644018:dt.strike_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = max(vec.strikes) )
1447512644164:dt.strike_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = min(vec.strikes) )
1447512646312:dt.strike_low
1447512652217:dt.strike_high
1447512671847:chr.long_short
1447536587114:dt.strike_high
1447536614998:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = max(vec.strikes) )
1447536617055:dt.price_high
1447536624561:vec.strikes
1447536626404:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = min(vec.strikes) )
1447536628507:dt.price_low
1447536694840:chr.option_type
1447536721357:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', max(vec.strikes), min(vec.strikes)) )
1447536739238:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447536740641:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447536742882:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', max(vec.strikes), min(vec.strikes)) )
1447536743248:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447536746282:dt.price_high
1447536751596:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447536755149:dt.price_low
1447536849954:dt.price_high
1447536878958:chr.option_type
1447536881802:chr.long_short
1447536899355:dt.price_high[,qty:=ifelse(chr.long_short == 'long', int.qty*1, int.qty*-1)]
1447536903555:int.qty = 1
1447536904922:dt.price_high[,qty:=ifelse(chr.long_short == 'long', int.qty*1, int.qty*-1)]
1447536906654:dt.price_high
1447536923246:dt.price_low[,qty:=ifelse(chr.long_short == 'long', int.qty*-1, int.qty*1)]
1447536925317:dt.price_low
1447536951930:optVertical <- function(data, chr.trade_date, chr.expiration, chr.option_type, chr.long_short, vec.deltas=NULL, vec.strikes=NULL, int.qty = 1 ) {
1447536951930:if (!is.null(vec.deltas)) {
1447536951931:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.deltas) )
1447536951931:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.deltas) )
1447536951932:}
1447536951932:if (!is.null(vec.deltas)) {
1447536951932:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', max(vec.strikes), min(vec.strikes)) )
1447536951933:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447536951933:}
1447536951934:dt.price_high[,qty:=ifelse(chr.long_short == 'long', int.qty*1, int.qty*-1)]
1447536951935:dt.price_low[,qty:=ifelse(chr.long_short == 'long', int.qty*-1, int.qty*1)]
1447536951935:dt.all <- rbind(dt.price_high, dt.price_low)
1447536951937:}
1447537015093:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'p',chr.long_short = 'short',vec.deltas = c(.15,.3))
1447537055314:optVertical <- function(data, chr.trade_date, chr.expiration, chr.option_type, chr.long_short, vec.deltas=NULL, vec.strikes=NULL, int.qty = 1 ) {
1447537055315:if (!is.null(vec.deltas)) {
1447537055315:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.deltas) )
1447537055315:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.deltas) )
1447537055316:}
1447537055316:if (!is.null(vec.strikes)) {
1447537055317:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', max(vec.strikes), min(vec.strikes)) )
1447537055317:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447537055317:}
1447537055318:dt.price_high[,qty:=ifelse(chr.long_short == 'long', int.qty*1, int.qty*-1)]
1447537055319:dt.price_low[,qty:=ifelse(chr.long_short == 'long', int.qty*-1, int.qty*1)]
1447537055319:dt.all <- rbind(dt.price_high, dt.price_low)
1447537055321:}
1447537058928:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'p',chr.long_short = 'short',vec.deltas = c(.15,.3))
1447537065813:optVertical <- function(data, chr.trade_date, chr.expiration, chr.option_type, chr.long_short, vec.deltas=NULL, vec.strikes=NULL, int.qty = 1 ) {
1447537065813:if (!is.null(vec.deltas)) {
1447537065814:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.deltas) )
1447537065814:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.deltas) )
1447537065814:}
1447537065815:if (!is.null(vec.strikes)) {
1447537065815:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', max(vec.strikes), min(vec.strikes)) )
1447537065816:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447537065816:}
1447537065817:dt.price_high[,qty:=ifelse(chr.long_short == 'long', int.qty*1, int.qty*-1)]
1447537065817:dt.price_low[,qty:=ifelse(chr.long_short == 'long', int.qty*-1, int.qty*1)]
1447537065818:dt.all <- rbind(dt.price_high, dt.price_low)
1447537065819:return(dt.all)
1447537065819:}
1447537068477:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'p',chr.long_short = 'short',vec.deltas = c(.15,.3))
1447537083536:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3))
1447539827347:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3))[,sum(delta*qty)]
1447539841801:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'long',vec.deltas = c(.15,.3))[,sum(delta*qty)]
1447539845921:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'long',vec.deltas = c(.15,.3))
1447539935637:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'p',chr.long_short = 'long',vec.deltas = c(.15,.3))
1447539946172:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'p',chr.long_short = 'long',vec.deltas = c(.15,.3))[,sum(dtelta*qty)]
1447539952044:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'p',chr.long_short = 'long',vec.deltas = c(.15,.3))[,sum(delta*qty)]
1447542337084:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3))
1447542347420:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=2)
1447542362235:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=2)[,sum(delta*qty)]
1447544479790:tradeking <- data.table(dbGetQuery("select * from tradeking.spy"))
1447544519990:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1447544528558:tradeking <- data.table(dbGetQuery(con,"select * from tradeking.spy"))
1447544531248:tradeking
1447544700157:temp = list.files(path = '/home/ubuntu/optionsdata/python_import/outdir/', pattern="*.csv")
1447544701903:temp
1447544717603:tail(temp,7)
1447544731750:tradeking
1447544737102:tradeking[,range(timestamp)]
1447544748932:tradeking <- data.table(dbGetQuery(con,"select * from import_tradeking.spy"))
1447544751914:tradeking[,range(timestamp)]
1447544757369:tradeking <- data.table(dbGetQuery(con,"select * from tradeking.spy"))
1447544760256:tradeking[,range(timestamp)]
1447544765864:tradeking
1447544792371:for (i in temp) {
1447544792371:print(i)
1447544792372:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1447544792372:dbWriteTable(con, value = temps, name = "spy", append = TRUE, row.names=F )
1447544792372:}
1447544800596:temp <- tail(temp,7)
1447544804184:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1447544805570:t
1447544813901:con
1447544819465:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "import_livevol")
1447544822959:temp = list.files(path = '/home/ubuntu/optionsdata/python_import/outdir/', pattern="*.csv")
1447544823013:temp <- tail(temp,7)
1447544823014:for (i in temp) {
1447544823014:print(i)
1447544823014:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1447544823014:dbWriteTable(con, value = temps, name = "spy", append = TRUE, row.names=F )
1447544823015:}
1447544832347:for (i in temp) {
1447544832348:print(i)
1447544832348:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1447544832348:dbWriteTable(con, value = t, name = "spy", append = TRUE, row.names=F )
1447544832349:}
1447544842836:tradeking
1447544869590:livevol <- data.table(dbGetQuery(con, "select * from import_livevol where quote_date >= 20151105"))
1447544874847:livevol <- data.table(dbGetQuery(con, "select * from import_livevol.spy where quote_date >= 20151105"))
1447544897362:livevol
1447545116845:livevol[expiration=='2015-11-20']
1447545158024:livevol[expiration=='2015-11-20'][,list(underlying_ask_1545, bid_1545, ask_1545,delta_1545)]
1447545181522:livevol[expiration=='2015-11-20'][,list(quote_date, expiration, strike, option_type, underlying_ask_1545, bid_1545, ask_1545,delta_1545)]
1447545194666:livevol2 <- livevol[expiration=='2015-11-20'][,list(quote_date, expiration, strike, option_type, underlying_ask_1545, bid_1545, ask_1545,delta_1545)]
1447545199381:tradeking
1447545227056:tradeking[,list(quote_date,expiration,strike,option_type,underlying_ask,bid,ask)]
1447545236183:tradeking[,list(quote_date,expiration,strike,option_type,underlying_ask,bid,ask, delta)]
1447545247324:tradeking2 <- tradeking[,list(quote_date,expiration,strike,option_type,underlying_ask,bid,ask, delta)]
1447545256073:tradeking2
1447545275071:tradeking2 <- tradeking[expiration=='2015-11-20'][,list(quote_date,expiration,strike,option_type,underlying_ask,bid,ask, delta)]
1447545277802:tradeking2
1447545350051:livevol2
1447545464884:tradeking2 <- tradeking[expiration=='2015-11-20'][,list(quote_date,expiration,strike,option_type,underlying_ask=underlying_tradeking,bid=bid_tradeking,ask=ask_tradeking, delta=delta_tradeking)]
1447545472539:tradeking2 <- tradeking[expiration=='2015-11-20'][,list(quote_date,expiration,strike,option_type,underlying_tradeking=underlying_ask,bid=bid_tradeking,ask=ask_tradeking, delta=delta_tradeking)]
1447545488110:tradeking2 <- tradeking[expiration=='2015-11-20'][,list(quote_date,expiration,strike,option_type,underlying_tradeking=underlying_ask,bid_tradeking=bid,ask_tradeking=ask, delta_tradeking=delta)]
1447545514938:livevol2 <- livevol[expiration=='2015-11-20'][,list(quote_date, expiration, strike, option_type, underlying_livevol=underlying_ask_1545, bid_livevol=bid_1545, ask_livevol=ask_1545,delta_livevol=delta_1545)]
1447545517526:all <- merge(tradeking2, livevol2, by=c('quote_date','expiration','strike','option_type'))
1447545519652:all
1447545655430:all
1447545702136:all[,mae(underlying_tradeking, underlying_livevol)]
1447545706121:library(Metrics)
1447545711725:install.packages('Metrics')
1447546026694:all <- merge(tradeking2, livevol2, by=c('quote_date','expiration','strike','option_type'))
1447546032384:tradeking <- data.table(dbGetQuery(con,"select * from tradeking.spy"))
1447546032387:tradeking2 <- tradeking[expiration=='2015-11-20'][,list(quote_date,expiration,strike,option_type,underlying_tradeking=underlying_ask,bid_tradeking=bid,ask_tradeking=ask, delta_tradeking=delta)]
1447546032389:livevol <- data.table(dbGetQuery(con, "select * from import_livevol.spy where quote_date >= 20151105"))
1447546032391:livevol2 <- livevol[expiration=='2015-11-20'][,list(quote_date, expiration, strike, option_type, underlying_livevol=underlying_ask_1545, bid_livevol=bid_1545, ask_livevol=ask_1545,delta_livevol=delta_1545)]
1447546032405:all <- merge(tradeking2, livevol2, by=c('quote_date','expiration','strike','option_type'))
1447546047607:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1447546052140:tradeking <- data.table(dbGetQuery(con,"select * from tradeking.spy"))
1447546052310:tradeking2 <- tradeking[expiration=='2015-11-20'][,list(quote_date,expiration,strike,option_type,underlying_tradeking=underlying_ask,bid_tradeking=bid,ask_tradeking=ask, delta_tradeking=delta)]
1447546052315:livevol <- data.table(dbGetQuery(con, "select * from import_livevol.spy where quote_date >= 20151105"))
1447546070824:livevol2 <- livevol[expiration=='2015-11-20'][,list(quote_date, expiration, strike, option_type, underlying_livevol=underlying_ask_1545, bid_livevol=bid_1545, ask_livevol=ask_1545,delta_livevol=delta_1545)]
1447546070830:all <- merge(tradeking2, livevol2, by=c('quote_date','expiration','strike','option_type'))
1447546087187:all
1447546094620:install.packages('IBrokers')
1447546115450:install.packages('Metrics')
1447546128531:install.packages('ggplot2')
1447546142011:install.packages('Metrics')
1447546285602:all
1447546291851:tradeking <- data.table(dbGetQuery(con,"select * from tradeking.spy"))
1447546303844:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1447546307328:tradeking <- data.table(dbGetQuery(con,"select * from tradeking.spy"))
1447546307477:tradeking2 <- tradeking[expiration=='2015-11-20'][,list(quote_date,expiration,strike,option_type,underlying_tradeking=underlying_ask,bid_tradeking=bid,ask_tradeking=ask, delta_tradeking=delta)]
1447546307487:livevol <- data.table(dbGetQuery(con, "select * from import_livevol.spy where quote_date >= 20151105"))
1447546329267:livevol2 <- livevol[expiration=='2015-11-20'][,list(quote_date, expiration, strike, option_type, underlying_livevol=underlying_ask_1545, bid_livevol=bid_1545, ask_livevol=ask_1545,delta_livevol=delta_1545)]
1447546329273:alls <- merge(tradeking2, livevol2, by=c('quote_date','expiration','strike','option_type'))
1447546342260:alls
1447546346762:library(Metrics)
1447546361680:alls[,mae(underlying_tradeking, underlying_livevol)]
1447546400490:ggplot(alls, aes(x=bid_tradeking, y=bid_livevol)) + geom_point() + geom_abline(slope=2)
1447546405472:library(ggplot2)
1447546408137:ggplot(alls, aes(x=bid_tradeking, y=bid_livevol)) + geom_point() + geom_abline(slope=1)
1447546423735:alls
1447546432604:alls[,mae(bid_tradeking, bid_livevol)]
1447546446538:alls[,mae(delta_tradeking, delta_livevol)]
1447546452665:alls
1447546462754:alls[abs(strike-underlying_tradeking) < 20]
1447546472582:alls[abs(strike-underlying_tradeking) < 10]
1447546474975:alls[abs(strike-underlying_tradeking) < 50]
1447546486863:alls[abs(strike-underlying_tradeking) < 5]
1447546497410:alls[abs(strike-underlying_tradeking) < 5][,mae(delta_tradeking, delta_livevol)]
1447547430652:alls
1447547936927:alls
1447548028551:alls[abs(strike-underlying_tradeking) < 10]
1447548344832:alls
1447548433984:alls
1447548444602:alls[,mae(bid_tradeking, ask_tradeking)]
1447548450754:alls[,mae(bid_tradeking, bid_tradeking)]
1447548461958:alls[,mae(bid_tradeking, bid_livevol)]
1447552461491:library(IBrokers)
1447552470586:tws <- twsConnect()
1447552664620:tws <- twsConnect()
1447552853048:tws <- twsConnect()
1447552873603:tws <- twsConnect()
1447552921997:tws <- twsConnect()
1447553053737:tws <- twsConnect()
1447553128921:tws <- twsConnect()
1447553422239:tws <- twsConnect()
1447553433228:library(IBrokers)
1447553433392:tws <- twsConnect()
1447553585255:tws <- twsConnect()
1447553608857:tws <- twsConnect()
1447553616724:?twsConnect
1447553667989:tws <- twsConnect(host='http://52.32.108.229/')
1447553675201:tws <- twsConnect(host='52.32.108.229')
1447553827226:tws <- twsConnect(host='52.32.108.229')
1447553837896:tws <- twsConnect(host=52.32.108.229)
1447553840796:'
1447553842149:tws <- twsConnect(host='52.32.108.229')
1447553843556:tws <- twsConnect(host='52.32.108.229')
1447553859016:localhost
1447553885991:tws <- twsConnect()
1447553934308:tws <- twsConnect()
1447554029753:tws <- twsConnect()
1447554118056:tws <- twsConnect()
1447554121224:twsConnect
1447554277353:twsConnect2()
1447554331107:twsConnect()
1447554441102:twsConnect()
1447559039526:twsConnect(host = 'http://52.32.108.229:8787')
1447559047583:twsConnect(host = '52.32.108.229')
1447559847745:twsConnect
1447560200180:twsConnect(host = '52.32.108.229')
1447560432805:twsConnect(host = '52.32.108.229', port='4001')
1447560470691:tws <- twsConnect(host = '52.32.108.229', port='4001')
1447560540279:tws <- twsConnect( port='4001')
1447560552572:tws <- twsConnect(host = '52.32.108.229', port='4001')
1447560683195:ip
1447596956854:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=2)[,sum(delta*qty)]
1447596960926:optVertical <- function(data, chr.trade_date, chr.expiration, chr.option_type, chr.long_short, vec.deltas=NULL, vec.strikes=NULL, int.qty = 1 ) {
1447596960926:if (!is.null(vec.deltas)) {
1447596960927:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.deltas) )
1447596960927:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.deltas) )
1447596960927:}
1447596960928:if (!is.null(vec.strikes)) {
1447596960928:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', max(vec.strikes), min(vec.strikes)) )
1447596960928:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447596960928:}
1447596960929:dt.price_high[,qty:=ifelse(chr.long_short == 'long', int.qty*1, int.qty*-1)]
1447596960929:dt.price_low[,qty:=ifelse(chr.long_short == 'long', int.qty*-1, int.qty*1)]
1447596960930:dt.all <- rbind(dt.price_high, dt.price_low)
1447596960930:return(dt.all)
1447596960931:}
1447596964309:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=2)[,sum(delta*qty)]
1447596971543:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=2)
1447598821532:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=2)
1447598861665:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=2)
1447598870852:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=2)[,sum(delta*qty)]
1447598875336:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2014-02-22', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=1)[,sum(delta*qty)]
1447599162785:library(data.table)
1447599162786:library(RMySQL)
1447599162786:con <- dbConnect(MySQL(), user="carlton", password= '1234password', db='tradeking' )
1447599162796:dt.dates <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from import_tradeking.spy"))
1447599162897:dt.dates.already.inserted <- data.table(dbGetQuery(conn = con,statement = "select distinct quote_date from tradeking.spy"))
1447599162910:dt.insert.dates <- setdiff(dt.dates$quote_date, dt.dates.already.inserted$quote_date)
1447599166375:dt.insert.dates
1447599178283:i <- "2015-11-13"
1447599185460:chr.max.timestamp <- data.table(dbGetQuery(conn = con,
1447599185460:statement = paste0("select max(timestamp) timestamp from import_tradeking.spy
1447599185460:where quote_date in
1447599185461:( '", i, "' )")))
1447599185521:dt.tradeking <- data.table(dbGetQuery(conn = con,
1447599185522:statement = paste0("select * from import_tradeking.spy
1447599185522:where quote_date in
1447599185522:( '", i, "' ) and timestamp = '",chr.max.timestamp, "'" )))
1447599185755:dt.tradeking.insert <- dt.tradeking[,list(underlying_symbol,
1447599185755:quote_date,
1447599185755:expiration,
1447599185755:strike,
1447599185756:option_type,
1447599185756:trade_volume,
1447599185756:bid,
1447599185756:ask,
1447599185756:underlying_ask,
1447599185756:implied_volatility,
1447599185757:delta,
1447599185757:gamma,
1447599185757:theta,
1447599185757:vega,
1447599185757:rho,
1447599185757:vwap,
1447599185758:timestamp)]
1447599189315:dbWriteTable(con, value = dt.tradeking.insert, name = "spy", append = TRUE, row.names=F )
1447599567288:library(IBrokers)
1447599573297:twsConnect()
1447599584311:twsConnect(port='4001')
1447601933415:ibgConnect()
1447602081714:ibgConnect()
1447602090824:ibgConnect(host='52.32.108.229')
1447603041403:library(RCurl)
1447603058285:x <- getURL("http://www.nasdaq.com/screening/companies-by-industry.aspx?exchange=NYSE&render=download")
1447603060028:y <- read.csv(text = x)
1447603061671:y
1447603070975:head(y)
1447603086461:y<- data.table(y)
1447603087450:y
1447603357444:y$Symbol
1447603374166:y <- read.csv(text = x,stringsAsFactors = F)
1447603375677:y$Symbol
1447603624255:query <- list()
1447603624449:query[[ "symbol" ]] <- "AAN"
1447603624840:query[[ "query" ]] <- "xyear-gt:2013"
1447603625938:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1447603630184:response.options
1447603644024:temp <- fromJSON(response.options)
1447603644059:dt.spy_options <- data.table()
1447603644060:for (i in 1:length(temp$response$quotes$quote))
1447603644060:{
1447603644060:tempB <- data.table(as.data.frame(t(temp$response$quotes$quote[[i]])))
1447603644061:dt.spy_options <- rbind(dt.spy_options, tempB,fill=T)
1447603644061:}
1447603653008:dt.spy_options
1447603677805:dt.spy_options
1447603682167:dt.spy_options[vwap>0]
1447603824130:dataset <- dt.spy_options[, .(
1447603824130:symbol,
1447603824130:undersymbol = as.character(undersymbol),
1447603824130:date = as.character(date),
1447603824130:high=as.numeric((paste(hi))),
1447603824131:open=as.numeric((paste(opn))),
1447603824131:close= as.numeric((paste(cl))),
1447603824131:low=as.numeric((paste(lo))),
1447603824131:bid_size = as.numeric((paste(bidsz))),
1447603824131:ask_size = as.numeric((paste(asksz))),
1447603824132:issue_desc,
1447603824132:put_call,
1447603824132:xdate,
1447603824132:strike = as.numeric((paste(strikeprice))),
1447603824133:ask = as.numeric((paste(ask))),
1447603824133:ask_time,
1447603824133:bid = as.numeric((paste(bid))),
1447603824133:bid_time,
1447603824134:last = as.numeric((paste(last))),
1447603824134:dte = as.numeric((paste(days_to_expiration))),
1447603824134:imp_volatility = as.numeric((paste(imp_volatility))),
1447603824134:irho = as.numeric((paste(irho))),
1447603824135:itheta = as.numeric((paste(itheta))),
1447603824135:ivega = as.numeric((paste(ivega))),
1447603824135:idelta = as.numeric((paste(idelta))),
1447603824135:igamma = as.numeric((paste(igamma))),
1447603824136:openinterest = as.numeric((paste(gsub(",", "", openinterest)))),
1447603824136:opt_val = as.numeric((paste(opt_val))),
1447603824136:pr_openinterest = as.numeric((paste(gsub(",", "", pr_openinterest)))),
1447603824137:timestamp = as.numeric((paste(timestamp))),
1447603824137:vl = as.numeric((paste(gsub(",", "", vl)))),
1447603824137:vwap = as.numeric((paste(gsub(",", "", vwap)))),
1447603824138:time_added = format(Sys.time(), tz="America/New_York",usetz=TRUE)
1447603824138:)]
1447603832148:dataset
1447603862617:dataset[vwap > 0]
1447603865541:dataset
1447604614717:dataset[strike ==25]
1447604779780:y
1447604787328:y$Symbol
1447604796577:y
1447604804279:y <- data.table(read.csv(text = x,stringsAsFactors = F))
1447604806807:y
1447604831102:y[grep('^',x = Symbol)==F]
1447604846626:y[grep('^',x$Symbol)==F]
1447604854612:y[grep('^',Symbol)==F]
1447604859062:y
1447604862561:y$Symbol
1447604884850:subset(y$Symbol, grep('^', y$Symbol)==F)
1447604889402:y$Symbol
1447604895879:y$Symbol[1:50]
1447604941227:paste0(y$Symbol[1:50],collapse=',')
1447604951190:query <- list()
1447604951532:query[[ "symbol" ]] <- paste0(y$Symbol[1:50],collapse=',')
1447604951879:query[[ "query" ]] <- "xyear-gt:2014"
1447604952370:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1447604966507:query <- list()
1447604966679:query[[ "symbol" ]] <- "SPY,GOOG"
1447604966862:query[[ "query" ]] <- "xyear-gt:2014"
1447604967270:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1447604973352:query <- list()
1447604973564:query[[ "symbol" ]] <- "SPY"
1447604973773:query[[ "query" ]] <- "xyear-gt:2014"
1447604974165:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1447605005517:query <- list()
1447605005518:query[[ "symbol" ]] <- "SPY"
1447605005518:query[[ "query" ]] <- "xyear-gt:2014"
1447605005518:query
1447605065677:query <- list()
1447605065970:query[[ "symbol" ]] <- "SPY,GOOG"
1447605066203:query[[ "query" ]] <- "xyear-gt:2014"
1447605066381:response.options <- credentials$OAuthRequest(tkURLD, query, method = "POST")
1447605070851:response.options
1447607996488:install.packages('sendmailR')
1447608088948:data.table()
1447608094513:tables()
1447608131354:yahoo <- data.table()
1447608133872:gc()
1447608139131:tables()
1447608388113:install.packages('sendmailR')
1447608439324:library(sendmailR)
1447608466081:library(sendmailR)
1447608472856:install.packages('sendmailR')
1447608554681:.ls.objects <- function (pos = 1, pattern, order.by,
1447608554681:decreasing=FALSE, head=FALSE, n=5) {
1447608554682:napply <- function(names, fn) sapply(names, function(x)
1447608554682:fn(get(x, pos = pos)))
1447608554682:names <- ls(pos = pos, pattern = pattern)
1447608554682:obj.class <- napply(names, function(x) as.character(class(x))[1])
1447608554683:obj.mode <- napply(names, mode)
1447608554683:obj.type <- ifelse(is.na(obj.class), obj.mode, obj.class)
1447608554683:obj.prettysize <- napply(names, function(x) {
1447608554684:capture.output(format(utils::object.size(x), units = "auto")) })
1447608554684:obj.size <- napply(names, object.size)
1447608554684:obj.dim <- t(napply(names, function(x)
1447608554685:as.numeric(dim(x))[1:2]))
1447608554685:vec <- is.na(obj.dim)[, 1] & (obj.type != "function")
1447608554686:obj.dim[vec, 1] <- napply(names, length)[vec]
1447608554686:out <- data.frame(obj.type, obj.size, obj.prettysize, obj.dim)
1447608554686:names(out) <- c("Type", "Size", "PrettySize", "Rows", "Columns")
1447608554687:if (!missing(order.by))
1447608554687:out <- out[order(out[[order.by]], decreasing=decreasing), ]
1447608554688:if (head)
1447608554688:out <- head(out, n)
1447608554689:out
1447608554689:}
1447608558583:.ls.objects()
1447608592361:gc()
1447608595075:.ls.objects()
1447608606943:install.packages('sendmailR')
1447615039048:install.packages('sendmailR')
1447615048951:library(sendmailR)
1447615071367:install.packages('sendmailR')
1447615370519:install.packages('sendmailR')
1447615497227:library(sendmailR)
1447615530309:sendmailR::sendmail('r@gmail.com','robert.j.carlton@gmail.com','hey','test')
1447615592674:sendmailR::sendmail('r@gmail.com','robert.j.carlton@gmail.com','hey','test')
1447615616439:sendmailR::sendmail('r@gmail.com','robert.j.carlton@gmail.com','hey','test',blocking=F)
1447615672938:sendmailR::sendmail('r@gmail.com','robert.j.carlton@gmail.com','hey','test',verbose=T)
1447616281117:sendmail_options(smtpServer="ASPMX.L.GOOGLE.COM")
1447616288696:sendmailR::sendmail('r@gmail.com','robert.j.carlton@gmail.com','hey','test',verbose=T)
1447616297731:sendmailR::sendmail('r@gmail.com','robert.j.carlton@gmail.com','hey','test')
1447616322926:from <- "<you@me.com>"
1447616322926:to <- "<robert.j.carlton@gmail.com>"
1447616322927:subject <- "Welcome!"
1447616322927:msg <- "To The Rock"
1447616322927:sendmail(from, to, subject, msg)
1447616331612:sendmail
1447616343767:from <- "you@me.com"
1447616343768:to <- "<robert.j.carlton@gmail.com>"
1447616343768:subject <- "Welcome!"
1447616343768:msg <- "To The Rock"
1447616343769:sendmail(from, to, subject, msg)
1447616393421:from <- "you@me.com"
1447616393422:to <- "robert.j.carlton@gmail.com"
1447616393422:subject <- "Welcome!"
1447616393422:msg <- "To The Rock"
1447616393423:sendmail(from, to, subject, msg)
1447616495572:from <- "you@gmail.com"
1447616495572:to <- "robert.j.carlton@gmail.com"
1447616495573:subject <- "Welcome!"
1447616495573:msg <- "To The Rock"
1447616495573:sendmail(from, to, subject, msg)
1447616560087:from <- "hello <you@dce.com>"
1447616560087:to <- "robert <robert.j.carlton@gmail.com>"
1447616560088:subject <- "Welcome!"
1447616560088:msg <- "To The Rock"
1447616560088:sendmail(from, to, subject, msg)
1447616632631:from <- "you@account.com"
1447616632632:to <- "robert.j.carlton@gmail.com"
1447616632632:subject <- "Email Subject"
1447616632632:body <- "Email body."
1447616632633:mailControl=list(smtpServer="serverinfo")
1447616632633:sendmail(from=from,to=to,subject=subject,msg=body,control=mailControl)
1447617495733:from
1447618691376:alls
1447618827330:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447618828384:x
1447618833345:x2 <- data.table(x[grep('Executing',x)])
1447618834715:x2
1447618847991:x <- system(command=' tail /var/log/syslog --lines 1000', intern=T)
1447618848731:x2 <- data.table(x[grep('Executing',x)])
1447618850260:x2
1447619852110:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-22',chr.option_type =  'p', int.min_delta = .3)
1447619880733:library(shiny)
1447619885934:install.packages('shiny')
1447620445463:install.packages('shiny')
1447620683372:library(shiny)
1447620684458:library(datasets)
1447620692362:pwd
1447620695454:pwd()
1447620697982:get_wd()
1447620701723:getwd()
1447620743863:runApp('~/ShinyApps/testAppPw')
1447620785365:runApp('~/ShinyApps/testAppPw')
1447620976447:runApp('~/ShinyApps/testAppPw')
1447646091756:runApp('~/ShinyApps/testAppPw')
1447646095197:library(shiny)
1447646096343:runApp('~/ShinyApps/testAppPw')
1447646852584:runApp('~/ShinyApps/testAppPw')
1447646896545:runApp('~/ShinyApps/testAppPw')
1447681682112:dt.spy <- data.table(dbGetQuery(con, "select * from import_livevol.spy limit 5"))
1447681685305:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password")
1447681685570:dt.spy <- data.table(dbGetQuery(con, "select * from import_livevol.spy limit 5"))
1447681690432:dt.spy
1447682216557:diamonds
1447683599313:dt.spy <- data.table(dbGetQuery(con, "select * from import_livevol.spy where quote_date in ('2015-01-02','2015-01-05) limit 5"))
1447683608055:dt.spy <- data.table(dbGetQuery(con, "select * from import_livevol.spy where quote_date in ('2015-01-02','2015-01-05')"))
1447683635778:dt.spy <- data.table(dbGetQuery(con, "select * from import_livevol.spy where underlying_symbol = 'SPY' and quote_date in ('2015-01-02','2015-01-05')"))
1447683642547:dt.spy
1447697138221:dt.spy
1447697140114:dt.spy <- data.table(dbGetQuery(con, "select * from import_livevol.spy where underlying_symbol = 'SPY' "))
1447697146026:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password")
1447697146349:dt.spy <- data.table(dbGetQuery(con, "select * from import_livevol.spy where underlying_symbol = 'SPY' "))
1447697294306:dt.spy <- data.table(dbGetQuery(con, "select * from import_livevol.spy where underlying_symbol = 'SPY' and quote_date in ('2015-01-02','2015-01-05')"))
1447697296907:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password")
1447697297043:dt.spy <- data.table(dbGetQuery(con, "select * from import_livevol.spy where underlying_symbol = 'SPY' and quote_date in ('2015-01-02','2015-01-05')"))
1447697351058:input
1447737091984:temp <- tail(temp,7)
1447737099124:for (i in temp) {
1447737099125:print(i)
1447737099125:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1447737099125:#dbWriteTable(con, value = t, name = "spy", append = TRUE, row.names=F )
1447737099126:}
1447737101044:t
1447737112220:temp
1447737114636:temp = list.files(path = '/home/ubuntu/optionsdata/python_import/outdir/', pattern="*.csv")
1447737115514:temp <- tail(temp,7)
1447737116430:for (i in temp) {
1447737116593:print(i)
1447737116775:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1447737116950:#dbWriteTable(con, value = t, name = "spy", append = TRUE, row.names=F )
1447737118402:}
1447737120395:t
1447738000676:twsConnect()
1447738466077:temp
1447738504484:dates_current <- data.table(dbGetQuery("select distinct quote_date from import_livevol.spy"))
1447738510845:dates_current <- data.table(dbGetQuery(con, "select distinct quote_date from import_livevol.spy"))
1447738514147:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "import_livevol")
1447738516574:dates_current <- data.table(dbGetQuery(con, "select distinct quote_date from import_livevol.spy"))
1447738539030:dates_current
1447738539267:temp = list.files(path = '/home/ubuntu/optionsdata/python_import/outdir/', pattern="*.csv")
1447738544000:temp
1447738548137:dates_current
1447738588661:dates_current[,quotes:=paste0(substring(quote_date,1,4), substring(quote_date,6,7), substring(quote_date, 9,10)]
1447738593548:dates_current[,quotes:=paste0(substring(quote_date,1,4), substring(quote_date,6,7), substring(quote_date, 9,10))]
1447738596160:dates_current
1447738599496:temp
1447738646277:substring(temp, 5,6)
1447738650005:temp
1447738675226:substring(temp, 22,28)
1447738683233:substring(temp, 23,30)
1447738701132:dates_current[,quotes:=as.character(paste0(substring(quote_date,1,4), substring(quote_date,6,7), substring(quote_date, 9,10)))]
1447738706653:substring(temp, 23,30)
1447738717046:setdiff(substring(temp, 23,30), dates_current$quotes)
1447738785234:temp
1447738793732:setdiff(substring(temp, 23,30), dates_current$quotes)
1447738802632:grep(pattern = setdiff(substring(temp, 23,30), dates_current$quotes), temp)
1447738809724:grepl(pattern = setdiff(substring(temp, 23,30), dates_current$quotes), temp)
1447738846966:setdiff(substring(temp, 23,30), dates_current$quotes)
1447738850460:temp
1447738884002:list_of_files <- paste0('SPY-options-eod-calcs-', setdiff(substring(temp, 23,30), dates_current$quotes), '.csv')
1447738886300:list_of_files
1447738896793:i <- "SPY-options-eod-calcs-20150608.csv"
1447738898712:print(i)
1447738899051:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1447738900140:t
1447738935323:setdiff(substring(temp, 23,30), dates_current$quotes)
1447738945904:list_of_files
1447738957075:i <- "SPY-options-eod-calcs-20151030.csv"
1447738960430:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1447738961455:t
1447738990475:dates_current
1447738996301:dates_current[,.N, by=year(quote_date)]
1447739112667:list_of_files
1447772623361:tables()
1447772641996:gc()
1447772645590:tables()
1447772751795:lsos()
1447772766781:# improved list of objects
1447772766781:.ls.objects <- function (pos = 1, pattern, order.by,
1447772766781:decreasing=FALSE, head=FALSE, n=5) {
1447772766782:napply <- function(names, fn) sapply(names, function(x)
1447772766782:fn(get(x, pos = pos)))
1447772766782:names <- ls(pos = pos, pattern = pattern)
1447772766782:obj.class <- napply(names, function(x) as.character(class(x))[1])
1447772766783:obj.mode <- napply(names, mode)
1447772766783:obj.type <- ifelse(is.na(obj.class), obj.mode, obj.class)
1447772766783:obj.size <- napply(names, object.size)
1447772766784:obj.dim <- t(napply(names, function(x)
1447772766784:as.numeric(dim(x))[1:2]))
1447772766785:vec <- is.na(obj.dim)[, 1] & (obj.type != "function")
1447772766785:obj.dim[vec, 1] <- napply(names, length)[vec]
1447772766785:out <- data.frame(obj.type, obj.size, obj.dim)
1447772766786:names(out) <- c("Type", "Size", "Rows", "Columns")
1447772766786:if (!missing(order.by))
1447772766786:out <- out[order(out[[order.by]], decreasing=decreasing), ]
1447772766787:if (head)
1447772766787:out <- head(out, n)
1447772766788:out
1447772766788:}
1447772766789:# shorthand
1447772766789:lsos <- function(..., n=10) {
1447772766789:.ls.objects(..., order.by="Size", decreasing=TRUE, head=TRUE, n=n)
1447772766790:}
1447772769068:lsos()
1447772816336:install.packages('zoo')
1447785075534:getBestOption <- function(data,
1447785075535:chr.trade_date,
1447785075535:chr.expiration,
1447785075535:chr.option_type,
1447785075535:int.min_delta = NULL,
1447785075536:int.strike = NULL,
1447785075536:chr.money_in_out = NULL,
1447785075536:int.min_dollar = NULL ) {
1447785075537:if(nrow(data[chr.trade_date==trade_date]) == 0) {warning("No results"); return(NA)}
1447785075537:if(nrow(data[chr.expiration==expiration ]) == 0) {warning("No results"); return(NA)}
1447785075538:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447785075539:if ( !is.null(int.strike) ) {
1447785075539:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447785075539:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1447785075540:}
1447785075541:if ( !is.null(int.min_delta)) {
1447785075541:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))]
1447785075542:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1447785075543:}
1447785075543:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447785075544:if (int.money_in_out > 0 ) {
1447785075545:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447785075545:} else {
1447785075546:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447785075546:}
1447785075547:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) } else { return(dt.result[1,]) }
1447785075550:}
1447785081375:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-22',chr.option_type =  'p', int.min_delta = .3)
1447785563507:getParams()
1447789644473:dates_current <- data.table(dbGetQuery(con, "select distinct quote_date from import_livevol.spy"))
1447789661485:library(RMySQL)
1447789661814:library(data.table)
1447789662413:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1447789662809:dates_current <- data.table(dbGetQuery(con, "select distinct quote_date from import_livevol.spy"))
1447789684974:dates_current[,quotes:=as.character(paste0(substring(quote_date,1,4), substring(quote_date,6,7), substring(quote_date, 9,10)))]
1447789695908:setdiff(substring(temp, 23,30), dates_current$quotes)
1447789742965:temp = list.files(path = '/home/ubuntu/optionsdata/python_import/outdir/', pattern="*.csv")
1447789743282:setdiff(substring(temp, 23,30), dates_current$quotes)
1447789747753:list_of_files <- paste0('SPY-options-eod-calcs-', setdiff(substring(temp, 23,30), dates_current$quotes), '.csv')
1447789749890:list_of_files
1447789762768:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_livevol' )
1447794933989:list_of_files <- paste0('SPY-options-eod-calcs-', setdiff(substring(temp, 23,30), dates_current$quotes), '.csv')
1447794934381:for (i in list_of_files) {
1447794934547:print(i)
1447794937446:list_of_files
1447794940824:list_of_files
1447794945746:i <- "SPY-options-eod-calcs-20150608.csv"
1447794947524:print(i)
1447794948010:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1447794948969:t
1447800947037:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_livevol' )
1447800947038:dates_current <- data.table(dbGetQuery(con, "select distinct quote_date from import_livevol.spy"))
1447800947041:dates_current[,quotes:=as.character(paste0(substring(quote_date,1,4), substring(quote_date,6,7), substring(quote_date, 9,10)))]
1447800947044:temp = list.files(path = '/home/ubuntu/optionsdata/python_import/outdir/', pattern="*.csv")
1447800947101:setdiff(substring(temp, 23,30), dates_current$quotes)
1447800947102:list_of_files <- paste0('SPY-options-eod-calcs-', setdiff(substring(temp, 23,30), dates_current$quotes), '.csv')
1447800947103:dt.insert <- data.table()
1447800947104:for (i in list_of_files) {
1447800947104:print(i)
1447800947104:t <- data.table(read.csv(paste0('/home/ubuntu/optionsdata/python_import/outdir/', i)))
1447800947104:dt.insert <- rbind(dt.insert,t)
1447800947104:}
1447800951548:dt.insert
1447802385536:chr.script <- 'livevolImport.R'
1447802440053:chr.location <- dbGetQuery(con, "Select * from zn.automated_process where name = ",chr.script )
1447802448439:chr.location <- dbGetQuery(con, paste0("Select * from zn.automated_process where name = ",chr.script ))
1447802451267:chr.location
1447802463692:chr.location <- dbGetQuery(con, paste0("Select * from zn.automated_process where name = '",chr.script,"'" ))
1447802466190:chr.location
1447802567906:paste0(chr.location$location, name)
1447802578010:source(paste0(chr.location$location, chr.script))
1447802613634:source(paste0(chr.location$location, chr.script))
1447802628593:system(command = paste("logger -p local0.info would insert now"))
1447802635408:source(paste0(chr.location$location, chr.script))
1447802673770:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447802674942:x
1447802689392:run()
1447802725062:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447802726176:x
1447803291419:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447803292827:x
1447803351295:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447803352454:x
1447803389560:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447803391009:x
1447803434986:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447803435726:x
1447803463066:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447803463839:x
1447803639607:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447803640892:x
1447803674748:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447803676146:x
1447804256157:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447804259441:x
1447813384209:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-22',chr.option_type =  'p', int.min_delta = .3)
1447813396746:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and expiration="2015-01-17"  '))
1447813418022:under2 <- organizeData(under)
1447815663118:library(sendmailR)
1447815729077:library(sendmailR)
1447815729332:sendmail_options(smtpServer="ASPMX.L.GOOGLE.COM")
1447815729537:# gmail requires the angle bracket syntax for from/to (i.e. <myemail@myaddress.com>)
1447815729720:from <- "<carlton@dc-energy.com>"
1447815729888:to <- "<robert.j.carlton@gmail.com>"
1447815730643:subject <- "Welcome!"
1447815730956:msg <- "To The Rock"
1447815731565:sendmail(from, to, subject, msg)
1447815809872:library(mailR)
1447815816490:install.packages(mailR)
1447815823457:install.packages('mailR')
1447816835460:sendmail('<hey@yahoo.com>', '<robert.j.carlton@gmail.com>', 'hey', 'body',
1447816835605:control = list(smtpServer='ASPMX.L.GOOGLE.COM'))
1447817133278:library(sendmailR)
1447817133279:sendmail_options(smtpServer="ASPMX.L.GOOGLE.COM")
1447817133279:from <- "<hello@me.com>"
1447817133280:to <- "<robert.j.carlton@gmail.com>"
1447817133280:subject <- "Welcome!"
1447817133280:msg <- "To The Rock"
1447817133281:sendmail(from, to, subject, msg)
1447817807191:Server<-list(smtpServer="ASPMX.L.GOOGLE.COM")
1447817807191:Sender <- sprintf("carlton@gmail.com","robert j")
1447817807192:Subj <- "subject of email"
1447817807192:Email <- "contents/body of email"
1447817807192:Recipient<-sprintf("robert.j.carlton@gmail.com")
1447817807193:sendmail(from=Sender,to=Recipient,subject=Subj,msg=Email,control=Server)
1447817828512:Server<-list(smtpServer="ASPMX.L.GOOGLE.COM")
1447817828512:Sender <- sprintf("<carlton@gmail.com>","robert j")
1447817828513:Subj <- "subject of email"
1447817828513:Email <- "contents/body of email"
1447817828513:Recipient<-sprintf("<robert.j.carlton@gmail.com>")
1447817828514:sendmail(from=Sender,to=Recipient,subject=Subj,msg=Email,control=Server)
1447817940169:subject <- paste("Report",format(Sys.time(),"%Y-%m-%d"),sep=" ")
1447817944679:ibrary(sendmailR)
1447817946794:library(sendmailR)
1447817947854:from <- sprintf("", Sys.info()[4])
1447817949231:from
1447817953669:Sys.info()
1447817958123:Sys.info()[2]
1447817962195:Sys.info()[4]
1447817967745:from <- sprintf("", Sys.info()[4])
1447817971295:sprintf("", Sys.info()[4])
1447817990410:?sprintf
1447818014075:from <- sprintf("", Sys.info()[4])
1447818015811:from
1447818685394:devtools::install_github("hrbrmstr/slackr")
1447818692127:install.packages('devtools')
1447818879457:# install bleeding edge slackr package
1447818879458:devtools::install_github("hrbrmstr/slackr")
1447818879462:library('slackr')
1447818879463:token <- 'xoxb-11832048039-M614XJsC8Ci4MWYkiJmYjFY1'
1447818879463:slackrSetup(channel="#general", api_token=token)
1447818886146:install.packages('devtools')
1447818980834:devtools::install_github("hrbrmstr/slackr")
1447819459384:library(slackr)
1447819459598:token <- 'xoxb-11832048039-M614XJsC8Ci4MWYkiJmYjFY1'
1447819460062:slackrSetup(channel="#datasources", api_token=token)
1447819470194:text_slackr('Test')
1447819504431:slackrSetup(channel="#datasources", api_token=token)
1447819504631:slackr('Test')
1447819554130:token <- 'xoxp-12270190368-12266411171-12268828419-52acf7691b'
1447819554509:slackrSetup(channel="#datasources", api_token=token)
1447819554895:slackr('Test')
1447819575106:slackr(paste0('Test', '@carlton'))
1447819584695:paste0('Test', '@carlton')
1447819612824:text_slackr(paste0('Test', '@carlton'), channel = '#testing')
1447819620602:text_slackr(paste0('Test', '@carlton'), channel = '#testing', preformatted = F)
1447819670934:library(slackr)
1447819671457:token <- 'xoxp-12270190368-12266411171-12268828419-52acf7691b'
1447819671777:#slackrSetup(channel="#datasources", api_token=token)
1447819672449:text_slackr(paste0('Test', '@carlton'), channel = '#testing', preformatted = F)
1447819675608:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1447819676173:chr.market.status <- content(resp)$response$status$current
1447819681564:chr.market.status
1447819691463:Sys.time()
1447819713893:chr.current_time <- format(Sys.time(), tz="America/New_York",usetz=TRUE)
1447819716320:chr.current_time
1447819731106:hour(chr.current_time)
1447819733866:date(chr.current_time)
1447819744388:as.Date(chr.current_time)
1447819854266:chr.market.status
1447819960140:library(data.table)
1447819969109:library(RMySQL)
1447820042963:dt.tradeking <- data.table(dbGetQuery(con, paste0("Select * from import_tradeking.spy where underlying_symbol = 'SPY' and quote_date = '", as.Date(chr.current_time), "'")))
1447820046668:con <- dbConnect(MySQL(), user="carlton", password= '1234password' )
1447820046888:dt.tradeking <- data.table(dbGetQuery(con, paste0("Select * from import_tradeking.spy where underlying_symbol = 'SPY' and quote_date = '", as.Date(chr.current_time), "'")))
1447820049349:dt.tradeking
1447820086867:dt.tradeking
1447820113488:dt.tradeking <- data.table(dbGetQuery(con, paste0("Select * from import_tradeking.spy where underlying_symbol = 'SPY' and quote_date = '", as.Date(chr.current_time) + days(1), "'")))
1447820118550:library(lubridate)
1447820124541:install.packages('lubridate')
1447820133162:library(lubridate)
1447820135030:dt.tradeking <- data.table(dbGetQuery(con, paste0("Select * from import_tradeking.spy where underlying_symbol = 'SPY' and quote_date = '", as.Date(chr.current_time) + days(1), "'")))
1447820137392:dt.tradeking
1447820143607:nrow(dt.tradeking)
1447820243496:if( nrow(dt.tradeking) == ) { text_slackr(paste0( '@carlton', ' There seems to be an issue with import_tradeking.spy. No results have been imported as of ',chr.current_time ), channel = '#testing', preformatted = F)}
1447820270181:paste0( '@carlton', ' There seems to be an issue with import_tradeking.spy. No results have been imported as of ',chr.current_time )
1447820282923:if( nrow(dt.tradeking) == 0) { text_slackr(paste0( '@carlton', ' There seems to be an issue with import_tradeking.spy. No results have been imported as of ',chr.current_time ), channel = '#testing', preformatted = F)}
1447820320414:dt.tradeking <- data.table(dbGetQuery(con, paste0("Select * from import_yahoo.spy where underlying_symbol = 'SPY' and quote_date = '", as.Date(chr.current_time) + days(1), "'")))
1447820322900:dt.tradeking
1447820330098:dt.tradeking <- data.table(dbGetQuery(con, paste0("Select * from import_yahoo.spy where quote_date = '", as.Date(chr.current_time) + days(1), "'")))
1447820335334:dt.yahoo <- data.table(dbGetQuery(con, paste0("Select * from import_yahoo.spy where quote_date = '", as.Date(chr.current_time) + days(1), "'")))
1447820338156:dt.yahoo
1447820341860:if( nrow(dt.yahoo) == 0) { text_slackr(paste0( '@carlton', ' There seems to be an issue with import_yahoo.spy. No results have been imported as of ',chr.current_time ), channel = '#testing', preformatted = F)}
1447820383526:if( nrow(dt.tradeking) == 0) { text_slackr(paste0( '@carlton', ' There seems to be an issue with import_tradeking.spy. No results have been imported as of ',chr.current_time ), channel = '#datasources', preformatted = F)}
1447820676422:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447820677710:x
1447821151950:token <- 'xoxp-12270190368-12266411171-12268828419-52acf7691b'
1447821151951:#slackrSetup(channel="#datasources", api_token=token)
1447821151951:text_slackr(paste0('Test', '@carlton'), channel = '#testing', preformatted = F)
1447821152480:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1447821152914:chr.market.status <- content(resp)$response$status$current
1447821152922:chr.current_time <- format(Sys.time(), tz="America/New_York",usetz=TRUE)
1447821152923:#if ( chr.market.status == 'open' & hour(chr.current_time) > 11 ) {
1447821152923:con <- dbConnect(MySQL(), user="carlton", password= '1234password' )
1447821152924:dt.tradeking <- data.table(dbGetQuery(con, paste0("Select * from import_tradeking.spy where underlying_symbol = 'SPY' and quote_date = '", as.Date(chr.current_time) + days(1), "'")))
1447821152933:if( nrow(dt.tradeking) == 0) { text_slackr(paste0( '@carlton', ' There seems to be an issue with import_tradeking.spy. No results have been imported as of ',chr.current_time ), channel = '#datasources', preformatted = F)}
1447821153241:dt.yahoo <- data.table(dbGetQuery(con, paste0("Select * from import_yahoo.spy where quote_date = '", as.Date(chr.current_time) + days(1), "'")))
1447821153250:if( nrow(dt.yahoo) == 0) { text_slackr(paste0( '@carlton', ' There seems to be an issue with import_yahoo.spy. No results have been imported as of ',chr.current_time ), channel = '#datasources', preformatted = F)}
1447821153521:#}
1447821215699:run <- function()
1447821215699:{
1447821215700:token <- 'xoxp-12270190368-12266411171-12268828419-52acf7691b'
1447821215700:#slackrSetup(channel="#datasources", api_token=token)
1447821215700:#text_slackr(paste0('Test', '@carlton'), channel = '#testing', preformatted = F)
1447821215701:resp <- GET("https://api.tradeking.com/v1/market/clock.json")
1447821215701:chr.market.status <- content(resp)$response$status$current
1447821215701:chr.current_time <- format(Sys.time(), tz="America/New_York",usetz=TRUE)
1447821215702:#if ( chr.market.status == 'open' & hour(chr.current_time) > 11 ) {
1447821215703:con <- dbConnect(MySQL(), user="carlton", password= '1234password' )
1447821215703:dt.tradeking <- data.table(dbGetQuery(con, paste0("Select * from import_tradeking.spy where underlying_symbol = 'SPY' and quote_date = '", as.Date(chr.current_time) + days(1), "'")))
1447821215703:if( nrow(dt.tradeking) == 0) { text_slackr(paste0( '@carlton', ' There seems to be an issue with import_tradeking.spy. No results have been imported as of ',chr.current_time ), channel = '#datasources', preformatted = F)}
1447821215704:dt.yahoo <- data.table(dbGetQuery(con, paste0("Select * from import_yahoo.spy where quote_date = '", as.Date(chr.current_time) + days(1), "'")))
1447821215704:if( nrow(dt.yahoo) == 0) { text_slackr(paste0( '@carlton', ' There seems to be an issue with import_yahoo.spy. No results have been imported as of ',chr.current_time ), channel = '#datasources', preformatted = F)}
1447821215705:#}
1447821215706:}
1447821218063:run()
1447821222700:warnings()
1447824070931:slackr('hey')
1447824074228:library(httr)
1447824074369:library(slackr)
1447824074532:library(data.table)
1447824074681:library(RMySQL)
1447824075288:library(lubridate)
1447824077302:slackr('hey')
1447824080185:token <- 'xoxp-12270190368-12266411171-12268828419-52acf7691b'
1447824087735:#slackrSetup(channel="#datasources", api_token=token)
1447824087910:#text_slackr(paste0('Test', '@carlton'), channel = '#testing', preformatted = F)
1447824088328:slackr('hey')
1447824094272:slackrSetup(channel="#datasources", api_token=token)
1447824104087:text_slackr(paste0( '@carlton', ' There seems to be an issue with import_tradeking.spy. No results have been imported as of ',chr.current_time ), channel = '#datasources', preformatted = F)
1447824109985:chr.current_time <- format(Sys.time(), tz="America/New_York",usetz=TRUE)
1447824111650:text_slackr(paste0( '@carlton', ' There seems to be an issue with import_tradeking.spy. No results have been imported as of ',chr.current_time ), channel = '#datasources', preformatted = F)
1447824306831:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447824307854:x
1447824508114:system(command = paste("logger -p local0.info \"", 'hey meg', "\""))
1447824510418:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447824511448:x
1447824712670:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447824713958:x
1447852228804:system(command='crontab -e')
1447853472110:getBestOption <- function(data,
1447853549217:getBestOption <- function(data,
1447853925802:getBestOption <- function(data,
1447853925803:chr.trade_date,
1447853925803:chr.expiration,
1447853925803:chr.option_type,
1447853925803:int.min_delta = NULL,
1447853925804:int.strike = NULL,
1447853925804:chr.money_in_out = NULL,
1447853925804:int.min_dollar = NULL ) {
1447853925804:if(nrow(data[chr.trade_date==trade_date]) == 0) {warning("No results"); return(NA)}
1447853925805:if(nrow(data[chr.expiration==expiration ]) == 0) {warning("No results"); return(NA)}
1447853925806:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447853925806:if ( !is.null(int.strike) ) {
1447853925806:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447853925806:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1447853925807:}
1447853925807:if ( !is.null(int.min_delta)) {
1447853925808:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))]
1447853925808:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1447853925808:}
1447853925809:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447853925809:if (int.money_in_out > 0 ) {
1447853925809:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447853925809:} else {
1447853925810:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447853925810:}
1447853925810:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) } else { return(dt.result[1,]) }
1447853925811:}
1447854033812:optVertical <- function(data, chr.trade_date, chr.expiration, chr.option_type, chr.long_short, vec.deltas=NULL, vec.strikes=NULL, int.qty = 1 ) {
1447854033814:if (!is.null(vec.deltas)) {
1447854033814:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.deltas) )
1447854033814:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.deltas) )
1447854033814:}
1447854033815:if (!is.null(vec.strikes)) {
1447854033815:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', max(vec.strikes), min(vec.strikes)) )
1447854033815:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447854033816:}
1447854033816:dt.price_high[,qty:=ifelse(chr.long_short == 'long', int.qty*1, int.qty*-1)]
1447854033816:dt.price_low[,qty:=ifelse(chr.long_short == 'long', int.qty*-1, int.qty*1)]
1447854033816:dt.all <- rbind(dt.price_high, dt.price_low)
1447854033817:return(dt.all)
1447854033817:}
1447854095795:getBestOption <- function(data,
1447854095796:chr.trade_date,
1447854095796:chr.expiration,
1447854095796:chr.option_type,
1447854095796:int.min_delta = NULL,
1447854095796:int.strike = NULL,
1447854095797:chr.money_in_out = NULL,
1447854095797:int.min_dollar = NULL ) {
1447854095797:if(nrow(data[chr.trade_date==trade_date]) == 0) {warning("No results"); return(NA)}
1447854095797:if(nrow(data[chr.expiration==expiration ]) == 0) {warning("No results"); return(NA)}
1447854095798:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447854095798:if ( !is.null(int.strike) ) {
1447854095798:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447854095798:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1447854095799:}
1447854095799:if ( !is.null(int.min_delta)) {
1447854095799:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))]
1447854095800:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1447854095800:}
1447854095801:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447854095801:if (int.money_in_out > 0 ) {
1447854095801:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447854095802:} else {
1447854095802:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447854095802:}
1447854095803:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) } else { return(dt.result[1,]) }
1447854095803:}
1447854330286:con <- dbConnect(MySQL(), user="carlton", password= '1234password' )
1447854330292:organizeData <- function(dt) {
1447854330293:dt <-  dt[,list(symbol=underlying_symbol,
1447854330293:trade_date=as.character(quote_date),
1447854330293:root,
1447854330293:expiration=as.character(expiration),
1447854330293:strike,
1447854330293:call_put=option_type,
1447854330294:bid=bid_1545,
1447854330299:ask=ask_1545,
1447854330299:underlying = underlying_ask_eod,
1447854330299:distance_from_underlying = ifelse(option_type=='c', underlying_ask_eod - strike, strike- underlying_ask_eod),
1447854330299:iv = implied_volatility_1545,
1447854330300:vol = trade_volume,
1447854330300:delta = delta_1545,
1447854330300:gamma = gamma_1545,
1447854330300:theta = theta_1545,
1447854330301:vega = vega_1545,
1447854330301:rho = rho_1545,
1447854330301:vwap,
1447854330301:trade_volume,
1447854330302:strip=paste0(substring(expiration,1,8),'01'))]
1447854330302:return(dt)
1447854330302:}
1447854330307:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and expiration="2015-01-17"  '))
1447854358629:under2 <- organizeData(under)
1447854361250:under2 <- organizeData(under)
1447854362727:under2
1447854944958:x <- system(command=' tail /var/log/syslog --lines 100', intern=T)
1447854946034:x
1447854985599:system(command='crontab -e')
1447888574805:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and expiration="2015-01-17"  '))
1447888978653:optVertical <- function(data,
1447888978653:chr.trade_date,
1447888978654:chr.expiration,
1447888978654:chr.option_type,
1447888978654:chr.long_short,
1447888978654:vec.deltas=NULL,
1447888978654:vec.strikes=NULL,
1447888978655:int.qty = 1 ) {
1447888978655:if (!is.null(vec.deltas)) {
1447888978655:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.deltas) )
1447888978656:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.deltas) )
1447888978656:}
1447888978656:if (!is.null(vec.strikes)) {
1447888978656:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', max(vec.strikes), min(vec.strikes)) )
1447888978657:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447888978657:}
1447888978658:dt.price_high[,qty:=ifelse(chr.long_short == 'long', int.qty*1, int.qty*-1)]
1447888978658:dt.price_low[,qty:=ifelse(chr.long_short == 'long', int.qty*-1, int.qty*1)]
1447888978658:dt.all <- rbind(dt.price_high, dt.price_low)
1447888978659:return(dt.all)
1447888978659:}
1447896009246:under2 <- organizeData(under)
1447896021518:organizeData <- function(dt) {
1447896021518:dt <-  dt[,list(symbol=underlying_symbol,
1447896021519:trade_date=as.character(quote_date),
1447896021519:root,
1447896021519:expiration=as.character(expiration),
1447896021519:strike,
1447896021519:call_put=option_type,
1447896021520:bid=bid_1545,
1447896021520:ask=ask_1545,
1447896021520:underlying = underlying_ask_eod,
1447896021520:distance_from_underlying = ifelse(option_type=='c', underlying_ask_eod - strike, strike- underlying_ask_eod),
1447896021521:iv = implied_volatility_1545,
1447896021521:vol = trade_volume,
1447896021521:delta = delta_1545,
1447896021521:gamma = gamma_1545,
1447896021522:theta = theta_1545,
1447896021522:vega = vega_1545,
1447896021522:rho = rho_1545,
1447896021522:vwap,
1447896021523:trade_volume,
1447896021523:strip=paste0(substring(expiration,1,8),'01'))]
1447896021523:return(dt)
1447896021524:}
1447896042949:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and expiration="2015-01-17"  '))
1447896043277:under2 <- organizeData(under)
1447896070026:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1447896074657:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and expiration="2015-01-17"  '))
1447896096496:under2 <- organizeData(under)
1447896462782:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-22',chr.option_type =  'p', int.min_delta = .3)
1447896468702:getBestOption <- function(data,
1447896468702:chr.trade_date,
1447896468702:chr.expiration,
1447896468702:chr.option_type,
1447896468703:int.min_delta = NULL,
1447896468703:int.strike = NULL,
1447896468703:chr.money_in_out = NULL,
1447896468703:int.min_dollar = NULL ) {
1447896468704:if(nrow(data[chr.trade_date==trade_date]) == 0) {warning("No results"); return(NA)}
1447896468704:if(nrow(data[chr.expiration==expiration ]) == 0) {warning("No results"); return(NA)}
1447896468704:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1447896468705:if ( !is.null(int.strike) ) {
1447896468705:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1447896468706:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1447896468706:}
1447896468707:if ( !is.null(int.min_delta)) {
1447896468707:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))]
1447896468707:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1447896468708:}
1447896468708:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1447896468709:if (int.money_in_out > 0 ) {
1447896468709:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1447896468710:} else {
1447896468710:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1447896468710:}
1447896468711:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) } else { return(dt.result[1,]) }
1447896468712:}
1447896473935:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2014-02-22',chr.option_type =  'p', int.min_delta = .3)
1447896480262:under2
1447896490115:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2015-01-17',chr.option_type =  'p', int.min_delta = .3)
1447896552605:optVertical <- function(data, chr.trade_date, chr.expiration, chr.option_type, chr.long_short, vec.deltas=NULL, vec.strikes=NULL, int.qty = 1 ) {
1447896552606:if (!is.null(vec.deltas)) {
1447896552606:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = max(vec.deltas) )
1447896552606:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.min_delta = min(vec.deltas) )
1447896552606:}
1447896552607:if (!is.null(vec.strikes)) {
1447896552607:dt.price_high <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', max(vec.strikes), min(vec.strikes)) )
1447896552607:dt.price_low <- getBestOption(data=under2,chr.trade_date,chr.expiration,chr.option_type, int.strike = ifelse(chr.option_type == 'p', min(vec.strikes), max(vec.strikes)) )
1447896552608:}
1447896552608:dt.price_high[,qty:=ifelse(chr.long_short == 'long', int.qty*1, int.qty*-1)]
1447896552608:dt.price_low[,qty:=ifelse(chr.long_short == 'long', int.qty*-1, int.qty*1)]
1447896552609:dt.all <- rbind(dt.price_high, dt.price_low)
1447896552609:return(dt.all)
1447896552610:}
1447896563428:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2015-01-17', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=1)[,sum(delta*qty)]
1447896570709:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2015-01-17', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=1)
1447896800499:under <- data.table(dbGetQuery(conn = con,statement = 'select * from import_livevol.spy where vwap > 0 and year(expiration) =2014  '))
1447896822951:under2 <- organizeData(under)
1447896828437:under2
1447896922758:expirations <- data.table(dbGetQuery(conn = con,statement = 'select expiration, sum(trade_volume) from import_livevol.spy group by expiration  '))
1447896955023:expirations
1447896979943:expirations <- data.table(dbGetQuery(conn = con,statement = 'select expiration, month(expiration) month, year(expiration) year, sum(trade_volume) trade_volume from import_livevol.spy group by expiration  '))
1447897004671:expirations
1447897012142:expirations[month==1 & year==2015]
1447897029832:expirations[,list(trade_volume=max(trade_volume))]
1447897036105:expirations[,list(trade_volume=max(trade_volume)), by=list(month,year)]
1447897057233:merge(expirations,expirations[,list(trade_volume=max(trade_volume)), by=list(month,year)], by=c('month','year','trade_volume'))
1447897080779:expirations <-  merge(expirations,expirations[,list(trade_volume=max(trade_volume)), by=list(month,year)], by=c('month','year','trade_volume'))
1447897083154:expirations
1447897100749:under <- data.table()
1447897102827:gc()
1447897125340:expirations
1447897136415:paste0(expirations$expiration, collapse=',')
1447897167614:paste0(expirations$expiration, collapse='","')
1447897177904:paste0(expirations$expiration, collapse='",')
1447897185059:paste0(expirations$expiration, collapse='","')
1447897262461:cat(paste(shQuote(expirations$expiration, type="cmd"), collapse=", "))
1447897311715:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy where vwap > 0 and expiration in (",
1447897312037:cat(paste(shQuote(expirations$expiration, type="cmd"), collapse=", ")), ") "  )))
1447897323442:paste0("select * from import_livevol.spy where vwap > 0 and expiration in (",
1447897323443:cat(paste(shQuote(expirations$expiration, type="cmd"), collapse=", ")), ") "  )
1447897362470:paste0("select * from import_livevol.spy where vwap > 0 and expiration in (",
1447897362470:cat(paste(shQuote(expirations$expiration, type="cmd"), collapse=", ")), ") "  )
1447897393918:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep="")
1447897429599:paste0("select * from import_livevol.spy where vwap > 0 and expiration in (",
1447897429600:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep=""), ") "  )
1447897436617:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy where vwap > 0 and expiration in (",
1447897436931:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep=""), ") "  )))
1447897494306:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy where vwap > 0 and year(expiration) = 2014 and expiration in (",
1447897494462:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep=""), ") "  )))
1447897505329:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1447897532119:expirations <- data.table(dbGetQuery(conn = con,statement = 'select expiration, month(expiration) month, year(expiration) year, sum(trade_volume) trade_volume from import_livevol.spy group by expiration  '))
1447897532264:expirations <-  merge(expirations,expirations[,list(trade_volume=max(trade_volume)), by=list(month,year)], by=c('month','year','trade_volume'))
1447897532501:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy where vwap > 0 and year(expiration) = 2014 and expiration in (",
1447897532918:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep=""), ") "  )))
1447898202417:d.tpy
1447898204490:dt.spy
1447898208512:dt.spy[,unique(expiration)]
1447898226022:tables()
1447898536794:dt.spy <- organizeData(dt.spy)
1447898546613:organizeData <- function(dt) {
1447898546614:dt <-  dt[,list(symbol=underlying_symbol,
1447898546614:trade_date=as.character(quote_date),
1447898546615:root,
1447898546615:expiration=as.character(expiration),
1447898546615:strike,
1447898546615:call_put=option_type,
1447898546616:bid=bid_1545,
1447898546616:ask=ask_1545,
1447898546616:underlying = underlying_ask_eod,
1447898546616:distance_from_underlying = ifelse(option_type=='c', underlying_ask_eod - strike, strike- underlying_ask_eod),
1447898546616:iv = implied_volatility_1545,
1447898546617:vol = trade_volume,
1447898546617:delta = delta_1545,
1447898546617:gamma = gamma_1545,
1447898546618:theta = theta_1545,
1447898546618:vega = vega_1545,
1447898546618:rho = rho_1545,
1447898546618:vwap,
1447898546619:trade_volume,
1447898546619:strip=paste0(substring(expiration,1,8),'01'))]
1447898546619:return(dt)
1447898546620:}
1447898549036:dt.spy <- organizeData(dt.spy)
1447898552132:dt.spy
1447898851298:optVertical(data = under2, chr.trade_date = '2014-01-02', chr.expiration = '2015-01-17', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.3),int.qty=1)
1447899514373:dt.spy
1447899542685:data <- dt.spy
1447899555349:unique(data$expiration)
1447899562372:chr.expiration_front <- '2014-01-18'
1447899576685:chr.expiration_back <- '2014-02-2'
1447899579340:chr.expiration_back <- '2014-02-22'
1447899680242:data[trade_date=='2014-01-03']
1447899702303:data[trade_date=='2014-01-03'][expiration %in% c('2014-01-18', '2014-02-22')]
1447899728824:data[trade_date=='2014-01-03'][expiration %in% c('2014-01-18', '2014-02-22')][strike == 185]
1447899753220:data[trade_date=='2014-01-03'][expiration %in% c('2014-01-18', '2014-02-22')][strike == 180]
1448037250774:library(XML)
1448037250940:library(RMySQL)
1448037250941:library(data.table)
1448037250942:theurl <- "http://www.nba.com/standings/team_record_comparison/conferenceNew_Std_Div.html"
1448037250942:tablesset <- readHTMLTable(theurl)
1448037251480:espn <- 'http://espn.go.com/nba/statistics/team/_/stat/team-comparison-per-game/sort/avgPoints'
1448037251480:tablesset.espn <- readHTMLTable(espn)
1448037251794:tablesset.espn <- data.table(tablesset.espn[[1]])
1448037251798:tablesset.espn <- tablesset.espn[is.na(V8)==F]
1448037251805:tablesset.espn <- tablesset.espn[(V2) != 'TEAM']
1448037251807:tablesset.espn <- tablesset.espn[,list(team=as.character(V2), diff=V5)]
1448037251809:tablesset.espn[,pos_neg:=substring(diff,1,1)]
1448037251810:tablesset.espn[,value:=as.numeric(ifelse(pos_neg=='0', str_sub(diff,1),str_sub(diff,2))) ]
1448037251814:tablesset.espn[,pos_neg:=ifelse(pos_neg=='+',1,-1)]
1448037251815:tablesset.espn[,value:=(value*pos_neg)]
1448037251816:tablesset.espn <- tablesset.espn[,list(team,value)]
1448037251817:tablesset.espn[,team:=ifelse(team=='LA Clippers','L.A. Clippers', ifelse(team== 'LA Lakers', 'L.A. Lakers', team))]
1448037251818:tablesset.espn[,estimated_wins:=82 * (1 / (1 + exp(-0.13959 * value))) ]
1448037251822:east <- data.table(tablesset[[1]])
1448037251824:east <- east[is.na(V2)==F]
1448037251825:east <- east[(V2)!='W']
1448037251826:east <- east[,list(V1=as.character(V1),V2,V3)]
1448037251828:east[,num:=as.numeric(substring(V1, nchar(V1)))]
1448037251829:east[,new_name:=ifelse(is.na(num), V1, substring(V1, 1, nchar(V1)-1))]
1448037251831:east[,V1:=new_name]
1448037251831:east <- east[,list(V1=as.character(V1),V2,V3)]
1448037251833:setnames(east, c('team','wins','losses'))
1448037251833:bids <- read.csv('~/Sites/user/3. Aust/sep 2015 bids/over_under_draft.csv')
1448037251836:bids <- data.table(merge(bids, east, by='team'))
1448037251836:bids <- bids[,list(team=as.character(team),
1448037251836:Team2=as.character(Team),
1448037251836:Vegas,
1448037251837:CBS,
1448037251837:ESPN=as.numeric(as.character(ESPN)),
1448037251837:Average=as.numeric(as.character(Average)),
1448037251837:Over=(as.character(Over)),
1448037251837:Under=(as.character(Under)),
1448037251837:actual_wins=as.numeric(as.character(wins)),
1448037251838:actual_losses=as.numeric(as.character(losses)),
1448037251838:timestamp=as.character(Sys.time()))]
1448037251838:bids[,estimated_wins:=ifelse(actual_wins+actual_losses ==0, 0, actual_wins*82/(actual_wins+actual_losses))]
1448037251839:bids[,estimated_under_over_winner:=ifelse(estimated_wins < Average, 'Under', 'Over')]
1448037251839:bids[,estimated_winner:=ifelse(estimated_wins < Average, Under, Over)]
1448037251839:bids[,estimated_loser:=ifelse(estimated_wins < Average, Over, Under)]
1448037251840:bids[,estimated_winnings:=ifelse(estimated_wins < Average, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037251840:bids[,estimated_losses:=ifelse(Average < estimated_wins, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037363853:bids <- read.csv('~/over_under_draft.csv')
1448037376242:bids <- read.csv('/home/ubuntu/over_under_draft.csv')
1448037381978:theurl <- "http://www.nba.com/standings/team_record_comparison/conferenceNew_Std_Div.html"
1448037381979:tablesset <- readHTMLTable(theurl)
1448037382488:espn <- 'http://espn.go.com/nba/statistics/team/_/stat/team-comparison-per-game/sort/avgPoints'
1448037382488:tablesset.espn <- readHTMLTable(espn)
1448037382794:tablesset.espn <- data.table(tablesset.espn[[1]])
1448037382797:tablesset.espn <- tablesset.espn[is.na(V8)==F]
1448037382798:tablesset.espn <- tablesset.espn[(V2) != 'TEAM']
1448037382799:tablesset.espn <- tablesset.espn[,list(team=as.character(V2), diff=V5)]
1448037382800:tablesset.espn[,pos_neg:=substring(diff,1,1)]
1448037382801:tablesset.espn[,value:=as.numeric(ifelse(pos_neg=='0', str_sub(diff,1),str_sub(diff,2))) ]
1448037382803:tablesset.espn[,pos_neg:=ifelse(pos_neg=='+',1,-1)]
1448037382804:tablesset.espn[,value:=(value*pos_neg)]
1448037382805:tablesset.espn <- tablesset.espn[,list(team,value)]
1448037382806:tablesset.espn[,team:=ifelse(team=='LA Clippers','L.A. Clippers', ifelse(team== 'LA Lakers', 'L.A. Lakers', team))]
1448037382807:tablesset.espn[,estimated_wins:=82 * (1 / (1 + exp(-0.13959 * value))) ]
1448037382809:east <- data.table(tablesset[[1]])
1448037382810:east <- east[is.na(V2)==F]
1448037382811:east <- east[(V2)!='W']
1448037382812:east <- east[,list(V1=as.character(V1),V2,V3)]
1448037382814:east[,num:=as.numeric(substring(V1, nchar(V1)))]
1448037382815:east[,new_name:=ifelse(is.na(num), V1, substring(V1, 1, nchar(V1)-1))]
1448037382816:east[,V1:=new_name]
1448037382817:east <- east[,list(V1=as.character(V1),V2,V3)]
1448037382818:setnames(east, c('team','wins','losses'))
1448037382819:bids <- read.csv('/home/ubuntu/over_under_draft.csv')
1448037382820:bids <- data.table(merge(bids, east, by='team'))
1448037382824:bids <- bids[,list(team=as.character(team),
1448037382825:Team2=as.character(Team),
1448037382825:Vegas,
1448037382825:CBS,
1448037382825:ESPN=as.numeric(as.character(ESPN)),
1448037382825:Average=as.numeric(as.character(Average)),
1448037382825:Over=(as.character(Over)),
1448037382826:Under=(as.character(Under)),
1448037382826:actual_wins=as.numeric(as.character(wins)),
1448037382826:actual_losses=as.numeric(as.character(losses)),
1448037382826:timestamp=as.character(Sys.time()))]
1448037382830:bids[,estimated_wins:=ifelse(actual_wins+actual_losses ==0, 0, actual_wins*82/(actual_wins+actual_losses))]
1448037382831:bids[,estimated_under_over_winner:=ifelse(estimated_wins < Average, 'Under', 'Over')]
1448037382832:bids[,estimated_winner:=ifelse(estimated_wins < Average, Under, Over)]
1448037382833:bids[,estimated_loser:=ifelse(estimated_wins < Average, Over, Under)]
1448037382835:bids[,estimated_winnings:=ifelse(estimated_wins < Average, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037382836:bids[,estimated_losses:=ifelse(Average < estimated_wins, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037391497:total <- merge(bids[,list(winnings=sum(estimated_winnings)), by=list(participant=estimated_winner)], bids[,list(losses=sum(estimated_losses)), by=list(participant=estimated_loser)], by='participant')
1448037391503:total[,total:=winnings+losses]
1448037391504:total <- total[order(-total)]
1448037393771:total
1448037402086:theurl <- "http://www.nba.com/standings/team_record_comparison/conferenceNew_Std_Div.html"
1448037402086:tablesset <- readHTMLTable(theurl)
1448037402174:espn <- 'http://espn.go.com/nba/statistics/team/_/stat/team-comparison-per-game/sort/avgPoints'
1448037402175:tablesset.espn <- readHTMLTable(espn)
1448037402438:tablesset.espn <- data.table(tablesset.espn[[1]])
1448037402446:tablesset.espn <- tablesset.espn[is.na(V8)==F]
1448037402447:tablesset.espn <- tablesset.espn[(V2) != 'TEAM']
1448037402448:tablesset.espn <- tablesset.espn[,list(team=as.character(V2), diff=V5)]
1448037402450:tablesset.espn[,pos_neg:=substring(diff,1,1)]
1448037402451:tablesset.espn[,value:=as.numeric(ifelse(pos_neg=='0', str_sub(diff,1),str_sub(diff,2))) ]
1448037402452:tablesset.espn[,pos_neg:=ifelse(pos_neg=='+',1,-1)]
1448037402453:tablesset.espn[,value:=(value*pos_neg)]
1448037402454:tablesset.espn <- tablesset.espn[,list(team,value)]
1448037402455:tablesset.espn[,team:=ifelse(team=='LA Clippers','L.A. Clippers', ifelse(team== 'LA Lakers', 'L.A. Lakers', team))]
1448037402456:tablesset.espn[,estimated_wins:=82 * (1 / (1 + exp(-0.13959 * value))) ]
1448037402457:east <- data.table(tablesset[[1]])
1448037402459:east <- east[is.na(V2)==F]
1448037402460:east <- east[(V2)!='W']
1448037402461:east <- east[,list(V1=as.character(V1),V2,V3)]
1448037402462:east[,num:=as.numeric(substring(V1, nchar(V1)))]
1448037402463:east[,new_name:=ifelse(is.na(num), V1, substring(V1, 1, nchar(V1)-1))]
1448037402465:east[,V1:=new_name]
1448037402465:east <- east[,list(V1=as.character(V1),V2,V3)]
1448037402467:setnames(east, c('team','wins','losses'))
1448037402467:bids <- read.csv('/home/ubuntu/over_under_draft.csv')
1448037402469:bids <- data.table(merge(bids, east, by='team'))
1448037402471:bids <- bids[,list(team=as.character(team),
1448037402471:Team2=as.character(Team),
1448037402472:Vegas,
1448037402472:CBS,
1448037402472:ESPN=as.numeric(as.character(ESPN)),
1448037402472:Average=as.numeric(as.character(Average)),
1448037402472:Over=(as.character(Over)),
1448037402473:Under=(as.character(Under)),
1448037402473:actual_wins=as.numeric(as.character(wins)),
1448037402473:actual_losses=as.numeric(as.character(losses)),
1448037402473:timestamp=as.character(Sys.time()))]
1448037402476:bids[,estimated_wins:=ifelse(actual_wins+actual_losses ==0, 0, actual_wins*82/(actual_wins+actual_losses))]
1448037402477:bids[,estimated_under_over_winner:=ifelse(estimated_wins < Average, 'Under', 'Over')]
1448037402478:bids[,estimated_winner:=ifelse(estimated_wins < Average, Under, Over)]
1448037402479:bids[,estimated_loser:=ifelse(estimated_wins < Average, Over, Under)]
1448037402480:bids[,estimated_winnings:=ifelse(estimated_wins < Average, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037402482:bids[,estimated_losses:=ifelse(Average < estimated_wins, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037402483:#sqlFromRObj(getLstConn()$conn_nav4, bids,  'furman_5374.nba')
1448037402484:total <- merge(bids[,list(winnings=sum(estimated_winnings)), by=list(participant=estimated_winner)], bids[,list(losses=sum(estimated_losses)), by=list(participant=estimated_loser)], by='participant')
1448037402487:total[,total:=winnings+losses]
1448037402488:total <- total[order(-total)]
1448037408318:total
1448037428680:library(XML)
1448037428680:library(RMySQL)
1448037428680:library(data.table)
1448037428681:theurl <- "http://www.nba.com/standings/team_record_comparison/conferenceNew_Std_Div.html"
1448037428682:tablesset <- readHTMLTable(theurl)
1448037428772:espn <- 'http://espn.go.com/nba/statistics/team/_/stat/team-comparison-per-game/sort/avgPoints'
1448037428773:tablesset.espn <- readHTMLTable(espn)
1448037428994:tablesset.espn <- data.table(tablesset.espn[[1]])
1448037428997:tablesset.espn <- tablesset.espn[is.na(V8)==F]
1448037428998:tablesset.espn <- tablesset.espn[(V2) != 'TEAM']
1448037429000:tablesset.espn <- tablesset.espn[,list(team=as.character(V2), diff=V5)]
1448037429001:tablesset.espn[,pos_neg:=substring(diff,1,1)]
1448037429002:tablesset.espn[,value:=as.numeric(ifelse(pos_neg=='0', str_sub(diff,1),str_sub(diff,2))) ]
1448037429003:tablesset.espn[,pos_neg:=ifelse(pos_neg=='+',1,-1)]
1448037429004:tablesset.espn[,value:=(value*pos_neg)]
1448037429005:tablesset.espn <- tablesset.espn[,list(team,value)]
1448037429006:tablesset.espn[,team:=ifelse(team=='LA Clippers','L.A. Clippers', ifelse(team== 'LA Lakers', 'L.A. Lakers', team))]
1448037429008:tablesset.espn[,estimated_wins:=82 * (1 / (1 + exp(-0.13959 * value))) ]
1448037429009:east <- data.table(tablesset[[1]])
1448037429011:east <- east[is.na(V2)==F]
1448037429012:east <- east[(V2)!='W']
1448037429013:east <- east[,list(V1=as.character(V1),V2,V3)]
1448037429014:east[,num:=as.numeric(substring(V1, nchar(V1)))]
1448037429016:east[,new_name:=ifelse(is.na(num), V1, substring(V1, 1, nchar(V1)-1))]
1448037429017:east[,V1:=new_name]
1448037429018:east <- east[,list(V1=as.character(V1),V2,V3)]
1448037429019:setnames(east, c('team','wins','losses'))
1448037429020:bids <- read.csv('/home/ubuntu/over_under_draft.csv')
1448037429023:bids <- data.table(merge(bids, east, by='team'))
1448037429027:bids <- bids[,list(team=as.character(team),
1448037429027:Team2=as.character(Team),
1448037429027:Vegas,
1448037429027:CBS,
1448037429028:ESPN=as.numeric(as.character(ESPN)),
1448037429028:Average=as.numeric(as.character(Average)),
1448037429028:Over=(as.character(Over)),
1448037429028:Under=(as.character(Under)),
1448037429028:actual_wins=as.numeric(as.character(wins)),
1448037429029:actual_losses=as.numeric(as.character(losses)),
1448037429029:timestamp=as.character(Sys.time()))]
1448037429032:bids[,estimated_wins:=ifelse(actual_wins+actual_losses ==0, 0, actual_wins*82/(actual_wins+actual_losses))]
1448037429033:bids[,estimated_under_over_winner:=ifelse(estimated_wins < Average, 'Under', 'Over')]
1448037429034:bids[,estimated_winner:=ifelse(estimated_wins < Average, Under, Over)]
1448037429035:bids[,estimated_loser:=ifelse(estimated_wins < Average, Over, Under)]
1448037429036:bids[,estimated_winnings:=ifelse(estimated_wins < Average, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037429037:bids[,estimated_losses:=ifelse(Average < estimated_wins, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037429039:#sqlFromRObj(getLstConn()$conn_nav4, bids,  'furman_5374.nba')
1448037429039:total <- merge(bids[,list(winnings=sum(estimated_winnings)), by=list(participant=estimated_winner)], bids[,list(losses=sum(estimated_losses)), by=list(participant=estimated_loser)], by='participant')
1448037429042:total[,total:=winnings+losses]
1448037429043:total <- total[order(-total)]
1448037429044:bids.espn <- read.csv('~/Sites/user/3. Aust/sep 2015 bids/over_under_draft.csv')
1448037429045:bids.espn <- data.table(merge(bids.espn, east, by='team'))
1448037429046:bids.espn <- bids.espn[,list(team=as.character(team),
1448037429046:Team2=as.character(Team),
1448037429046:Vegas,
1448037429046:CBS,
1448037429047:ESPN=as.numeric(as.character(ESPN)),
1448037429047:Average=as.numeric(as.character(Average)),
1448037429047:Over=(as.character(Over)),
1448037429047:Under=(as.character(Under)),
1448037429047:actual_wins=as.numeric(as.character(wins)),
1448037429047:actual_losses=as.numeric(as.character(losses)),
1448037429048:timestamp=as.character(Sys.time()))]
1448037429048:bids.espn <- merge(bids.espn, tablesset.espn, by='team')
1448037429048:bids.espn[,estimated_under_over_winner:=ifelse(estimated_wins < Average, 'Under', 'Over')]
1448037429049:bids.espn[,estimated_winner:=ifelse(estimated_wins < Average, Under, Over)]
1448037429049:bids.espn[,estimated_loser:=ifelse(estimated_wins < Average, Over, Under)]
1448037429049:bids.espn[,estimated_winnings:=ifelse(estimated_wins < Average, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037429050:bids.espn[,estimated_losses:=ifelse(Average < estimated_wins, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037429050:total.espn <- merge(bids.espn[,list(winnings=sum(estimated_winnings)), by=list(participant=estimated_winner)], bids.espn[,list(losses=sum(estimated_losses)), by=list(participant=estimated_loser)], by='participant')
1448037429051:total.espn[,total:=winnings+losses]
1448037429051:total.espn <- total.espn[order(-total)]
1448037429051:total_all <- merge(total, total.espn, by='participant')[,list(participant,
1448037429051:winnings_using_percent=round(total.x),
1448037429052:dumb_todd_way=round(total.y))][order(-winnings_using_percent)]
1448037448354:library(XML)
1448037448354:library(RMySQL)
1448037448355:library(data.table)
1448037448356:theurl <- "http://www.nba.com/standings/team_record_comparison/conferenceNew_Std_Div.html"
1448037448356:tablesset <- readHTMLTable(theurl)
1448037448787:espn <- 'http://espn.go.com/nba/statistics/team/_/stat/team-comparison-per-game/sort/avgPoints'
1448037448787:tablesset.espn <- readHTMLTable(espn)
1448037449062:tablesset.espn <- data.table(tablesset.espn[[1]])
1448037449064:tablesset.espn <- tablesset.espn[is.na(V8)==F]
1448037449066:tablesset.espn <- tablesset.espn[(V2) != 'TEAM']
1448037449067:tablesset.espn <- tablesset.espn[,list(team=as.character(V2), diff=V5)]
1448037449068:tablesset.espn[,pos_neg:=substring(diff,1,1)]
1448037449069:tablesset.espn[,value:=as.numeric(ifelse(pos_neg=='0', str_sub(diff,1),str_sub(diff,2))) ]
1448037449071:tablesset.espn[,pos_neg:=ifelse(pos_neg=='+',1,-1)]
1448037449072:tablesset.espn[,value:=(value*pos_neg)]
1448037449073:tablesset.espn <- tablesset.espn[,list(team,value)]
1448037449074:tablesset.espn[,team:=ifelse(team=='LA Clippers','L.A. Clippers', ifelse(team== 'LA Lakers', 'L.A. Lakers', team))]
1448037449075:tablesset.espn[,estimated_wins:=82 * (1 / (1 + exp(-0.13959 * value))) ]
1448037449077:east <- data.table(tablesset[[1]])
1448037449078:east <- east[is.na(V2)==F]
1448037449079:east <- east[(V2)!='W']
1448037449081:east <- east[,list(V1=as.character(V1),V2,V3)]
1448037449082:east[,num:=as.numeric(substring(V1, nchar(V1)))]
1448037449083:east[,new_name:=ifelse(is.na(num), V1, substring(V1, 1, nchar(V1)-1))]
1448037449084:east[,V1:=new_name]
1448037449085:east <- east[,list(V1=as.character(V1),V2,V3)]
1448037449087:setnames(east, c('team','wins','losses'))
1448037449087:bids <- read.csv('/home/ubuntu/over_under_draft.csv')
1448037449088:bids <- data.table(merge(bids, east, by='team'))
1448037449091:bids <- bids[,list(team=as.character(team),
1448037449092:Team2=as.character(Team),
1448037449092:Vegas,
1448037449092:CBS,
1448037449092:ESPN=as.numeric(as.character(ESPN)),
1448037449092:Average=as.numeric(as.character(Average)),
1448037449092:Over=(as.character(Over)),
1448037449093:Under=(as.character(Under)),
1448037449093:actual_wins=as.numeric(as.character(wins)),
1448037449093:actual_losses=as.numeric(as.character(losses)),
1448037449093:timestamp=as.character(Sys.time()))]
1448037449096:bids[,estimated_wins:=ifelse(actual_wins+actual_losses ==0, 0, actual_wins*82/(actual_wins+actual_losses))]
1448037449098:bids[,estimated_under_over_winner:=ifelse(estimated_wins < Average, 'Under', 'Over')]
1448037449099:bids[,estimated_winner:=ifelse(estimated_wins < Average, Under, Over)]
1448037449100:bids[,estimated_loser:=ifelse(estimated_wins < Average, Over, Under)]
1448037449101:bids[,estimated_winnings:=ifelse(estimated_wins < Average, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037449102:bids[,estimated_losses:=ifelse(Average < estimated_wins, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037449104:#sqlFromRObj(getLstConn()$conn_nav4, bids,  'furman_5374.nba')
1448037449104:total <- merge(bids[,list(winnings=sum(estimated_winnings)), by=list(participant=estimated_winner)], bids[,list(losses=sum(estimated_losses)), by=list(participant=estimated_loser)], by='participant')
1448037449108:total[,total:=winnings+losses]
1448037449109:total <- total[order(-total)]
1448037449112:bids.espn <- read.csv('/home/ubuntu/over_under_draft.csv')
1448037449114:bids.espn <- data.table(merge(bids.espn, east, by='team'))
1448037449117:bids.espn <- bids.espn[,list(team=as.character(team),
1448037449117:Team2=as.character(Team),
1448037449117:Vegas,
1448037449117:CBS,
1448037449118:ESPN=as.numeric(as.character(ESPN)),
1448037449118:Average=as.numeric(as.character(Average)),
1448037449118:Over=(as.character(Over)),
1448037449118:Under=(as.character(Under)),
1448037449118:actual_wins=as.numeric(as.character(wins)),
1448037449119:actual_losses=as.numeric(as.character(losses)),
1448037449119:timestamp=as.character(Sys.time()))]
1448037449122:bids.espn <- merge(bids.espn, tablesset.espn, by='team')
1448037449124:bids.espn[,estimated_under_over_winner:=ifelse(estimated_wins < Average, 'Under', 'Over')]
1448037449125:bids.espn[,estimated_winner:=ifelse(estimated_wins < Average, Under, Over)]
1448037449126:bids.espn[,estimated_loser:=ifelse(estimated_wins < Average, Over, Under)]
1448037449127:bids.espn[,estimated_winnings:=ifelse(estimated_wins < Average, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037449128:bids.espn[,estimated_losses:=ifelse(Average < estimated_wins, (Average-estimated_wins)*3, (estimated_wins-Average)*3)]
1448037449129:total.espn <- merge(bids.espn[,list(winnings=sum(estimated_winnings)), by=list(participant=estimated_winner)], bids.espn[,list(losses=sum(estimated_losses)), by=list(participant=estimated_loser)], by='participant')
1448037449133:total.espn[,total:=winnings+losses]
1448037449134:total.espn <- total.espn[order(-total)]
1448037449135:total_all <- merge(total, total.espn, by='participant')[,list(participant,
1448037449135:winnings_using_percent=round(total.x),
1448037449135:dumb_todd_way=round(total.y))][order(-winnings_using_percent)]
1448037457410:total_all
1448037555246:bids
1448037837414:runApp('~/ShinyApps/nba/')
1448120758052:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1448120766553:dbSendQuery("DELETE FROM import_yahoo.spy where hour(timestamp) < 14")
1448120774023:library(RMySQL)
1448120775835:dbSendQuery("DELETE FROM import_yahoo.spy where hour(timestamp) < 14")
1448120777609:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1448120777755:dbSendQuery("DELETE FROM import_yahoo.spy where hour(timestamp) < 14")
1448120790220:dbSendQuery(con, "DELETE FROM import_yahoo.spy where hour(timestamp) < 14")
1448121188987:dbSendQuery(con, "DELETE FROM import_tradeking.spy where hour(timestamp) < 14")
1448145497005:spy_option <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1448145500391:library(XML)
1448145500391:library(stringr)
1448145500392:library(data.table)
1448145500392:library(rvest)
1448145500462:library(RMySQL)
1448145500462:library(httr)
1448145504832:spy_option <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1448145507590:spy_option <- read_html(paste0("http://finance.yahoo.com/q/op?s=SPY&date=", url$unix_timecodes))
1448145511739:spy_option <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1448145530928:spy_option <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1448145531454:dt.timecodes <- data.table(unix_timecodes = spy_option %>% html_nodes("option") %>% html_attr("value"))
1448145531499:dt.timecodes[,expiration:= substring(as.POSIXct(as.numeric(unix_timecodes), origin="1970-01-01"), 1,10)]
1448145533398:dt.timecodes
1448145541481:i <- 1
1448145543585:url <- dt.timecodes[i,]
1448145543869:spy_option <- read_html(paste0("http://finance.yahoo.com/q/op?s=SPY&date=", url$unix_timecodes))
1448145546381:spy_option
1448145549185:chr.underlying <- as.character(spy_option %>% html_nodes(xpath = '//*[@id="yfs_l84_SPY"]'))
1448145552129:chr.underlying
1448145555177:int.underlying <- as.numeric(substring(chr.underlying,
1448145555275:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1],
1448145555635:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1] +  5 ))
1448145557892:int.underlying
1448145872835:spy_option <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1448145875825:chr.underlying <- as.character(spy_option %>% html_nodes(xpath = '//*[@id="yfs_l84_SPY"]'))
1448145877370:int.underlying <- as.numeric(substring(chr.underlying,
1448145877544:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1],
1448145877911:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1] +  5 ))
1448145880660:int.underlying
1448145893366:spy_option
1448145899650:class(spy_option <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options"))
1448145934744:xmlOptionChain <- as.character(spy_option %>% html_nodes(xpath = '//*[@id="yfs_l84_SPY"]'))
1448145934944:xmlOptionChain <- as.numeric(substring(chr.underlying,
1448145936701:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1],
1448145936857:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1] +  5 ))
1448145938928:xmlOptionChain
1448145947708:xmlOptionChain
1448145965055:xmlOptionChain <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1448145965522:xmlOptionChain <- as.character(spy_option %>% html_nodes(xpath = '//*[@id="yfs_l84_SPY"]'))
1448145984282:xmlUnderlying <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1448145984886:xmlUnderlying <- as.character(spy_option %>% html_nodes(xpath = '//*[@id="yfs_l84_SPY"]'))
1448145987829:xmlUnderlying <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1448145988665:xmlUnderlying <- as.character(xmlUnderlying %>% html_nodes(xpath = '//*[@id="yfs_l84_SPY"]'))
1448145990143:xmlUnderlying
1448146002827:int. <- as.numeric(substring(chr.underlying,
1448146003020:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1],
1448146003443:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1] +  5 ))
1448146012258:intUnderying <- as.numeric(substring(chr.underlying,
1448146012425:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1],
1448146012571:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1] +  5 ))
1448146018410:intUnderying <- as.numeric(substring(xmlUnderlying,
1448146018410:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1],
1448146018410:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1] +  5 ))
1448146021357:intUnderying
1448146028973:data.table(datetime= Sys.time(), intUnderying )
1448146061046:data.table(datetime= format(Sys.Time(), tz="America/New_York",usetz=TRUE), intUnderying )
1448146063957:data.table(datetime= format(Sys.time(), tz="America/New_York",usetz=TRUE), intUnderying )
1448146082399:dt.underlying <- data.frame(datetime= format(Sys.time(), tz="America/New_York",usetz=TRUE), intUnderying )
1448146087893:dfUnderlying <- data.frame(datetime= format(Sys.time(), tz="America/New_York",usetz=TRUE), intUnderying )
1448146090092:dfUnderlying
1448146117741:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448146133207:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448146133690:dbWriteTable(con, value = dfUnderlying, name = "spy", append = TRUE, row.names=F )
1448146154383:xmlUnderlying <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1448146155453:xmlUnderlying <- as.character(xmlUnderlying %>% html_nodes(xpath = '//*[@id="yfs_l84_SPY"]'))
1448146155458:intUnderying <- as.numeric(substring(xmlUnderlying,
1448146155458:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1],
1448146155458:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1] +  5 ))
1448146155459:dfUnderlying <- data.frame(datetime= format(Sys.time(), tz="America/New_York",usetz=TRUE), intUnderying )
1448146155460:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448146155461:dbWriteTable(con, value = dfUnderlying, name = "spy", append = TRUE, row.names=F )
1448146190533:xmlUnderlying <- read_html("http://finance.yahoo.com/q/op?s=SPY+Options")
1448146191485:xmlUnderlying <- as.character(xmlUnderlying %>% html_nodes(xpath = '//*[@id="yfs_l84_SPY"]'))
1448146191490:intUnderying <- as.numeric(substring(xmlUnderlying,
1448146191490:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1],
1448146191490:gregexpr("[0-9][0-9][0-9].[0-9][0-9]", chr.underlying)[[1]][1] +  5 ))
1448146191491:dfUnderlying <- data.frame(datetime= as.character(format(Sys.time(), tz="America/New_York",usetz=TRUE)), intUnderying )
1448146191492:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448146191493:dbWriteTable(con, value = dfUnderlying, name = "spy", append = TRUE, row.names=F )
1448146279681:dfUnderlying
1448146284701:dfUnderlying <- data.frame(datetime= as.character(format(Sys.time(), tz="America/New_York",usetz=TRUE)), underlying=intUnderying )
1448146287077:dfUnderlying
1448146293424:dbWriteTable(con, value = dfUnderlying, name = "spy", append = TRUE, row.names=F , field.types=list(datetime="datetime", underlying="decimal(5,2)"))
1448146305859:dfUnderlying
1448146312804:dfUnderlying <- data.frame(datetime= (format(Sys.time(), tz="America/New_York",usetz=TRUE)), underlying=intUnderying )
1448146313231:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448146313508:dbWriteTable(con, value = dfUnderlying, name = "spy", append = TRUE, row.names=F , field.types=list(datetime="datetime", underlying="decimal(5,2)"))
1448146374658:dfUnderlying
1448146390985:dfUnderlying <- data.frame(datetime= substring(format(Sys.time(), tz="America/New_York",usetz=TRUE),1,19), underlying=intUnderying )
1448146393449:dfUnderlying
1448146396323:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448146396498:dbWriteTable(con, value = dfUnderlying, name = "spy", append = TRUE, row.names=F , field.types=list(datetime="datetime", underlying="decimal(5,2)"))
1448147131601:df.insert <- data.frame(date= Sys.Date(), value=305 )
1448147134416:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448147145157:df.insert <- data.frame(date= Sys.Date(), value=305.22 )
1448147145612:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448147145956:dbWriteTable(con, value = df.insert, name = "spy", append = TRUE, row.names=F , field.types=list(date="date", underlying="decimal(5,2)"))
1448147153513:dbWriteTable(con, value = df.insert, name = "spy", append = TRUE, row.names=F , field.types=list(date="date", underlying="decimal(5,2)"))
1448147160346:df.insert <- data.frame(date= Sys.Date(), value=305.22 )
1448147165082:df.insert
1448147169941:dbWriteTable(con, value = df.insert, name = "spy", append = TRUE, row.names=F , field.types=list(date="date", value="decimal(5,2)"))
1448147174506:df.insert
1448147182187:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448147182706:dbWriteTable(con, value = df.insert, name = "spy", append = TRUE, row.names=F , field.types=list(date="date", value="decimal(5,2)"))
1448148466390:install.packages('slackr')
1448148498800:install.packages('slackr')
1448148504863:install.packages("slackr")
1448148937005:df <- data.frame(date= Sys.Date(), value=305.22 )
1448148937130:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448148937791:dbWriteTable(con, value = df, name = "spy", append = TRUE, row.names=F , field.types=list(date="date", value="decimal(5,2)"))
1448161229595:library(sendmailR)
1448161229630:sendmail_options(smtpServer="ASPMX.L.GOOGLE.COM")
1448161229630:from <- "<hello@me.com>"
1448161229631:to <- "<robert.j.carlton@gmail.com>"
1448161229631:subject <- "Welcome!"
1448161229631:msg <- "To The Rock"
1448161229631:sendmail(from, to, subject, msg)
1448200299984:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy where vwap > 0 and year(expiration) = 2014 and expiration in (",
1448200300121:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep=""), ") "  )))
1448200315875:library(data.table)
1448200323922:library(data.table)
1448200323923:#library(fOptions)
1448200323923:#library(Quandl)
1448200323923:library(lubridate)
1448200324180:library(httpuv)
1448200324220:library(ggplot2)
1448200339044:organizeData <- function(dt) {
1448200339045:dt <-  dt[,list(symbol=underlying_symbol,
1448200339045:trade_date=as.character(quote_date),
1448200339045:root,
1448200339045:expiration=as.character(expiration),
1448200339046:strike,
1448200339046:call_put=option_type,
1448200339047:bid=bid_1545,
1448200339047:ask=ask_1545,
1448200339047:underlying = underlying_ask_eod,
1448200339047:distance_from_underlying = ifelse(option_type=='c', underlying_ask_eod - strike, strike- underlying_ask_eod),
1448200339048:iv = implied_volatility_1545,
1448200339048:vol = trade_volume,
1448200339048:delta = delta_1545,
1448200339048:gamma = gamma_1545,
1448200339049:theta = theta_1545,
1448200339049:vega = vega_1545,
1448200339049:rho = rho_1545,
1448200339049:vwap,
1448200339050:trade_volume,
1448200339050:strip=paste0(substring(expiration,1,8),'01'))]
1448200339050:return(dt)
1448200339051:}
1448200339052:expirations <- data.table(dbGetQuery(conn = con,statement = 'select expiration, month(expiration) month, year(expiration) year, sum(trade_volume) trade_volume from import_livevol.spy group by expiration  '))
1448200339055:expirations <-  merge(expirations,expirations[,list(trade_volume=max(trade_volume)), by=list(month,year)], by=c('month','year','trade_volume'))
1448200339061:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy where vwap > 0 and year(expiration) = 2014 and expiration in (",
1448200339062:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep=""), ") "  )))
1448200348202:con <- dbConnect(dbDriver("MySQL"), user = "carlton", password = "1234password", dbname = "test_db")
1448200352024:organizeData <- function(dt) {
1448200352025:dt <-  dt[,list(symbol=underlying_symbol,
1448200352025:trade_date=as.character(quote_date),
1448200352025:root,
1448200352025:expiration=as.character(expiration),
1448200352025:strike,
1448200352026:call_put=option_type,
1448200352026:bid=bid_1545,
1448200352026:ask=ask_1545,
1448200352026:underlying = underlying_ask_eod,
1448200352026:distance_from_underlying = ifelse(option_type=='c', underlying_ask_eod - strike, strike- underlying_ask_eod),
1448200352027:iv = implied_volatility_1545,
1448200352027:vol = trade_volume,
1448200352027:delta = delta_1545,
1448200352027:gamma = gamma_1545,
1448200352028:theta = theta_1545,
1448200352028:vega = vega_1545,
1448200352028:rho = rho_1545,
1448200352028:vwap,
1448200352029:trade_volume,
1448200352029:strip=paste0(substring(expiration,1,8),'01'))]
1448200352029:return(dt)
1448200352030:}
1448200352031:expirations <- data.table(dbGetQuery(conn = con,statement = 'select expiration, month(expiration) month, year(expiration) year, sum(trade_volume) trade_volume from import_livevol.spy group by expiration  '))
1448200373771:expirations <-  merge(expirations,expirations[,list(trade_volume=max(trade_volume)), by=list(month,year)], by=c('month','year','trade_volume'))
1448200373775:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy where vwap > 0 and year(expiration) = 2014 and expiration in (",
1448200373775:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep=""), ") "  )))
1448200433950:dt.spy
1448200441183:dt.spy <- organizeData(dt.spy)
1448200444118:dt.spy
1448204709480:dt.positions <- data.table()
1448204720962:expirations <- data.table(dbGetQuery(conn = con,statement = 'select expiration, month(expiration) month, year(expiration) year, sum(trade_volume) trade_volume from import_livevol.spy group by expiration  '))
1448204720964:expirations <-  merge(expirations,expirations[,list(trade_volume=max(trade_volume)), by=list(month,year)], by=c('month','year','trade_volume'))
1448204720967:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy where vwap > 0 and year(expiration) = 2014 and expiration in (",
1448204720967:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep=""), ") "  )))
1448204742881:dt.spy <- organizeData(dt.spy)
1448204743000:dt.spy
1448206864945:saveRDS(dt.spy, '/home/ubuntu/Dropbox/SPYHedge/spy_2014.rds')
1448206933784:saveRDS(dt.spy, '/home/ubuntu/Dropbox/SPYHedge/spy_2014.rds')
1448206993304:saveRDS(dt.spy, '/home/ubuntu/Dropbox/SPYHedge/spy_2014.rds')
1448207220457:readRDS('/home/ubuntu/Dropbox/SPYHedge/spy_2014.rds')
1448207244419:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy where vwap > 0 and year(expiration) = 2013 and expiration in (",
1448207244698:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep=""), ") "  )))
1448207266713:dt.spy <- organizeData(dt.spy)
1448207270849:saveRDS(dt.spy, '/home/ubuntu/Dropbox/SPYHedge/spy_2013.rds')
1448207282582:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy where vwap > 0 and year(expiration) = 2012 and expiration in (",
1448207282819:paste("'",as.character(expirations$expiration),"'",collapse=", ",sep=""), ") "  )))
1448207304730:saveRDS(dt.spy, '/home/ubuntu/Dropbox/SPYHedge/spy_2012.rds')
1448207389560:i <- 2012
1448207394322:paste0('/home/ubuntu/Dropbox/SPYHedge/spy_',i,'.rds')
1448207400964:i <- 2005
1448207403261:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448207403431:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448207403560:paste("'",as.character(expirations$expiration),"'",
1448207403716:collapse=", ",sep=""), ") "  )))
1448207440195:dt.spy
1448207445952:dt.spy <- organizeData(dt.spy)
1448207446854:saveRDS(dt.spy, paste0('/home/ubuntu/Dropbox/SPYHedge/spy_',i,'.rds'))
1448207455532:for (i in 2005:2015) {
1448207455532:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448207455532:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448207455532:paste("'",as.character(expirations$expiration),"'",
1448207455533:collapse=", ",sep=""), ") "  )))
1448207455533:dt.spy <- organizeData(dt.spy)
1448207455533:saveRDS(dt.spy, paste0('/home/ubuntu/Dropbox/SPYHedge/spy_',i,'.rds'))
1448207455533:}
1448207825048:dt.spy
1448208148760:for (i in 2005:2015) {
1448208148906:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448208149047:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448208149206:paste("'",as.character(expirations$expiration),"'",
1448208149356:collapse=", ",sep=""), ") "  )))
1448208149667:dt.spy <- organizeData(dt.spy)
1448208149851:saveRDS(dt.spy, paste0('/home/ubuntu/Dropbox/SPYHedge/spy_',i,'.rds'))
1448208150227:}
1448236966535:dt.spy <- readRDS('/home/ubuntu/Dropbox/SPYHedge/spy_2014.rds')
1448236968546:dt.spy
1448241892714:dt.positions <- data.table()
1448241896722:dt.spy
1448241924547:dt.spy[trade_date > '2013-12-31']
1448242432890:dt.spy
1448242496663:getBestOption
1448242508478:getBestOption(data=under2,chr.trade_date = '2014-01-02',chr.expiration =  '2015-01-17',chr.option_type =  'p', int.min_delta = .3)
1448242508479:getBestOption <- function(data,
1448242508479:chr.trade_date,
1448242508479:chr.expiration,
1448242508480:chr.option_type,
1448242508480:int.min_delta = NULL,
1448242508480:int.strike = NULL,
1448242508480:chr.money_in_out = NULL,
1448242508480:int.min_dollar = NULL ) {
1448242508481:if(nrow(data[chr.trade_date==trade_date]) == 0) {warning("No results"); return(NA)}
1448242508481:if(nrow(data[chr.expiration==expiration ]) == 0) {warning("No results"); return(NA)}
1448242508481:if(is.null(int.min_delta) & is.null(int.strike) & (is.null(chr.money_in_out) & is.null(int.min_dollar))) { warning("Must have delta/strike or in-out combo") ;return(NA) }
1448242508482:if ( !is.null(int.strike) ) {
1448242508482:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & strike == int.strike ]
1448242508483:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1448242508483:}
1448242508484:if ( !is.null(int.min_delta)) {
1448242508484:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & abs(delta) <= int.min_delta ][order(-abs(delta))]
1448242508484:if(nrow(dt.result) > 0) {return(dt.result[1,])} else {warning("No results"); return(NA)}
1448242508485:}
1448242508485:int.money_in_out <- ifelse(chr.money_in_out == 'in', 1, -1)
1448242508486:if (int.money_in_out > 0 ) {
1448242508486:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying >= int.money_in_out*int.min_dollar ][order(distance_from_underlying)]
1448242508487:} else {
1448242508487:dt.result <- data[trade_date == chr.trade_date & expiration==chr.expiration & call_put == chr.option_type & distance_from_underlying <= int.money_in_out*int.min_dollar ][order(-distance_from_underlying)]
1448242508487:}
1448242508488:if (nrow(dt.result) == 0) { warning("No results Returned"); return(NA) } else { return(dt.result[1,]) }
1448242508489:}
1448242543923:dt.spy
1448242582220:getBestOption(data=dt.spy,chr.trade_date = '2014-01-02', chr.expiration = '2014-01-18', chr.option_type = 'c',int.min_delta = .3)
1448243173485:dt.spy[,unique(expiration)]
1448243214239:dt.pos2 <- getBestOption(data=dt.spy,chr.trade_date = '2014-03-02',
1448243214426:chr.expiration = '2014-10-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=-1]
1448243223038:dt.spy
1448243229530:dt.spy[trade_date=='2014-03-02']
1448243232943:dt.pos2 <- getBestOption(data=dt.spy,chr.trade_date = '2014-03-05',
1448243233072:chr.expiration = '2014-10-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=-1]
1448243237117:dt.pos2
1448243241532:dt.pos2
1448243252159:Sys.info()
1448243426228:dt.pos1 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448243426381:chr.expiration = '2014-01-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=1]
1448243426550:dt.pos2 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448243426780:chr.expiration = '2014-10-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=-1]
1448243435630:dt.pos1[,trade_id:=1]
1448243443450:dt.pos2[,trade_id:=2]
1448243452262:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448243454705:dt.portfolio
1448243564684:dt.portfolio
1448243571704:dt.spy
1448243607879:dt.portfolio
1448243618496:dt.spy[trade_date=='2014-01-03']
1448243699396:dt.portfolio
1448243705380:dt.spy
1448243725532:chr.trade_date <- '2014-01-03'
1448243734973:dt.spy[trade_date==chr.trade_date]
1448243746317:dt.portfolio
1448243778661:dt.slim <- data[trade_date==chr.trade_date]
1448243781320:data
1448243784547:dt.slim <- data[trade_date==chr.trade_date]
1448243786639:dt.slim
1448243795340:dt.portfolio
1448243849217:dt.portfolio
1448243887904:dt.portfolio
1448243897218:dt.portfolio[,list(symbol,trade_date=chr.trade_date)]
1448243919490:dt.portfolio[,list(symbol,trade_date=chr.trade_date, expiration, strike, call_put)]
1448243949209:dt.update <- merge(dt.slim, dt.portfolio[,list(symbol,trade_date=chr.trade_date, expiration, strike, call_put)], by=c('symbol','trade_date','expiration','strike','call_put'))
1448243952385:dt.update
1448243965024:dt.update <- merge(dt.slim, dt.portfolio[,list(symbol,trade_date=chr.trade_date, expiration, strike, call_put, qty, trade_id)], by=c('symbol','trade_date','expiration','strike','call_put'))
1448243967938:dt.update
1448243974054:dt.portfolio
1448243978113:ncol(dt.update)
1448243984327:ncol(dt.portfolio)
1448243986872:dt.update
1448244321356:total <- rbind(
1448244321357:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==190][call_put=='p'],
1448244321357:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==214][call_put=='c'],
1448244321357:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==205][call_put=='p'],
1448244321357:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==205][call_put=='c']
1448244321358:)
1448244321383:total[,qty:=c(1,1,-1,-1)]
1448244325643:total
1448244342273:dt.spy
1448244362456:dt.spy <- readRDS('/home/ubuntu/Dropbox/SPYHedge/spy_2015.rds')
1448244423145:for (i in 2005:2015) {
1448244423146:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448244423146:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448244423146:paste("'",as.character(expirations$expiration),"'",
1448244423146:collapse=", ",sep=""), ") "  )))
1448244423147:dt.spy <- organizeData(dt.spy)
1448244423147:saveRDS(dt.spy, paste0('/home/ubuntu/optionsdata/rds/spy_',i,'.rds'))
1448244423147:}
1448244452212:con <- dbConnect(MySQL(), user="carlton", password= '1234password',db='import_tradeking' )
1448244456327:for (i in 2005:2015) {
1448244456328:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448244456328:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448244456328:paste("'",as.character(expirations$expiration),"'",
1448244456328:collapse=", ",sep=""), ") "  )))
1448244456329:dt.spy <- organizeData(dt.spy)
1448244456329:saveRDS(dt.spy, paste0('/home/ubuntu/optionsdata/rds/spy_',i,'.rds'))
1448244456329:}
1448244531558:dt.spu
1448244534511:dt.spy
1448244542016:saveRDS(dt.spy, paste0('/home/ubuntu/optionsdata/rds/spy_',i,'.rds'))
1448244555992:saveRDS(dt.spy, paste0('/home/ubuntu/optionsdata/rds/spy_',i,'.rds'))
1448244566096:saveRDS(dt.spy, paste0('/home/ubuntu/optionsdata/rds/spy_',i,'.rds'))
1448244574551:saveRDS(dt.spy, paste0('/home/ubuntu/optionsdata/rds/spy_',i,'.rds'))
1448244607082:saveRDS(dt.spy, paste0('/home/ubuntu/optionsdata/rds/spy_',i,'.rds'))
1448244618879:saveRDS(dt.spy, paste0('/home/ubuntu/optionsdata/rds/spy_',i,'.rds'))
1448244715632:saveRDS(dt.spy, paste0('/home/ubuntu/optionsdata/rds/spy_',i,'.rds'))
1448244719137:for (i in 2005:2015) {
1448244719138:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448244719138:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448244719138:paste("'",as.character(expirations$expiration),"'",
1448244719138:collapse=", ",sep=""), ") "  )))
1448244719139:dt.spy <- organizeData(dt.spy)
1448244719139:saveRDS(dt.spy, paste0('/home/ubuntu/optionsdata/rds/spy_',i,'.rds'))
1448244719139:}
1448245055485:getCachedObject <- function(chr.name) {
1448245055485:dt <- readRDS(paste0('/home/ubuntu/optionsdata/rds/', chr.name ,'.rds'))
1448245055486:}
1448245072939:dt.spy <- getCachedObject('spy_2015')
1448245077897:total <- rbind(
1448245077898:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==190][call_put=='p'],
1448245077898:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==214][call_put=='c'],
1448245077898:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==205][call_put=='p'],
1448245077898:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==205][call_put=='c']
1448245077899:)
1448245077925:total[,qty:=c(1,1,-1,-1)]
1448245080543:total
1448245096113:total[,trade_id:=c(1,2,3,4)]
1448245110397:chr.trade_date <- '2015-01-05'
1448245115717:data <- dt.spy
1448245118960:dt.slim <- data[trade_date==chr.trade_date]
1448245123965:total
1448245129666:dt.portfolio <- total
1448245132002:dt.portfolio
1448245134994:dt.update <- merge(dt.slim, dt.portfolio[,list(symbol,trade_date=chr.trade_date, expiration, strike, call_put, qty, trade_id)], by=c('symbol','trade_date','expiration','strike','call_put'))
1448245138338:dt.update
1448245220586:dt.portfolio
1448245519109:dt.portfolio
1448245566399:dt.update
1448245576208:dt.portfolio <- rbind(dt.portfolio, dt.update)
1448245578735:dt.portfolio
1448246818036:dt.portfolio
1448246841195:dt.portfolio.slim <- dt.portfolio[trade_date == max(dt.portfolio$trade_date)]
1448246843944:dt.portfolio.slim
1448246853179:chr.trade_date <- '2015-01-06'
1448246853714:dt.slim <- data[trade_date==chr.trade_date]
1448246854185:dt.portfolio.slim <- dt.portfolio[trade_date == max(dt.portfolio$trade_date)]
1448246854513:dt.update <- merge(dt.slim, dt.portfolio[,list(symbol,trade_date=chr.trade_date, expiration, strike, call_put, qty, trade_id)], by=c('symbol','trade_date','expiration','strike','call_put'))
1448246855025:dt.portfolio <- rbind(dt.portfolio, dt.update)
1448246866212:total <- rbind(
1448246866213:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==190][call_put=='p'],
1448246866213:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==214][call_put=='c'],
1448246866213:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==205][call_put=='p'],
1448246866213:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==205][call_put=='c']
1448246866213:)
1448246866238:total[,qty:=c(1,1,-1,-1)]
1448246866239:total[,trade_id:=c(1,2,3,4)]
1448246866240:dt.portfolio <- total
1448246869291:chr.trade_date <- '2015-01-05'
1448246870024:dt.slim <- data[trade_date==chr.trade_date]
1448246870257:dt.portfolio.slim <- dt.portfolio[trade_date == max(dt.portfolio$trade_date)]
1448246870454:dt.update <- merge(dt.slim, dt.portfolio.slim[,list(symbol,trade_date=chr.trade_date, expiration, strike, call_put, qty, trade_id)], by=c('symbol','trade_date','expiration','strike','call_put'))
1448246870784:dt.portfolio <- rbind(dt.portfolio, dt.update)
1448246873034:dt.portfolio
1448246879192:chr.trade_date <- '2015-01-06'
1448246879931:dt.slim <- data[trade_date==chr.trade_date]
1448246880171:dt.portfolio.slim <- dt.portfolio[trade_date == max(dt.portfolio$trade_date)]
1448246880357:dt.update <- merge(dt.slim, dt.portfolio.slim[,list(symbol,trade_date=chr.trade_date, expiration, strike, call_put, qty, trade_id)], by=c('symbol','trade_date','expiration','strike','call_put'))
1448246880765:dt.portfolio <- rbind(dt.portfolio, dt.update)
1448246883755:dt.portfolio
1448246890517:dt.portfolio.slim
1448246904477:dt.portfolio
1448247202891:updateMarks <- function(data=dt.spy,  dt.portfolio, chr.trade_date) {
1448247202891:dt.slim <- data[trade_date==chr.trade_date]
1448247202892:dt.portfolio.slim <- dt.portfolio[trade_date == max(dt.portfolio$trade_date)]
1448247202892:dt.update <- merge(dt.slim, dt.portfolio.slim[,list(symbol,trade_date=chr.trade_date, expiration, strike, call_put, qty, trade_id)], by=c('symbol','trade_date','expiration','strike','call_put'))
1448247202892:dt.portfolio <- rbind(dt.portfolio, dt.update)
1448247202892:return(dt.portfolio)
1448247202893:}
1448247215092:total <- rbind(
1448247215092:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==190][call_put=='p'],
1448247215092:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==214][call_put=='c'],
1448247215093:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==205][call_put=='p'],
1448247215093:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==205][call_put=='c']
1448247215093:)
1448247215119:total[,qty:=c(1,1,-1,-1)]
1448247215120:total[,trade_id:=c(1,2,3,4)]
1448247215121:dt.portfolio <- total
1448247229011:updateMarks(dt.portfolio = dt.portfolio, chr.trade_date='2015-01-05')
1448247232564:updateMarks(dt.portfolio = dt.portfolio, chr.trade_date='2015-01-06')
1448247236463:updateMarks(dt.portfolio = dt.portfolio, chr.trade_date='2015-01-05')
1448248160063:dt.spy
1448248172160:total <- rbind(
1448248172161:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==190][call_put=='p'],
1448248172161:dt.spy[trade_date=='2015-01-02'][expiration=='2015-12-19'][strike ==214][call_put=='c'],
1448248172161:dt.spy[trade_date=='2015-01-02'][expiration=='2015-12-19'][strike ==205][call_put=='p'],
1448248172161:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==205][call_put=='c']
1448248172161:)
1448248172191:total[,qty:=c(1,1,-1,-1)]
1448248172193:total[,trade_id:=c(1,2,3,4)]
1448248172194:dt.portfolio <- total
1448248172195:updateMarks <- function(data=dt.spy,  dt.portfolio, chr.trade_date) {
1448248172195:dt.slim <- data[trade_date==chr.trade_date]
1448248172195:dt.portfolio.slim <- dt.portfolio[trade_date == max(dt.portfolio$trade_date)]
1448248172195:dt.update <- merge(dt.slim, dt.portfolio.slim[,list(symbol,trade_date=chr.trade_date, expiration, strike, call_put, qty, trade_id)], by=c('symbol','trade_date','expiration','strike','call_put'))
1448248172195:dt.portfolio <- rbind(dt.portfolio, dt.update)
1448248172195:return(dt.portfolio)
1448248172196:}
1448248185764:total
1448248197753:total <- rbind(
1448248197924:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==190][call_put=='p'],
1448248198082:dt.spy[trade_date=='2015-01-02'][expiration=='2015-12-19'][strike ==200][call_put=='c'],
1448248198229:dt.spy[trade_date=='2015-01-02'][expiration=='2015-12-19'][strike ==205][call_put=='p'],
1448248198504:dt.spy[trade_date=='2015-01-02'][expiration=='2015-02-20'][strike ==205][call_put=='c']
1448248198932:)
1448248199301:total[,qty:=c(1,1,-1,-1)]
1448248199867:total[,trade_id:=c(1,2,3,4)]
1448248201497:dt.portfolio <- total
1448248217224:updateMarks(dt.portfiolio=dt.portfolio, '2015-01-05')
1448248224499:updateMarks(dt.portfiolio=dt.portfolio, chr.trade_date = '2015-01-05')
1448248230174:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2015-01-05')
1448248785296:getCachedObject <- function(chr.name) {
1448248785296:dt <- readRDS(paste0('/home/ubuntu/optionsdata/rds/', chr.name ,'.rds'))
1448248785296:}
1448248940985:saveRDS(dt.spy, paste0('/home/ubuntu/cache/spy_options/spy_',i,'.rds'))
1448248995948:chr.location = 'spy_options/'
1448249041193:paste0('/home/ubuntu/cache/',chr.location,'.rds')
1448249045066:paste0('/home/ubuntu/cache/',chr.location)
1448249111669:dir.create(paste0('/home/ubuntu/cache/',chr.location))
1448249131217:dir.create(paste0('/home/ubuntu/cache/',chr.location))
1448249143188:dir.create(paste0('/home/ubuntu/cache/',chr.location))
1448249145697:dir.create(paste0('/home/ubuntu/cache/',chr.location))
1448249146427:dir.create(paste0('/home/ubuntu/cache/',chr.location))
1448249155396:suppressWarnings(dir.create(paste0('/home/ubuntu/cache/',chr.location)))
1448249163833:chr.location
1448249255831:chr.name <- 'spy_2015'
1448249261050:mxt.data <- dt.spy
1448249263049:saveRDS(mxt.data, paste0('/home/ubuntu/cache/',chr.location,'/',chr.name))
1448249296510:chr.location
1448249316185:chr.name = paste0('spy_',i)
1448249319532:chr.name
1448249333579:for (i in 2005:2015) {
1448249333579:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448249333579:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448249333579:paste("'",as.character(expirations$expiration),"'",
1448249333580:collapse=", ",sep=""), ") "  )))
1448249333580:dt.spy <- organizeData(dt.spy)
1448249333580:cacheObject(mxt.data = dt.spy, chr.location= 'spy_options/', chr.name = paste0('spy_',i))
1448249333580:}
1448249405234:cacheObject <- function(mxt.data, chr.location, chr.name) {
1448249405235:suppressWarnings(dir.create(paste0('/home/ubuntu/cache/',chr.location)))
1448249405235:saveRDS(mxt.data, paste0('/home/ubuntu/cache/',chr.location,'/',chr.name))
1448249405235:}
1448249411021:dt.spy
1448249413825:cacheObject(mxt.data = dt.spy, chr.location= 'spy_options/', chr.name = paste0('spy_',i))
1448249417927:for (i in 2005:2015) {
1448249417928:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448249417928:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448249417928:paste("'",as.character(expirations$expiration),"'",
1448249417928:collapse=", ",sep=""), ") "  )))
1448249417929:dt.spy <- organizeData(dt.spy)
1448249417929:cacheObject(mxt.data = dt.spy, chr.location= 'spy_options/', chr.name = paste0('spy_',i))
1448249417929:}
1448249672097:cacheObject <- function(mxt.data, chr.location, chr.name) {
1448249672098:suppressWarnings(dir.create(paste0('/home/ubuntu/cache/',chr.location)))
1448249672098:saveRDS(mxt.data, paste0('/home/ubuntu/cache/',chr.location,'/',chr.name))
1448249672098:}
1448249672098:getCachedObject <- function(chr.location, chr.name) {
1448249672099:dt <- readRDS(paste0('/home/ubuntu/cache/',chr.location,'/',chr.name,'.rds'))
1448249672099:return(dt)
1448249672099:}
1448249700574:dt.spy <- getCachedObject(chr.location = 'spy_options/', chr.name='spy_2015')
1448249714699:dt.spy <- getCachedObject(chr.location = 'spy_options', chr.name='spy_2015')
1448249780109:cacheObject <- function(mxt.data, chr.location, chr.name) {
1448249780109:suppressWarnings(dir.create(paste0('/home/ubuntu/cache/',chr.location)))
1448249780109:saveRDS(mxt.data, paste0('/home/ubuntu/cache/',chr.location,'/',chr.name, '.rds'))
1448249780110:}
1448249782555:getCachedObject <- function(chr.location, chr.name) {
1448249782555:dt <- readRDS(paste0('/home/ubuntu/cache/',chr.location,'/',chr.name,'.rds'))
1448249782555:return(dt)
1448249782555:}
1448249791773:for (i in 2005:2015) {
1448249791774:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448249791774:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448249791774:paste("'",as.character(expirations$expiration),"'",
1448249791774:collapse=", ",sep=""), ") "  )))
1448249791775:dt.spy <- organizeData(dt.spy)
1448249791775:cacheObject(mxt.data = dt.spy, chr.location= 'spy_options/', chr.name = paste0('spy_',i))
1448249791775:}
1448250069820:dt.spy <- getCachedObject(chr.location = 'spy_options', chr.name='spy_2015')
1448250073074:dt.spy
1448250525391:dt.positions <- data.table()
1448250525392:dt.pos1 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448250525392:chr.expiration = '2014-01-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=1]
1448250525406:dt.pos1[,trade_id:=1]
1448250525407:dt.pos2 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448250525407:chr.expiration = '2014-10-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=-1]
1448250525420:dt.pos2[,trade_id:=2]
1448250525421:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448250530419:dt.pos1 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448250530634:chr.expiration = '2014-01-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=1]
1448250535224:dt.spy
1448250559303:dt.spy <- getCachedObject(chr.location = 'spy_options', chr.name='spy_2014')
1448250569238:dt.pos1 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448250569238:chr.expiration = '2014-01-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=1]
1448250569286:dt.pos1[,trade_id:=1]
1448250569287:dt.pos2 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448250569287:chr.expiration = '2014-10-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=-1]
1448250569333:dt.pos2[,trade_id:=2]
1448250569334:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448250590438:updateMarks(dt.portfolio = dt.portfolio,chr.trade_date = '2014-01-03')
1448251529414:dt.spy
1448284075630:dt.spy
1448284080825:tables(dt.psy)
1448284083855:tables(dt.spy)
1448284087291:tables()
1448286794270:dt.spy
1448286804590:dt.spy <- getCachedObject(chr.location = 'spy_options/', chr.name='spy_2014')
1448286807390:dt.spy
1448286969301:list.files('/home/ubuntu/cache/)
1448286973323:list.files('/home/ubuntu/cache/')
1448286982868:list.files('/home/ubuntu/cache/spy_options/')
1448287047545:describeCache(chr.location) {
1448287047545:chr.directory <- list.files(paste0('/home/ubuntu/cache/', chr.location))
1448287047546:return(chr.directory)
1448287047546:}
1448287059118:paste0('/home/ubuntu/cache/', chr.location)
1448287064234:chr.directory <- list.files(paste0('/home/ubuntu/cache/', chr.location))
1448287066037:return(chr.directory)
1448287069198:describeCache(chr.location) {
1448287069448:chr.directory <- list.files(paste0('/home/ubuntu/cache/', chr.location))
1448287069679:return(chr.directory)
1448287069934:}
1448287075595:describeCache <- function(chr.location) {
1448287075847:chr.directory <- list.files(paste0('/home/ubuntu/cache/', chr.location))
1448287076017:return(chr.directory)
1448287076157:}
1448287089314:describeCache()
1448287092501:describeCache('')
1448287106672:describeCache('spy_options/')
1448288420025:# improved list of objects
1448288420026:.ls.objects <- function (pos = 1, pattern, order.by,
1448288420026:decreasing=FALSE, head=FALSE, n=5) {
1448288420026:napply <- function(names, fn) sapply(names, function(x)
1448288420026:fn(get(x, pos = pos)))
1448288420027:names <- ls(pos = pos, pattern = pattern)
1448288420027:obj.class <- napply(names, function(x) as.character(class(x))[1])
1448288420027:obj.mode <- napply(names, mode)
1448288420027:obj.type <- ifelse(is.na(obj.class), obj.mode, obj.class)
1448288420028:obj.size <- napply(names, object.size)
1448288420028:obj.dim <- t(napply(names, function(x)
1448288420028:as.numeric(dim(x))[1:2]))
1448288420028:vec <- is.na(obj.dim)[, 1] & (obj.type != "function")
1448288420029:obj.dim[vec, 1] <- napply(names, length)[vec]
1448288420029:out <- data.frame(obj.type, obj.size, obj.dim)
1448288420029:names(out) <- c("Type", "Size", "Rows", "Columns")
1448288420029:if (!missing(order.by))
1448288420030:out <- out[order(out[[order.by]], decreasing=decreasing), ]
1448288420030:if (head)
1448288420030:out <- head(out, n)
1448288420031:out
1448288420031:}
1448288420032:# shorthand
1448288420032:lsos <- function(..., n=10) {
1448288420032:.ls.objects(..., order.by="Size", decreasing=TRUE, head=TRUE, n=n)
1448288420032:}
1448288422574:lsos
1448288425166:lsos()
1448288506317:source('~/rPackageFunctions/toCreate.R')
1448288517149:supressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448288522270:surpressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448288533425:supressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448288545973:suppressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448288652564:dt.spy <- getCachedObject(chr.location = 'spy_options/', chr.name='spy_2014')
1448288660529:dt.spy <- getCachedObject(chr.location = 'spy_options/', chr.name='spy_2014')
1448288663740:suppressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448288665608:dt.spy <- getCachedObject(chr.location = 'spy_options/', chr.name='spy_2014')
1448288667908:dt.spy
1448289460523:suppressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448289671154:f <- data.table(dbGetQuery(con, 'select * from tradeking.spy limit 5'))
1448289675325:f
1448289703561:dt.spy
1448289709452:class(dt.spy$symbol)
1448289822909:organizeDataTradeking <- function(dt) {
1448289822910:dt <-  dt[,list(symbol=underlying_symbol,
1448289822910:trade_date=as.character(quote_date),
1448289822910:root=underlying_symbol,
1448289822910:expiration=as.character(expiration),
1448289822911:strike,
1448289822911:call_put=option_type,
1448289822911:bid,
1448289822911:ask,
1448289822912:underlying = underlying_ask,
1448289822912:distance_from_underlying = ifelse(option_type=='c', underlying_ask - strike, strike- underlying_ask),
1448289822912:iv = implied_volatility_1545,
1448289822912:vol = trade_volume,
1448289822913:delta,
1448289822913:gamma,
1448289822913:theta,
1448289822913:vega,
1448289822913:rho,
1448289822914:vwap,
1448289822914:trade_volume,
1448289822914:strip=paste0(substring(expiration,1,8),'01'))]
1448289822915:return(dt)
1448289822915:}
1448289830014:organizeDataTradeking((f))
1448289839768:organizeDataTradeking <- function(dt) {
1448289839769:dt <-  dt[,list(symbol=underlying_symbol,
1448289839769:trade_date=as.character(quote_date),
1448289839769:root=underlying_symbol,
1448289839769:expiration=as.character(expiration),
1448289839769:strike,
1448289839770:call_put=option_type,
1448289839770:bid,
1448289839770:ask,
1448289839770:underlying = underlying_ask,
1448289839770:distance_from_underlying = ifelse(option_type=='c', underlying_ask - strike, strike- underlying_ask),
1448289839771:iv = implied_volatility,
1448289839771:vol = trade_volume,
1448289839771:delta,
1448289839771:gamma,
1448289839772:theta,
1448289839772:vega,
1448289839772:rho,
1448289839772:vwap,
1448289839773:trade_volume,
1448289839773:strip=paste0(substring(expiration,1,8),'01'))]
1448289839773:return(dt)
1448289839774:}
1448289842418:organizeDataTradeking((f))
1448289856265:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448289856406:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448289856565:paste("'",as.character(expirations$expiration),"'",
1448289856709:collapse=", ",sep=""), ") "  )))
1448289862393:i <- 2005
1448289865689:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448289865838:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448289865982:paste("'",as.character(expirations$expiration),"'",
1448289866338:collapse=", ",sep=""), ") "  )))
1448289872525:from import_livevol.spy group by expiration  '))
1448289872526:expirations <- data.table(dbGetQuery(conn = con,statement = 'select expiration, month(expiration) month, year(expiration) year, sum(trade_volume) trade_volume
1448289872531:expirations <-  merge(expirations,expirations[,list(trade_volume=max(trade_volume)), by=list(month,year)], by=c('month','year','trade_volume'))
1448289879821:expirations <- data.table(dbGetQuery(conn = con,statement = 'select expiration, month(expiration) month, year(expiration) year, sum(trade_volume) trade_volume
1448289879821:from import_livevol.spy group by expiration  '))
1448289901648:expirations <-  merge(expirations,expirations[,list(trade_volume=max(trade_volume)), by=list(month,year)], by=c('month','year','trade_volume'))
1448289945019:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448289945220:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448289945358:paste("'",as.character(expirations$expiration),"'",
1448289945725:collapse=", ",sep=""), ") "  )))
1448289972591:dt.spy
1448289994021:suppressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448290000535:for (i in 2005:2015) {
1448290000536:dt.spy <- data.table(dbGetQuery(conn = con,statement = paste0("select * from import_livevol.spy
1448290000536:where vwap > 0 and year(expiration) = ",i," and expiration in (",
1448290000536:paste("'",as.character(expirations$expiration),"'",
1448290000536:collapse=", ",sep=""), ") "  )))
1448290000537:dt.spy <- organizeData(dt.spy)
1448290000537:cacheObject(mxt.data = dt.spy, chr.location= 'spy_options/', chr.name = paste0('spy_',i))
1448290000538:}
1448296286278:dt.spy <- getCachedOpbject('spy_options/')
1448296292157:dt.spy <- getCachedOpbject('spy_options/spy_2015')
1448296298066:dt.spy <- getCachedObject('spy_options/spy_2015')
1448296306525:dt.spy <- getCachedObject('spy_options/','spy_2014')
1448296309137:dt.spy
1448304558963:dt.spy
1448304652529:dt.spy
1448304658960:dt.positions <- data.table()
1448304658960:dt.pos1 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448304658961:chr.expiration = '2014-01-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=1]
1448304658961:dt.pos1[,trade_id:=1]
1448304658962:dt.pos2 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448304658962:chr.expiration = '2014-10-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=-1]
1448304658962:dt.pos2[,trade_id:=2]
1448304658962:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448304667262:suppressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448304806620:suppressWarnings(source('~/rPackageFunctions/toCreateOptionFunctions.R'))
1448304817189:dt.pos1 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448304817189:chr.expiration = '2014-01-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=1]
1448304817239:dt.pos1[,trade_id:=1]
1448304817240:dt.pos2 <- getBestOption(data=dt.spy,chr.trade_date = '2014-01-02',
1448304817240:chr.expiration = '2014-10-18', chr.option_type = 'c',int.min_delta = .3)[,qty:=-1]
1448304817287:dt.pos2[,trade_id:=2]
1448304817288:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448304819418:dt.portfolio
1448304826118:updateMarks()
1448304828351:updateMarks(
1448304830659:updateMarks
1448304838970:updateMarks
1448305053134:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448306180868:dt.portfolio
1448306384823:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448308161245:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448308220754:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-04')
1448308224273:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448308689330:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-05')
1448308693865:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-04')
1448308701305:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448309425950:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448309679953:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448309680297:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448309682578:dt.portfolio
1448309692125:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448309694200:dt.portfolio
1448309697107:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448309697321:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448309699075:dt.portfolio
1448310323665:getBestOption('2014-01-03')
1448310351329:getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)
1448310399624:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0]
1448310407114:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id=2]
1448310409889:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448310411186:q
1448310413472:q
1448310420782:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448310423148:dt.portfolio
1448310436541:dt.portfolio <- rbind(dt.portfolio, q)
1448310440501:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448310440761:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448310440967:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448310441269:dt.portfolio <- rbind(dt.portfolio, q)
1448310442299:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448310444975:dt.portfolio
1448310468192:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448310468194:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448310468202:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448310468248:dt.portfolio <- rbind(dt.portfolio, q)
1448310479251:data=dt.spy
1448310481110:dt.portfolio
1448310493905:chr.trade_date <- '2014-01-06'
1448310495904:dt.slim <- data[trade_date==chr.trade_date]
1448310498924:dt.slim
1448310507786:dt.portfolio[trade_date == max(dt.portfolio$trade_date)]
1448310713198:dt.portfolio.slim <- dt.portfolio[trade_date == max(dt.portfolio$trade_date)]
1448310715510:dt.portfolio.slim
1448310731827:chr.trade_date
1448310738341:dt.portfolio.slim
1448310746921:dt.portfolio.slim
1448310753079:dt.portfolio.slim[qty==0]
1448310756179:dt.portfolio.slim[qty==0]$trade_id
1448310794270:dt.portfolio.slim <- dt.portfolio.slim[!trade_id %in% dt.portfolio.slim[qty==0]$trade_id]
1448310796484:dt.portfolio.slim
1448310800353:updateMarks <- function(data=dt.spy,  dt.portfolio, chr.trade_date) {
1448310800353:dt.slim <- data[trade_date==chr.trade_date]
1448310800353:dt.portfolio.slim <- dt.portfolio[trade_date == max(dt.portfolio$trade_date)]
1448310800354:#remove closed trades
1448310800354:dt.portfolio.slim <- dt.portfolio.slim[!trade_id %in% dt.portfolio.slim[qty==0]$trade_id]
1448310800354:dt.update <- merge(dt.slim, dt.portfolio.slim[,list(symbol,trade_date=chr.trade_date, expiration, strike, call_put, qty, trade_id)], by=c('symbol','trade_date','expiration','strike','call_put'))
1448310800354:dt.portfolio <- rbind(dt.portfolio, dt.update)
1448310800354:return(dt.portfolio)
1448310800355:}
1448310817018:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448310817020:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448310817031:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448310817080:dt.portfolio <- rbind(dt.portfolio, q)
1448310817081:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448310821402:suppressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448310821553:suppressWarnings(source('~/rPackageFunctions/toCreateOptionFunctions.R'))
1448310827720:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448310827722:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448310827730:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448310827777:dt.portfolio <- rbind(dt.portfolio, q)
1448310827778:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448310829596:dt.portfolio
1448310843862:dt.slim <- data[trade_date==chr.trade_date]
1448310848459:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448310848461:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448310848469:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448310848515:dt.portfolio <- rbind(dt.portfolio, q)
1448310850824:dt.portfolio
1448310857838:dt.slim <- data[trade_date==chr.trade_date]
1448310882525:suppressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448310882661:suppressWarnings(source('~/rPackageFunctions/toCreateOptionFunctions.R'))
1448310897715:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448310897717:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448310897727:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448310897774:dt.portfolio <- rbind(dt.portfolio, q)
1448310897775:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448310897786:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-07')
1448310899925:dt.portfolio
1448310976631:dt.portfolio[trade_id==1]
1448311015720:tables()
1448311021819:gc()
1448313040280:gc()
1448313233981:library(DceSql)
1448313233982:library(DceZn)
1448313233983:DceZn:::.setLiveFilesystem(FALSE)
1448313233985:source(paste0(getZnWd(),'/dce/dce/ppa/strategies/termR/run/DailyIntramonth.R'))
1448313333619:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448313333620:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448313333631:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448313333677:dt.portfolio <- rbind(dt.portfolio, q)
1448313333678:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448313333688:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-07')
1448313335542:dt.portfolio
1448313368774:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-07', chr.expiration='2014-01-18',chr.option_type = 'c',int.strike = 186)[,qty:=0][,trade_id:=2]
1448313369531:dt.portfolio <- rbind(dt.portfolio, q)
1448313372246:dt.portfolio
1448313385349:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-08')
1448313415521:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448313415522:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448313415534:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448313415581:dt.portfolio <- rbind(dt.portfolio, q)
1448313415582:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448313415593:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-07')
1448313415604:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-07', chr.expiration='2014-01-18',chr.option_type = 'c',int.strike = 186)[,qty:=0][,trade_id:=1]
1448313415652:dt.portfolio <- rbind(dt.portfolio, q)
1448313417536:dt.portfolio
1448313418932:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-08')
1448313428616:dt.portfolio
1448313439101:dt.slim <- data[trade_date==chr.trade_date]
1448313440803:dt.portfolio.slim <- dt.portfolio[trade_date == max(dt.portfolio$trade_date)]
1448313441144:#remove closed trades
1448313441545:dt.portfolio.slim <- dt.portfolio.slim[!trade_id %in% dt.portfolio.slim[qty==0]$trade_id]
1448313443250:dt.portfolio.slim
1448313478759:suppressWarnings(source('~/rPackageFunctions/toCreateOptionFunctions.R'))
1448313482633:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448313482634:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448313482645:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448313482692:dt.portfolio <- rbind(dt.portfolio, q)
1448313482693:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448313482704:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-07')
1448313482715:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-07', chr.expiration='2014-01-18',chr.option_type = 'c',int.strike = 186)[,qty:=0][,trade_id:=1]
1448313482762:dt.portfolio <- rbind(dt.portfolio, q)
1448313482763:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-08')
1448313975363:dt.portfolio
1448315078247:pullForecast(getLstConn(), 194314, chr.aggregation='daily')[,mean(price), by=date]
1448315347309:dt.portfolio
1448315572442:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-08')
1448315576358:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-09')
1448315673996:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448315673998:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448315674009:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448315674055:dt.portfolio <- rbind(dt.portfolio, q)
1448315674056:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448315674067:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-07')
1448315674077:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-07', chr.expiration='2014-01-18',chr.option_type = 'c',int.strike = 186)[,qty:=0][,trade_id:=1]
1448315674124:dt.portfolio <- rbind(dt.portfolio, q)
1448315676293:dt.portfolio
1448315716219:mtm <- data.table()
1448315716220:for ( j in unique(dt.positions$trade_id)) {
1448315716221:temp <- dt.positions[trade_id == j][order(trade_date)]
1448315716221:temp[,yest_ask:=c(NA, temp[,ifelse(qty>0, ask, bid)*qty][-nrow(temp)])]
1448315716221:temp[,dmtm:=ifelse(is.na(yest_ask) == T, 0,ifelse(qty>0, ask, bid)*qty-yest_ask)]
1448315716221:mtm <- rbind(mtm, temp)[order(trade_date)]
1448315716221:}
1448315717901:mtm
1448315722192:dt.portfolio
1448315725927:mtm <- data.table()
1448315725928:for ( j in unique(dt.portfolio$trade_id)) {
1448315725928:temp <- dt.portfolio[trade_id == j][order(trade_date)]
1448315725928:temp[,yest_ask:=c(NA, temp[,ifelse(qty>0, ask, bid)*qty][-nrow(temp)])]
1448315725929:temp[,dmtm:=ifelse(is.na(yest_ask) == T, 0,ifelse(qty>0, ask, bid)*qty-yest_ask)]
1448315725929:mtm <- rbind(mtm, temp)[order(trade_date)]
1448315725929:}
1448315728512:mtm
1448315846451:j <- 1
1448315954749:temp <- dt.portfolio[trade_id == j][order(trade_date)]
1448315956276:temp
1448315960898:temp[,yest_ask:=c(NA, temp[,ifelse(qty>0, ask, bid)*qty][-nrow(temp)])]
1448315962992:temp
1448315996288:temp[,dmtm:=ifelse(is.na(yest_ask) == T, 0,ifelse(qty>0, ask, bid)*qty-yest_ask)]
1448315998454:temp
1448316007329:mtm
1448316032801:mtm <- data.table()
1448316032802:for ( j in unique(dt.portfolio$trade_id)) {
1448316032802:temp <- dt.portfolio[trade_id == j][qty!=0][order(trade_date)]
1448316032802:temp[,yest_ask:=c(NA, temp[,ifelse(qty>0, ask, bid)*qty][-nrow(temp)])]
1448316032803:temp[,dmtm:=ifelse(is.na(yest_ask) == T, 0,ifelse(qty>0, ask, bid)*qty-yest_ask)]
1448316032803:mtm <- rbind(mtm, temp)[order(trade_date)]
1448316032803:}
1448316034714:mtm
1448316043815:mtm[,sum(dmtm), by=trade_date]
1448316052612:mtm[,sum(dmtm), by=trade_id]
1448316728763:mtm[,sum(dmtm), by=trade_date]
1448316733112:mtm[,sum(dmtm), by=trade_date][,sum(V1)]
1448316782373:mtm <- data.table()
1448316782374:for ( j in unique(dt.portfolio$trade_id)) {
1448316782374:temp <- dt.portfolio[trade_id == j][qty!=0][order(trade_date)]
1448316782375:temp[,yest_ask:=c(NA, temp[,ifelse(qty>0, ask, bid)*qty][-nrow(temp)])]
1448316782375:temp[,dmtm:=ifelse(is.na(yest_ask) == T, 0,ifelse(qty>0, ask, bid)*qty-yest_ask)]
1448316782375:mtm <- rbind(mtm, temp)[order(trade_id, trade_date)]
1448316782375:}
1448316784610:mtm
1448316826682:getPortfolioMtm <- function(dt.portfolio) {
1448316826682:dt.mtm <- data.table()
1448316826682:for ( j in unique(dt.portfolio$trade_id)) {
1448316826683:temp <- dt.portfolio[trade_id == j][qty!=0][order(trade_date)]
1448316826683:temp[,yest_ask:=c(NA, temp[,ifelse(qty>0, ask, bid)*qty][-nrow(temp)])]
1448316826683:temp[,dmtm:=ifelse(is.na(yest_ask) == T, 0,ifelse(qty>0, ask, bid)*qty-yest_ask)]
1448316826683:dt.mtm <- rbind(dt.mtm, temp)[order(trade_id, trade_date)]
1448316826683:}
1448316826684:}
1448316833890:getPortfolioMtm <- function(dt.portfolio) {
1448316833891:dt.mtm <- data.table()
1448316833891:for ( j in unique(dt.portfolio$trade_id)) {
1448316833891:temp <- dt.portfolio[trade_id == j][qty!=0][order(trade_date)]
1448316833891:temp[,yest_ask:=c(NA, temp[,ifelse(qty>0, ask, bid)*qty][-nrow(temp)])]
1448316833891:temp[,dmtm:=ifelse(is.na(yest_ask) == T, 0,ifelse(qty>0, ask, bid)*qty-yest_ask)]
1448316833892:dt.mtm <- rbind(dt.mtm, temp)[order(trade_id, trade_date)]
1448316833892:}
1448316833892:return(dt.mtm)
1448316833892:}
1448316835660:dt.portfolio
1448316840885:getPortfolioMtm(getPortfolioMtm)
1448316846536:getPortfolioMtm(dt.portfolio)
1448316855540:getPortfolioMtm(dt.portfolio)[,sum(dmtm)]
1448317405638:getPortfolioMtm(dt.portfolio)[,sum(dmtm)]
1448317409682:getPortfolioMtm(getPortfolioMtm)
1448317417051:updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-09')
1448317466819:dt.portfolio
1448317536287:expirations
1448317594496:getExpirations <- function(connSettings=con) {
1448317594496:dt.expirations <- data.table(dbGetQuery(conn = connSettings,statement = 'select expiration, month(expiration) month, year(expiration) year, sum(trade_volume) trade_volume
1448317594496:from import_livevol.spy group by expiration  '))
1448317594497:dt.expirations <-  merge(dt.expirations,dt.expirations[,list(trade_volume=max(trade_volume)), by=list(month,year)], by=c('month','year','trade_volume'))
1448317594497:return(dt.expirations[,list(expiration)])
1448317594497:}
1448317604600:getExpirations(con)
1448317624555:getExpirations(con)
1448317635672:expirations <- getExpirations(con)
1448317638360:expirations
1448318728533:dt.spy
1448318732604:dt.spy
1448321050209:dt.portfolio
1448327094052:dt.portfolio
1448327423742:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448327625869:dt.portfolio
1448327635879:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448327636466:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448327636961:dt.portfolio <- rbind(dt.portfolio, q)
1448327639511:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448327642177:dt.portfolio
1448327645401:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-07')
1448327645583:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-07', chr.expiration='2014-01-18',chr.option_type = 'c',int.strike = 186)[,qty:=0][,trade_id:=1]
1448327645999:dt.portfolio <- rbind(dt.portfolio, q)
1448327648260:dt.portfolio
1448327657341:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448327662954:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448327663109:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448327663277:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448327663426:dt.portfolio <- rbind(dt.portfolio, q)
1448327665294:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448327667925:dt.portfolio
1448327807331:getBestOption(data=dt.spy, chr.trade_date = '2014-01-03',chr.expiration = '2014-01-18', chr.option_type = 'c',int.min_delta = .5)
1448327815553:getBestOption(data=dt.spy, chr.trade_date = '2014-01-03',chr.expiration = '2014-01-18', chr.option_type = 'c',int.min_delta = .51)
1448327818522:getBestOption(data=dt.spy, chr.trade_date = '2014-01-03',chr.expiration = '2014-01-18', chr.option_type = 'c',int.min_delta = .55)
1448327844373:getBestOption(data=dt.spy, chr.trade_date = '2014-01-03',chr.expiration = '2014-01-18', chr.option_type = 'c',chr.money_in_out = 'out',int.min_dollar = 0)
1448327877178:getBestOption(data=dt.spy, chr.trade_date = '2014-01-03',chr.expiration = '2014-02-22', chr.option_type = 'c',chr.money_in_out = 'out',int.min_dollar = 0)
1448327896218:dt.portfolio
1448327911705:expirations
1448327921024:expirations[expiration>chr.trade_date]
1448327945850:expirations[expiration>chr.trade_date][order(expiration)]
1448327949226:expirations[expiration>chr.trade_date][order(expiration)][1,]
1448327980005:dt.atm <- getBestOption(data=dt.spy,
1448327980005:chr.trade_date = chr.trade_date,
1448327980005:chr.expiration =expirations[expiration>chr.trade_date][order(expiration)][1,]$expiration,
1448327980005:chr.option_type = 'c',
1448327980006:chr.money_in_out = 'out',
1448327980006:int.min_dollar = 0)
1448327982841:dt.atm
1448327986123:int.vol <- dt.atm$iv
1448327991774:dt.atm
1448327994950:chr.trade_date
1448327999981:dt.portfolio
1448328011533:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448328011534:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448328011546:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448328011592:dt.portfolio <- rbind(dt.portfolio, q)
1448328011593:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448328014272:dt.portfolio
1448328037532:int.vol <- dt.atm$iv
1448328039324:int.underlying <- dt.atm$underlying
1448328043064:dt.portfolio[,sum(qty*delta)*100]
1448328043067:int.current_gamma <- dt.portfolio
1448328047757:dt.portfolio
1448328053476:dt.portfolio[trade_date==chr.trade_date]
1448328063760:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448328063876:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448328067641:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448328069151:dt.portfolio <- rbind(dt.portfolio, q)
1448328078933:chr.trade_date <- '2014-01-03'
1448328085154:dt.portfolio
1448328146202:dt.portfolio.slim <- dt.portfolio[trade_date==chr.trade_date]
1448328151746:dt.portfolio.slim
1448328155073:dt.portfolio.slim <- dt.portfolio.slim[!trade_id %in% dt.portfolio.slim[qty==0]$trade_id]
1448328157331:dt.portfolio.slim
1448328161672:int.current_delta <- dt.portfolio[,sum(qty*delta)*100]
1448328164493:int.current_delta
1448328170003:int.current_gamma <- dt.portfolio[,sum(qty*gamma)*100]
1448328173793:int.current_gamma
1448328179352:int.oneSDmove <- int.underlying*(int.vol)*(sqrt(1/365))
1448328182350:int.oneSDmove
1448328185657:int.range_gamma <- abs(int.oneSDmove * (int.current_gamma)/2 )
1448328188510:int.range_gamma
1448328252058:int.range_gamma
1448328260267:int.current_delta
1448328313868:list(current_delta = int.current_delta, range_gamma=int.range_gamma)
1448328321548:ls.metrics <- list(current_delta = int.current_delta, range_gamma=int.range_gamma)
1448328338008:getRangeAcceptableDelta <- function(data=dt.spy, chr.trade_date, dt.portfolio) {
1448328338008:dt.atm <- getBestOption(data=dt.spy,
1448328338008:chr.trade_date = chr.trade_date,
1448328338008:chr.expiration =expirations[expiration>chr.trade_date][order(expiration)][1,]$expiration,
1448328338009:chr.option_type = 'c',
1448328338009:chr.money_in_out = 'out',
1448328338009:int.min_dollar = 0)
1448328338009:int.vol <- dt.atm$iv
1448328338009:int.underlying <- dt.atm$underlying
1448328338010:dt.portfolio.slim <- dt.portfolio[trade_date==chr.trade_date]
1448328338010:dt.portfolio.slim <- dt.portfolio.slim[!trade_id %in% dt.portfolio.slim[qty==0]$trade_id]
1448328338010:int.current_delta <- dt.portfolio[,sum(qty*delta)*100]
1448328338010:int.current_gamma <- dt.portfolio[,sum(qty*gamma)*100]
1448328338010:int.oneSDmove <- int.underlying*(int.vol)*(sqrt(1/365))
1448328338011:int.range_gamma <- abs(int.oneSDmove * (int.current_gamma)/2 )
1448328338011:ls.metrics <- list(current_delta = int.current_delta, range_gamma=int.range_gamma)
1448328338011:return(ls.metrics)
1448328338012:}
1448328495272:suppressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448328495465:suppressWarnings(source('~/rPackageFunctions/toCreateOptionFunctions.R'))
1448328500545:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448328500547:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448328500562:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448328500607:dt.portfolio <- rbind(dt.portfolio, q)
1448328500608:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448328502925:dt.portfolio
1448328530484:getRangeAcceptableDelta(chr.trade_date = '2014-01-06', dt.portfolio = dt.portfolio)
1448328603883:suppressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448328604052:suppressWarnings(source('~/rPackageFunctions/toCreateOptionFunctions.R'))
1448328607087:dt.portfolio <- rbind(dt.pos1, dt.pos2)
1448328607088:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-03')
1448328607098:q <- getBestOption(data = dt.spy, chr.trade_date= '2014-01-03', chr.expiration='2014-10-18',chr.option_type = 'c',int.strike = 195)[,qty:=0][,trade_id:=2]
1448328607144:dt.portfolio <- rbind(dt.portfolio, q)
1448328607145:dt.portfolio <- updateMarks(dt.portfolio=dt.portfolio, chr.trade_date = '2014-01-06')
1448328613492:getRangeAcceptableDelta(chr.trade_date = '2014-01-06', dt.portfolio = dt.portfolio)
1448337009975:dt.portfolio
1448338567368:suppressWarnings(source('~/rPackageFunctions/toCreate.R'))
1448338567469:suppressWarnings(source('~/rPackageFunctions/toCreateOptionFunctions.R'))
1448338605177:optVertical(data = dt.spy,chr.trade_date = '2014-01-06', chr.expiration = '2014-01-18', chr.option_type = 'c',chr.long_short = 'long',vec.deltas = c(.15,.3))
1448338614773:optVertical(data = dt.spy,chr.trade_date = '2014-01-06', chr.expiration = '2014-01-18', chr.option_type = 'c',chr.long_short = 'long',vec.deltas = c(.15,.3))[,sum(qty*delta)]
1448338631525:optVertical(data = dt.spy,chr.trade_date = '2014-01-06', chr.expiration = '2014-01-18', chr.option_type = 'c',chr.long_short = 'long',vec.deltas = c(.15,.32))[,sum(qty*delta)]
1448338635621:optVertical(data = dt.spy,chr.trade_date = '2014-01-06', chr.expiration = '2014-01-18', chr.option_type = 'c',chr.long_short = 'long',vec.deltas = c(.15,.35))[,sum(qty*delta)]
1448338649260:optVertical(data = dt.spy,chr.trade_date = '2014-01-06', chr.expiration = '2014-01-18', chr.option_type = 'c',chr.long_short = 'short',vec.deltas = c(.15,.35))[,sum(qty*delta)]
1448338655821:optVertical(data = dt.spy,chr.trade_date = '2014-01-06', chr.expiration = '2014-01-18', chr.option_type = 'p',chr.long_short = 'long',vec.deltas = c(.15,.35))[,sum(qty*delta)]
1448338659231:optVertical(data = dt.spy,chr.trade_date = '2014-01-06', chr.expiration = '2014-01-18', chr.option_type = 'p',chr.long_short = 'short',vec.deltas = c(.15,.35))[,sum(qty*delta)]
1448338689569:optVertical(data = dt.spy,chr.trade_date = '2014-01-06', chr.expiration = '2014-01-18', chr.option_type = 'p',chr.long_short = 'short',vec.deltas = c(.15,.35))[,sum(qty*delta)]
1448338971404:optVertical(data = dt.spy,chr.trade_date = '2014-01-06', chr.expiration = '2014-01-18', chr.option_type = 'p',chr.long_short = 'short',vec.deltas = c(.15,.35), int.qty=2)[,sum(qty*delta)]
1448338977190:optVertical(data = dt.spy,chr.trade_date = '2014-01-06', chr.expiration = '2014-01-18', chr.option_type = 'p',chr.long_short = 'short',vec.deltas = c(.15,.35), int.qty=2)[,sum(qty*delta*100)]
1448339863799:dbGetQuery
1448339899200:dbGetQuery("select * from tradeking.spy")
1448339907172:dbGetQuery(con,"select * from tradeking.spy")
1448339913884:dbGetQuery(con,"select * from tradeking.spy limit 5")
1448339918869:x <- dbGetQuery(con,"select * from tradeking.spy limit 5")
1448339919944:x
1448339933591:organizeDataTradeking(x)
1448339944684:x
1448339950689:x <- data.table(x)
1448339953104:organizeDataTradeking(x)
